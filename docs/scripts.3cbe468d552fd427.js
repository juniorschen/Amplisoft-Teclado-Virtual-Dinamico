var webgazer;(()=>{var ik={483:(Ht,te,Nt)=>{Ht.exports=function ae(Re,Xt,le){function ee(wt,U){if(!Xt[wt]){if(!Re[wt]){if($t)return $t(wt,!0);var B=new Error("Cannot find module '"+wt+"'");throw B.code="MODULE_NOT_FOUND",B}var st=Xt[wt]={exports:{}};Re[wt][0].call(st.exports,function(ct){return ee(Re[wt][1][ct]||ct)},st,st.exports,ae,Re,Xt,le)}return Xt[wt].exports}for(var $t=void 0,Yt=0;Yt<le.length;Yt++)ee(le[Yt]);return ee}({1:[function(ae,Re,Xt){(function(le){"use strict";var ee,$t,Yt=le.MutationObserver||le.WebKitMutationObserver;if(Yt){var wt=0,U=new Yt(H),B=le.document.createTextNode("");U.observe(B,{characterData:!0}),ee=function(){B.data=wt=++wt%2}}else if(le.setImmediate||void 0===le.MessageChannel)ee="document"in le&&"onreadystatechange"in le.document.createElement("script")?function(){var tt=le.document.createElement("script");tt.onreadystatechange=function(){H(),tt.onreadystatechange=null,tt.parentNode.removeChild(tt),tt=null},le.document.documentElement.appendChild(tt)}:function(){setTimeout(H,0)};else{var st=new le.MessageChannel;st.port1.onmessage=H,ee=function(){st.port2.postMessage(0)}}var ct=[];function H(){var tt,Et;$t=!0;for(var kt=ct.length;kt;){for(Et=ct,ct=[],tt=-1;++tt<kt;)Et[tt]();kt=ct.length}$t=!1}Re.exports=function mt(tt){1!==ct.push(tt)||$t||ee()}}).call(this,void 0!==Nt.g?Nt.g:typeof self<"u"?self:typeof window<"u"?window:{})},{}],2:[function(ae,Re,Xt){"use strict";var le=ae(1);function ee(){}var $t={},Yt=["REJECTED"],wt=["FULFILLED"],U=["PENDING"];function B(ut){if("function"!=typeof ut)throw new TypeError("resolver must be a function");this.state=U,this.queue=[],this.outcome=void 0,ut!==ee&&mt(this,ut)}function st(ut,vt,q){this.promise=ut,"function"==typeof vt&&(this.onFulfilled=vt,this.callFulfilled=this.otherCallFulfilled),"function"==typeof q&&(this.onRejected=q,this.callRejected=this.otherCallRejected)}function ct(ut,vt,q){le(function(){var E;try{E=vt(q)}catch(ot){return $t.reject(ut,ot)}E===ut?$t.reject(ut,new TypeError("Cannot resolve promise with itself")):$t.resolve(ut,E)})}function H(ut){var vt=ut&&ut.then;if(ut&&("object"==typeof ut||"function"==typeof ut)&&"function"==typeof vt)return function(){vt.apply(ut,arguments)}}function mt(ut,vt){var q=!1;function E(oe){q||(q=!0,$t.reject(ut,oe))}function ot(oe){q||(q=!0,$t.resolve(ut,oe))}var Pt=tt(function Rt(){vt(ot,E)});"error"===Pt.status&&E(Pt.value)}function tt(ut,vt){var q={};try{q.value=ut(vt),q.status="success"}catch(E){q.status="error",q.value=E}return q}Re.exports=B,B.prototype.catch=function(ut){return this.then(null,ut)},B.prototype.then=function(ut,vt){if("function"!=typeof ut&&this.state===wt||"function"!=typeof vt&&this.state===Yt)return this;var q=new this.constructor(ee);return this.state!==U?ct(q,this.state===wt?ut:vt,this.outcome):this.queue.push(new st(q,ut,vt)),q},st.prototype.callFulfilled=function(ut){$t.resolve(this.promise,ut)},st.prototype.otherCallFulfilled=function(ut){ct(this.promise,this.onFulfilled,ut)},st.prototype.callRejected=function(ut){$t.reject(this.promise,ut)},st.prototype.otherCallRejected=function(ut){ct(this.promise,this.onRejected,ut)},$t.resolve=function(ut,vt){var q=tt(H,vt);if("error"===q.status)return $t.reject(ut,q.value);var E=q.value;if(E)mt(ut,E);else{ut.state=wt,ut.outcome=vt;for(var ot=-1,Rt=ut.queue.length;++ot<Rt;)ut.queue[ot].callFulfilled(vt)}return ut},$t.reject=function(ut,vt){ut.state=Yt,ut.outcome=vt;for(var q=-1,E=ut.queue.length;++q<E;)ut.queue[q].callRejected(vt);return ut},B.resolve=function Et(ut){return ut instanceof this?ut:$t.resolve(new this(ee),ut)},B.reject=function kt(ut){var vt=new this(ee);return $t.reject(vt,ut)},B.all=function zt(ut){var vt=this;if("[object Array]"!==Object.prototype.toString.call(ut))return this.reject(new TypeError("must be an array"));var q=ut.length,E=!1;if(!q)return this.resolve([]);for(var ot=new Array(q),Rt=0,Pt=-1,oe=new this(ee);++Pt<q;)ge(ut[Pt],Pt);return oe;function ge(ke,Ne){vt.resolve(ke).then(function I(Ae){ot[Ne]=Ae,++Rt!==q||E||(E=!0,$t.resolve(oe,ot))},function(Ae){E||(E=!0,$t.reject(oe,Ae))})}},B.race=function ie(ut){if("[object Array]"!==Object.prototype.toString.call(ut))return this.reject(new TypeError("must be an array"));var q=ut.length,E=!1;if(!q)return this.resolve([]);for(var ot=-1,Rt=new this(ee);++ot<q;)this.resolve(ut[ot]).then(function(ge){E||(E=!0,$t.resolve(Rt,ge))},function(ge){E||(E=!0,$t.reject(Rt,ge))});return Rt}},{1:1}],3:[function(ae,Re,Xt){(function(le){"use strict";"function"!=typeof le.Promise&&(le.Promise=ae(2))}).call(this,void 0!==Nt.g?Nt.g:typeof self<"u"?self:typeof window<"u"?window:{})},{2:2}],4:[function(ae,Re,Xt){"use strict";var le="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(T){return typeof T}:function(T){return T&&"function"==typeof Symbol&&T.constructor===Symbol&&T!==Symbol.prototype?"symbol":typeof T},Yt=function $t(){try{if(typeof indexedDB<"u")return indexedDB;if(typeof webkitIndexedDB<"u")return webkitIndexedDB;if(typeof mozIndexedDB<"u")return mozIndexedDB;if(typeof OIndexedDB<"u")return OIndexedDB;if(typeof msIndexedDB<"u")return msIndexedDB}catch{return}}();function U(T,F){T=T||[],F=F||{};try{return new Blob(T,F)}catch(G){if("TypeError"!==G.name)throw G;for(var D=new(typeof BlobBuilder<"u"?BlobBuilder:typeof MSBlobBuilder<"u"?MSBlobBuilder:typeof MozBlobBuilder<"u"?MozBlobBuilder:WebKitBlobBuilder),j=0;j<T.length;j+=1)D.append(T[j]);return D.getBlob(F.type)}}typeof Promise>"u"&&ae(3);var B=Promise;function st(T,F){F&&T.then(function(D){F(null,D)},function(D){F(D)})}function ct(T,F,D){"function"==typeof F&&T.then(F),"function"==typeof D&&T.catch(D)}function H(T){return"string"!=typeof T&&(console.warn(T+" used as a key, but it is not a string."),T=String(T)),T}function mt(){if(arguments.length&&"function"==typeof arguments[arguments.length-1])return arguments[arguments.length-1]}var tt="local-forage-detect-blob-support",Et=void 0,kt={},zt=Object.prototype.toString,ie="readonly",ut="readwrite";function vt(T){for(var F=T.length,D=new ArrayBuffer(F),j=new Uint8Array(D),G=0;G<F;G++)j[G]=T.charCodeAt(G);return D}function ot(T){var F=kt[T.name],D={};D.promise=new B(function(j,G){D.resolve=j,D.reject=G}),F.deferredOperations.push(D),F.dbReady=F.dbReady?F.dbReady.then(function(){return D.promise}):D.promise}function Rt(T){var F=kt[T.name].deferredOperations.pop();if(F)return F.resolve(),F.promise}function Pt(T,F){var D=kt[T.name].deferredOperations.pop();if(D)return D.reject(F),D.promise}function oe(T,F){return new B(function(D,j){if(kt[T.name]=kt[T.name]||{forages:[],db:null,dbReady:null,deferredOperations:[]},T.db){if(!F)return D(T.db);ot(T),T.db.close()}var G=[T.name];F&&G.push(T.version);var Z=Yt.open.apply(Yt,G);F&&(Z.onupgradeneeded=function(ht){var xt=Z.result;try{xt.createObjectStore(T.storeName),ht.oldVersion<=1&&xt.createObjectStore(tt)}catch(It){if("ConstraintError"!==It.name)throw It;console.warn('The database "'+T.name+'" has been upgraded from version '+ht.oldVersion+" to version "+ht.newVersion+', but the storage "'+T.storeName+'" already exists.')}}),Z.onerror=function(ht){ht.preventDefault(),j(Z.error)},Z.onsuccess=function(){D(Z.result),Rt(T)}})}function ge(T){return oe(T,!1)}function ke(T){return oe(T,!0)}function Ne(T,F){if(!T.db)return!0;var D=!T.db.objectStoreNames.contains(T.storeName),G=T.version>T.db.version;if(T.version<T.db.version&&(T.version!==F&&console.warn('The database "'+T.name+"\" can't be downgraded from version "+T.db.version+" to version "+T.version+"."),T.version=T.db.version),G||D){if(D){var Z=T.db.version+1;Z>T.version&&(T.version=Z)}return!0}return!1}function Ae(T){return U([vt(atob(T.data))],{type:T.type})}function Je(T){return T&&T.__local_forage_encoded_blob}function vn(T){var F=this,D=F._initReady().then(function(){var j=kt[F._dbInfo.name];if(j&&j.dbReady)return j.dbReady});return ct(D,T,T),D}function he(T,F,D,j){void 0===j&&(j=1);try{var G=T.db.transaction(T.storeName,F);D(null,G)}catch(Z){if(j>0&&(!T.db||"InvalidStateError"===Z.name||"NotFoundError"===Z.name))return B.resolve().then(function(){if(!T.db||"NotFoundError"===Z.name&&!T.db.objectStoreNames.contains(T.storeName)&&T.version<=T.db.version)return T.db&&(T.version=T.db.version+1),ke(T)}).then(function(){return function nt(T){ot(T);for(var F=kt[T.name],D=F.forages,j=0;j<D.length;j++){var G=D[j];G._dbInfo.db&&(G._dbInfo.db.close(),G._dbInfo.db=null)}return T.db=null,ge(T).then(function(Z){return T.db=Z,Ne(T)?ke(T):Z}).then(function(Z){T.db=F.db=Z;for(var ht=0;ht<D.length;ht++)D[ht]._dbInfo.db=Z}).catch(function(Z){throw Pt(T,Z),Z})}(T).then(function(){he(T,F,D,j-1)})}).catch(D);D(Z)}}var Po={_driver:"asyncStorage",_initStorage:function zo(T){var F=this,D={db:null};if(T)for(var j in T)D[j]=T[j];var G=kt[D.name];G||(kt[D.name]=G={forages:[],db:null,dbReady:null,deferredOperations:[]}),G.forages.push(F),F._initReady||(F._initReady=F.ready,F.ready=vn);var Z=[];function ht(){return B.resolve()}for(var xt=0;xt<G.forages.length;xt++){var It=G.forages[xt];It!==F&&Z.push(It._initReady().catch(ht))}var Tt=G.forages.slice(0);return B.all(Z).then(function(){return D.db=G.db,ge(D)}).then(function(Lt){return D.db=Lt,Ne(D,F._defaultConfig.version)?ke(D):Lt}).then(function(Lt){D.db=G.db=Lt,F._dbInfo=D;for(var qt=0;qt<Tt.length;qt++){var xe=Tt[qt];xe!==F&&(xe._dbInfo.db=D.db,xe._dbInfo.version=D.version)}})},_support:function wt(){try{if(!Yt)return!1;var T=typeof openDatabase<"u"&&/(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent)&&!/Chrome/.test(navigator.userAgent)&&!/BlackBerry/.test(navigator.platform),F="function"==typeof fetch&&-1!==fetch.toString().indexOf("[native code");return(!T||F)&&typeof indexedDB<"u"&&typeof IDBKeyRange<"u"}catch{return!1}}(),iterate:function Mu(T,F){var D=this,j=new B(function(G,Z){D.ready().then(function(){he(D._dbInfo,ie,function(ht,xt){if(ht)return Z(ht);try{var It=xt.objectStore(D._dbInfo.storeName).openCursor(),Tt=1;It.onsuccess=function(){var Lt=It.result;if(Lt){var qt=Lt.value;Je(qt)&&(qt=Ae(qt));var xe=T(qt,Lt.key,Tt++);void 0!==xe?G(xe):Lt.continue()}else G()},It.onerror=function(){Z(It.error)}}catch(Lt){Z(Lt)}})}).catch(Z)});return st(j,F),j},getItem:function Vs(T,F){var D=this;T=H(T);var j=new B(function(G,Z){D.ready().then(function(){he(D._dbInfo,ie,function(ht,xt){if(ht)return Z(ht);try{var It=xt.objectStore(D._dbInfo.storeName).get(T);It.onsuccess=function(){var Tt=It.result;void 0===Tt&&(Tt=null),Je(Tt)&&(Tt=Ae(Tt)),G(Tt)},It.onerror=function(){Z(It.error)}}catch(Tt){Z(Tt)}})}).catch(Z)});return st(j,F),j},setItem:function Lu(T,F,D){var j=this;T=H(T);var G=new B(function(Z,ht){var xt;j.ready().then(function(){return xt=j._dbInfo,"[object Blob]"===zt.call(F)?function E(T){return"boolean"==typeof Et?B.resolve(Et):function q(T){return new B(function(F){var D=T.transaction(tt,ut),j=U([""]);D.objectStore(tt).put(j,"key"),D.onabort=function(G){G.preventDefault(),G.stopPropagation(),F(!1)},D.oncomplete=function(){var G=navigator.userAgent.match(/Chrome\/(\d+)/),Z=navigator.userAgent.match(/Edge\//);F(Z||!G||parseInt(G[1],10)>=43)}}).catch(function(){return!1})}(T).then(function(F){return Et=F})}(xt.db).then(function(It){return It?F:function I(T){return new B(function(F,D){var j=new FileReader;j.onerror=D,j.onloadend=function(G){var Z=btoa(G.target.result||"");F({__local_forage_encoded_blob:!0,data:Z,type:T.type})},j.readAsBinaryString(T)})}(F)}):F}).then(function(It){he(j._dbInfo,ut,function(Tt,Lt){if(Tt)return ht(Tt);try{var qt=Lt.objectStore(j._dbInfo.storeName);null===It&&(It=void 0);var xe=qt.put(It,T);Lt.oncomplete=function(){void 0===It&&(It=null),Z(It)},Lt.onabort=Lt.onerror=function(){ht(xe.error?xe.error:xe.transaction.error)}}catch(_e){ht(_e)}})}).catch(ht)});return st(G,D),G},removeItem:function be(T,F){var D=this;T=H(T);var j=new B(function(G,Z){D.ready().then(function(){he(D._dbInfo,ut,function(ht,xt){if(ht)return Z(ht);try{var It=xt.objectStore(D._dbInfo.storeName).delete(T);xt.oncomplete=function(){G()},xt.onerror=function(){Z(It.error)},xt.onabort=function(){Z(It.error?It.error:It.transaction.error)}}catch(Tt){Z(Tt)}})}).catch(Z)});return st(j,F),j},clear:function us(T){var F=this,D=new B(function(j,G){F.ready().then(function(){he(F._dbInfo,ut,function(Z,ht){if(Z)return G(Z);try{var xt=ht.objectStore(F._dbInfo.storeName).clear();ht.oncomplete=function(){j()},ht.onabort=ht.onerror=function(){G(xt.error?xt.error:xt.transaction.error)}}catch(It){G(It)}})}).catch(G)});return st(D,T),D},length:function cn(T){var F=this,D=new B(function(j,G){F.ready().then(function(){he(F._dbInfo,ie,function(Z,ht){if(Z)return G(Z);try{var xt=ht.objectStore(F._dbInfo.storeName).count();xt.onsuccess=function(){j(xt.result)},xt.onerror=function(){G(xt.error)}}catch(It){G(It)}})}).catch(G)});return st(D,T),D},key:function hn(T,F){var D=this,j=new B(function(G,Z){T<0?G(null):D.ready().then(function(){he(D._dbInfo,ie,function(ht,xt){if(ht)return Z(ht);try{var It=xt.objectStore(D._dbInfo.storeName),Tt=!1,Lt=It.openCursor();Lt.onsuccess=function(){var qt=Lt.result;qt?0===T||Tt?G(qt.key):(Tt=!0,qt.advance(T)):G(null)},Lt.onerror=function(){Z(Lt.error)}}catch(qt){Z(qt)}})}).catch(Z)});return st(j,F),j},keys:function zu(T){var F=this,D=new B(function(j,G){F.ready().then(function(){he(F._dbInfo,ie,function(Z,ht){if(Z)return G(Z);try{var xt=ht.objectStore(F._dbInfo.storeName).openCursor(),It=[];xt.onsuccess=function(){var Tt=xt.result;Tt?(It.push(Tt.key),Tt.continue()):j(It)},xt.onerror=function(){G(xt.error)}}catch(Tt){G(Tt)}})}).catch(G)});return st(D,T),D},dropInstance:function xr(T,F){F=mt.apply(this,arguments);var D=this.config();(T="function"!=typeof T&&T||{}).name||(T.name=T.name||D.name,T.storeName=T.storeName||D.storeName);var j,G=this;if(T.name){var Z=T.name===D.name&&G._dbInfo.db?B.resolve(G._dbInfo.db):ge(T).then(function(ht){var xt=kt[T.name],It=xt.forages;xt.db=ht;for(var Tt=0;Tt<It.length;Tt++)It[Tt]._dbInfo.db=ht;return ht});j=Z.then(T.storeName?function(ht){if(ht.objectStoreNames.contains(T.storeName)){var xt=ht.version+1;ot(T);var It=kt[T.name],Tt=It.forages;ht.close();for(var Lt=0;Lt<Tt.length;Lt++){var qt=Tt[Lt];qt._dbInfo.db=null,qt._dbInfo.version=xt}return new B(function(_e,Oe){var He=Yt.open(T.name,xt);He.onerror=function(Qn){He.result.close(),Oe(Qn)},He.onupgradeneeded=function(){He.result.deleteObjectStore(T.storeName)},He.onsuccess=function(){var Qn=He.result;Qn.close(),_e(Qn)}}).then(function(_e){It.db=_e;for(var Oe=0;Oe<Tt.length;Oe++){var He=Tt[Oe];He._dbInfo.db=_e,Rt(He._dbInfo)}}).catch(function(_e){throw(Pt(T,_e)||B.resolve()).catch(function(){}),_e})}}:function(ht){ot(T);var xt=kt[T.name],It=xt.forages;ht.close();for(var Tt=0;Tt<It.length;Tt++)It[Tt]._dbInfo.db=null;return new B(function(qt,xe){var _e=Yt.deleteDatabase(T.name);_e.onerror=_e.onblocked=function(Oe){var He=_e.result;He&&He.close(),xe(Oe)},_e.onsuccess=function(){var Oe=_e.result;Oe&&Oe.close(),qt(Oe)}}).then(function(qt){xt.db=qt;for(var xe=0;xe<It.length;xe++)Rt(It[xe]._dbInfo)}).catch(function(qt){throw(Pt(T,qt)||B.resolve()).catch(function(){}),qt})})}else j=B.reject("Invalid arguments");return st(j,F),j}},Ar="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",Ii=/^~~local_forage_type~([^~]+)~/,Us="__lfsc__:",jt=Us.length,Ni="arbf",Wn="blob",Bu=jt+Ni.length,Q=Object.prototype.toString;function Ti(T){var F,D,j,G,Z,ht=.75*T.length,xt=T.length,It=0;"="===T[T.length-1]&&(ht--,"="===T[T.length-2]&&ht--);var Tt=new ArrayBuffer(ht),Lt=new Uint8Array(Tt);for(F=0;F<xt;F+=4)D=Ar.indexOf(T[F]),j=Ar.indexOf(T[F+1]),G=Ar.indexOf(T[F+2]),Z=Ar.indexOf(T[F+3]),Lt[It++]=D<<2|j>>4,Lt[It++]=(15&j)<<4|G>>2,Lt[It++]=(3&G)<<6|63&Z;return Tt}function Ci(T){var F,D=new Uint8Array(T),j="";for(F=0;F<D.length;F+=3)j+=Ar[D[F]>>2],j+=Ar[(3&D[F])<<4|D[F+1]>>4],j+=Ar[(15&D[F+1])<<2|D[F+2]>>6],j+=Ar[63&D[F+2]];return D.length%3==2?j=j.substring(0,j.length-1)+"=":D.length%3==1&&(j=j.substring(0,j.length-2)+"=="),j}var Gs={serialize:function Wu(T,F){var D="";if(T&&(D=Q.call(T)),T&&("[object ArrayBuffer]"===D||T.buffer&&"[object ArrayBuffer]"===Q.call(T.buffer))){var j,G=Us;T instanceof ArrayBuffer?(j=T,G+=Ni):(j=T.buffer,"[object Int8Array]"===D?G+="si08":"[object Uint8Array]"===D?G+="ui08":"[object Uint8ClampedArray]"===D?G+="uic8":"[object Int16Array]"===D?G+="si16":"[object Uint16Array]"===D?G+="ur16":"[object Int32Array]"===D?G+="si32":"[object Uint32Array]"===D?G+="ui32":"[object Float32Array]"===D?G+="fl32":"[object Float64Array]"===D?G+="fl64":F(new Error("Failed to get type for BinaryArray"))),F(G+Ci(j))}else if("[object Blob]"===D){var Z=new FileReader;Z.onload=function(){var ht="~~local_forage_type~"+T.type+"~"+Ci(this.result);F(Us+Wn+ht)},Z.readAsArrayBuffer(T)}else try{F(JSON.stringify(T))}catch(ht){console.error("Couldn't convert value into a JSON string: ",T),F(null,ht)}},deserialize:function Uo(T){if(T.substring(0,jt)!==Us)return JSON.parse(T);var F,D=T.substring(Bu),j=T.substring(jt,Bu);if(j===Wn&&Ii.test(D)){var G=D.match(Ii);F=G[1],D=D.substring(G[0].length)}var Z=Ti(D);switch(j){case Ni:return Z;case Wn:return U([Z],{type:F});case"si08":return new Int8Array(Z);case"ui08":return new Uint8Array(Z);case"uic8":return new Uint8ClampedArray(Z);case"si16":return new Int16Array(Z);case"ur16":return new Uint16Array(Z);case"si32":return new Int32Array(Z);case"ui32":return new Uint32Array(Z);case"fl32":return new Float32Array(Z);case"fl64":return new Float64Array(Z);default:throw new Error("Unkown type: "+j)}},stringToBuffer:Ti,bufferToString:Ci};function Hs(T,F,D,j){T.executeSql("CREATE TABLE IF NOT EXISTS "+F.storeName+" (id INTEGER PRIMARY KEY, key unique, value)",[],D,j)}function Jn(T,F,D,j,G,Z){T.executeSql(D,j,G,function(ht,xt){xt.code===xt.SYNTAX_ERR?ht.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name = ?",[F.storeName],function(It,Tt){Tt.rows.length?Z(It,xt):Hs(It,F,function(){It.executeSql(D,j,G,Z)},Z)},Z):Z(ht,xt)},Z)}function Ei(T,F,D,j){var G=this;T=H(T);var Z=new B(function(ht,xt){G.ready().then(function(){void 0===F&&(F=null);var It=F,Tt=G._dbInfo;Tt.serializer.serialize(F,function(Lt,qt){qt?xt(qt):Tt.db.transaction(function(xe){Jn(xe,Tt,"INSERT OR REPLACE INTO "+Tt.storeName+" (key, value) VALUES (?, ?)",[T,Lt],function(){ht(It)},function(_e,Oe){xt(Oe)})},function(xe){if(xe.code===xe.QUOTA_ERR){if(j>0)return void ht(Ei.apply(G,[T,It,D,j-1]));xt(xe)}})})}).catch(xt)});return st(Z,D),Z}function Ma(T){return new B(function(F,D){T.transaction(function(j){j.executeSql("SELECT name FROM sqlite_master WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'",[],function(G,Z){for(var ht=[],xt=0;xt<Z.rows.length;xt++)ht.push(Z.rows.item(xt).name);F({db:T,storeNames:ht})},function(G,Z){D(Z)})},function(j){D(j)})})}var Ho={_driver:"webSQLStorage",_initStorage:function Aa(T){var F=this,D={db:null};if(T)for(var j in T)D[j]="string"!=typeof T[j]?T[j].toString():T[j];var G=new B(function(Z,ht){try{D.db=openDatabase(D.name,String(D.version),D.description,D.size)}catch(xt){return ht(xt)}D.db.transaction(function(xt){Hs(xt,D,function(){F._dbInfo=D,Z()},function(It,Tt){ht(Tt)})},ht)});return D.serializer=Gs,G},_support:function Ea(){return"function"==typeof openDatabase}(),iterate:function Go(T,F){var D=this,j=new B(function(G,Z){D.ready().then(function(){var ht=D._dbInfo;ht.db.transaction(function(xt){Jn(xt,ht,"SELECT * FROM "+ht.storeName,[],function(It,Tt){for(var Lt=Tt.rows,qt=Lt.length,xe=0;xe<qt;xe++){var _e=Lt.item(xe),Oe=_e.value;if(Oe&&(Oe=ht.serializer.deserialize(Oe)),void 0!==(Oe=T(Oe,_e.key,xe+1)))return void G(Oe)}G()},function(It,Tt){Z(Tt)})})}).catch(Z)});return st(j,F),j},getItem:function $i(T,F){var D=this;T=H(T);var j=new B(function(G,Z){D.ready().then(function(){var ht=D._dbInfo;ht.db.transaction(function(xt){Jn(xt,ht,"SELECT * FROM "+ht.storeName+" WHERE key = ? LIMIT 1",[T],function(It,Tt){var Lt=Tt.rows.length?Tt.rows.item(0).value:null;Lt&&(Lt=ht.serializer.deserialize(Lt)),G(Lt)},function(It,Tt){Z(Tt)})})}).catch(Z)});return st(j,F),j},setItem:function Ri(T,F,D){return Ei.apply(this,[T,F,D,1])},removeItem:function Ai(T,F){var D=this;T=H(T);var j=new B(function(G,Z){D.ready().then(function(){var ht=D._dbInfo;ht.db.transaction(function(xt){Jn(xt,ht,"DELETE FROM "+ht.storeName+" WHERE key = ?",[T],function(){G()},function(It,Tt){Z(Tt)})})}).catch(Z)});return st(j,F),j},clear:function Fa(T){var F=this,D=new B(function(j,G){F.ready().then(function(){var Z=F._dbInfo;Z.db.transaction(function(ht){Jn(ht,Z,"DELETE FROM "+Z.storeName,[],function(){j()},function(xt,It){G(It)})})}).catch(G)});return st(D,T),D},length:function Da(T){var F=this,D=new B(function(j,G){F.ready().then(function(){var Z=F._dbInfo;Z.db.transaction(function(ht){Jn(ht,Z,"SELECT COUNT(key) as c FROM "+Z.storeName,[],function(xt,It){var Tt=It.rows.item(0).c;j(Tt)},function(xt,It){G(It)})})}).catch(G)});return st(D,T),D},key:function _a(T,F){var D=this,j=new B(function(G,Z){D.ready().then(function(){var ht=D._dbInfo;ht.db.transaction(function(xt){Jn(xt,ht,"SELECT key FROM "+ht.storeName+" WHERE id = ? LIMIT 1",[T+1],function(It,Tt){var Lt=Tt.rows.length?Tt.rows.item(0).key:null;G(Lt)},function(It,Tt){Z(Tt)})})}).catch(Z)});return st(j,F),j},keys:function Oa(T){var F=this,D=new B(function(j,G){F.ready().then(function(){var Z=F._dbInfo;Z.db.transaction(function(ht){Jn(ht,Z,"SELECT key FROM "+Z.storeName,[],function(xt,It){for(var Tt=[],Lt=0;Lt<It.rows.length;Lt++)Tt.push(It.rows.item(Lt).key);j(Tt)},function(xt,It){G(It)})})}).catch(G)});return st(D,T),D},dropInstance:function Fi(T,F){F=mt.apply(this,arguments);var D=this.config();(T="function"!=typeof T&&T||{}).name||(T.name=T.name||D.name,T.storeName=T.storeName||D.storeName);var j,G=this;return st(j=T.name?new B(function(Z){var ht;ht=T.name===D.name?G._dbInfo.db:openDatabase(T.name,"","",0),Z(T.storeName?{db:ht,storeNames:[T.storeName]}:Ma(ht))}).then(function(Z){return new B(function(ht,xt){Z.db.transaction(function(It){function Tt(_e){return new B(function(Oe,He){It.executeSql("DROP TABLE IF EXISTS "+_e,[],function(){Oe()},function(Qn,Ks){He(Ks)})})}for(var Lt=[],qt=0,xe=Z.storeNames.length;qt<xe;qt++)Lt.push(Tt(Z.storeNames[qt]));B.all(Lt).then(function(){ht()}).catch(function(_e){xt(_e)})},function(It){xt(It)})})}):B.reject("Invalid arguments"),F),j}};function _i(T,F){var D=T.name+"/";return T.storeName!==F.storeName&&(D+=T.storeName+"/"),D}var Bi={_driver:"localStorageWrapper",_initStorage:function jo(T){var D={};if(T)for(var j in T)D[j]=T[j];return D.keyPrefix=_i(T,this._defaultConfig),function Mi(){return!function Oi(){var T="_localforage_support_test";try{return localStorage.setItem(T,!0),localStorage.removeItem(T),!1}catch{return!0}}()||localStorage.length>0}()?(this._dbInfo=D,D.serializer=Gs,B.resolve()):B.reject()},_support:function Di(){try{return typeof localStorage<"u"&&"setItem"in localStorage&&!!localStorage.setItem}catch{return!1}}(),iterate:function za(T,F){var D=this,j=D.ready().then(function(){for(var G=D._dbInfo,Z=G.keyPrefix,ht=Z.length,xt=localStorage.length,It=1,Tt=0;Tt<xt;Tt++){var Lt=localStorage.key(Tt);if(0===Lt.indexOf(Z)){var qt=localStorage.getItem(Lt);if(qt&&(qt=G.serializer.deserialize(qt)),void 0!==(qt=T(qt,Lt.substring(ht),It++)))return qt}}});return st(j,F),j},getItem:function La(T,F){var D=this;T=H(T);var j=D.ready().then(function(){var G=D._dbInfo,Z=localStorage.getItem(G.keyPrefix+T);return Z&&(Z=G.serializer.deserialize(Z)),Z});return st(j,F),j},setItem:function Pi(T,F,D){var j=this;T=H(T);var G=j.ready().then(function(){void 0===F&&(F=null);var Z=F;return new B(function(ht,xt){var It=j._dbInfo;It.serializer.serialize(F,function(Tt,Lt){if(Lt)xt(Lt);else try{localStorage.setItem(It.keyPrefix+T,Tt),ht(Z)}catch(qt){"QuotaExceededError"!==qt.name&&"NS_ERROR_DOM_QUOTA_REACHED"!==qt.name||xt(qt),xt(qt)}})})});return st(G,D),G},removeItem:function zi(T,F){var D=this;T=H(T);var j=D.ready().then(function(){localStorage.removeItem(D._dbInfo.keyPrefix+T)});return st(j,F),j},clear:function qo(T){var F=this,D=F.ready().then(function(){for(var j=F._dbInfo.keyPrefix,G=localStorage.length-1;G>=0;G--){var Z=localStorage.key(G);0===Z.indexOf(j)&&localStorage.removeItem(Z)}});return st(D,T),D},length:function Li(T){var F=this.keys().then(function(D){return D.length});return st(F,T),F},key:function Pa(T,F){var D=this,j=D.ready().then(function(){var G,Z=D._dbInfo;try{G=localStorage.key(T)}catch{G=null}return G&&(G=G.substring(Z.keyPrefix.length)),G});return st(j,F),j},keys:function Ko(T){var F=this,D=F.ready().then(function(){for(var j=F._dbInfo,G=localStorage.length,Z=[],ht=0;ht<G;ht++){var xt=localStorage.key(ht);0===xt.indexOf(j.keyPrefix)&&Z.push(xt.substring(j.keyPrefix.length))}return Z});return st(D,T),D},dropInstance:function Xo(T,F){if(F=mt.apply(this,arguments),!(T="function"!=typeof T&&T||{}).name){var D=this.config();T.name=T.name||D.name,T.storeName=T.storeName||D.storeName}var j,G=this;return st(j=T.name?new B(function(Z){Z(T.storeName?_i(T,G._defaultConfig):T.name+"/")}).then(function(Z){for(var ht=localStorage.length-1;ht>=0;ht--){var xt=localStorage.key(ht);0===xt.indexOf(Z)&&localStorage.removeItem(xt)}}):B.reject("Invalid arguments"),F),j}},Wi=function(T,F){return T===F||"number"==typeof T&&"number"==typeof F&&isNaN(T)&&isNaN(F)},Yo=function(T,F){for(var D=T.length,j=0;j<D;){if(Wi(T[j],F))return!0;j++}return!1},Vi=Array.isArray||function(T){return"[object Array]"===Object.prototype.toString.call(T)},jr={},js={},cs={INDEXEDDB:Po,WEBSQL:Ho,LOCALSTORAGE:Bi},Ui=[cs.INDEXEDDB._driver,cs.WEBSQL._driver,cs.LOCALSTORAGE._driver],qs=["dropInstance"],Ba=["clear","getItem","iterate","key","keys","length","removeItem","setItem"].concat(qs),Zo={description:"",driver:Ui.slice(),name:"localforage",size:4980736,storeName:"keyvaluepairs",version:1};function Gi(T,F){T[F]=function(){var D=arguments;return T.ready().then(function(){return T[F].apply(T,D)})}}function Wa(){for(var T=1;T<arguments.length;T++){var F=arguments[T];if(F)for(var D in F)F.hasOwnProperty(D)&&(arguments[0][D]=Vi(F[D])?F[D].slice():F[D])}return arguments[0]}var Jo=function(){function T(F){for(var D in function ee(T,F){if(!(T instanceof F))throw new TypeError("Cannot call a class as a function")}(this,T),cs)if(cs.hasOwnProperty(D)){var j=cs[D],G=j._driver;this[D]=G,jr[G]||this.defineDriver(j)}this._defaultConfig=Wa({},Zo),this._config=Wa({},this._defaultConfig,F),this._driverSet=null,this._initDriver=null,this._ready=!1,this._dbInfo=null,this._wrapLibraryMethodsWithReady(),this.setDriver(this._config.driver).catch(function(){})}return T.prototype.config=function(F){if("object"===(void 0===F?"undefined":le(F))){if(this._ready)return new Error("Can't call config() after localforage has been used.");for(var D in F){if("storeName"===D&&(F[D]=F[D].replace(/\W/g,"_")),"version"===D&&"number"!=typeof F[D])return new Error("Database version must be a number.");this._config[D]=F[D]}return!("driver"in F)||!F.driver||this.setDriver(this._config.driver)}return"string"==typeof F?this._config[F]:this._config},T.prototype.defineDriver=function(F,D,j){var G=new B(function(Z,ht){try{var xt=F._driver,It=new Error("Custom driver not compliant; see https://mozilla.github.io/localForage/#definedriver");if(!F._driver)return void ht(It);for(var Tt=Ba.concat("_initStorage"),Lt=0,qt=Tt.length;Lt<qt;Lt++){var xe=Tt[Lt];if((!Yo(qs,xe)||F[xe])&&"function"!=typeof F[xe])return void ht(It)}!function(){for(var He=function(tl){return function(){var Hi=new Error("Method "+tl+" is not implemented by the current driver"),Ys=B.reject(Hi);return st(Ys,arguments[arguments.length-1]),Ys}},Qn=0,Ks=qs.length;Qn<Ks;Qn++){var Xs=qs[Qn];F[Xs]||(F[Xs]=He(Xs))}}();var Oe=function(He){jr[xt]&&console.info("Redefining LocalForage driver: "+xt),jr[xt]=F,js[xt]=He,Z()};"_support"in F?F._support&&"function"==typeof F._support?F._support().then(Oe,ht):Oe(!!F._support):Oe(!0)}catch(He){ht(He)}});return ct(G,D,j),G},T.prototype.driver=function(){return this._driver||null},T.prototype.getDriver=function(F,D,j){var G=jr[F]?B.resolve(jr[F]):B.reject(new Error("Driver not found."));return ct(G,D,j),G},T.prototype.getSerializer=function(F){var D=B.resolve(Gs);return ct(D,F),D},T.prototype.ready=function(F){var D=this,j=D._driverSet.then(function(){return null===D._ready&&(D._ready=D._initDriver()),D._ready});return ct(j,F,F),j},T.prototype.setDriver=function(F,D,j){var G=this;Vi(F)||(F=[F]);var Z=this._getSupportedDrivers(F);function ht(){G._config.driver=G.driver()}function xt(Lt){return G._extend(Lt),ht(),G._ready=G._initStorage(G._config),G._ready}var Tt=null!==this._driverSet?this._driverSet.catch(function(){return B.resolve()}):B.resolve();return this._driverSet=Tt.then(function(){var Lt=Z[0];return G._dbInfo=null,G._ready=null,G.getDriver(Lt).then(function(qt){G._driver=qt._driver,ht(),G._wrapLibraryMethodsWithReady(),G._initDriver=function It(Lt){return function(){var qt=0;return function xe(){for(;qt<Lt.length;){var _e=Lt[qt];return qt++,G._dbInfo=null,G._ready=null,G.getDriver(_e).then(xt).catch(xe)}ht();var Oe=new Error("No available storage method found.");return G._driverSet=B.reject(Oe),G._driverSet}()}}(Z)})}).catch(function(){ht();var Lt=new Error("No available storage method found.");return G._driverSet=B.reject(Lt),G._driverSet}),ct(this._driverSet,D,j),this._driverSet},T.prototype.supports=function(F){return!!js[F]},T.prototype._extend=function(F){Wa(this,F)},T.prototype._getSupportedDrivers=function(F){for(var D=[],j=0,G=F.length;j<G;j++){var Z=F[j];this.supports(Z)&&D.push(Z)}return D},T.prototype._wrapLibraryMethodsWithReady=function(){for(var F=0,D=Ba.length;F<D;F++)Gi(this,Ba[F])},T.prototype.createInstance=function(F){return new T(F)},T}(),Qo=new Jo;Re.exports=Qo},{3:3}]},{},[4])(4)},720:Ht=>{Ht.exports=Nt;var te=null;try{te=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function Nt(E,ot,Rt){this.low=0|E,this.high=0|ot,this.unsigned=!!Rt}function ae(E){return!0===(E&&E.__isLong__)}Object.defineProperty(Nt.prototype,"__isLong__",{value:!0}),Nt.isLong=ae;var Re={},Xt={};function le(E,ot){var Rt,Pt,oe;return ot?(oe=0<=(E>>>=0)&&E<256)&&(Pt=Xt[E])?Pt:(Rt=$t(E,(0|E)<0?-1:0,!0),oe&&(Xt[E]=Rt),Rt):(oe=-128<=(E|=0)&&E<128)&&(Pt=Re[E])?Pt:(Rt=$t(E,E<0?-1:0,!1),oe&&(Re[E]=Rt),Rt)}function ee(E,ot){if(isNaN(E))return ot?tt:mt;if(ot){if(E<0)return tt;if(E>=st)return ut}else{if(E<=-ct)return vt;if(E+1>=ct)return ie}return E<0?ee(-E,ot).neg():$t(E%B|0,E/B|0,ot)}function $t(E,ot,Rt){return new Nt(E,ot,Rt)}Nt.fromInt=le,Nt.fromNumber=ee,Nt.fromBits=$t;var Yt=Math.pow;function wt(E,ot,Rt){if(0===E.length)throw Error("empty string");if("NaN"===E||"Infinity"===E||"+Infinity"===E||"-Infinity"===E)return mt;if("number"==typeof ot?(Rt=ot,ot=!1):ot=!!ot,(Rt=Rt||10)<2||36<Rt)throw RangeError("radix");var Pt;if((Pt=E.indexOf("-"))>0)throw Error("interior hyphen");if(0===Pt)return wt(E.substring(1),ot,Rt).neg();for(var oe=ee(Yt(Rt,8)),ge=mt,ke=0;ke<E.length;ke+=8){var Ne=Math.min(8,E.length-ke),I=parseInt(E.substring(ke,ke+Ne),Rt);if(Ne<8){var Ae=ee(Yt(Rt,Ne));ge=ge.mul(Ae).add(ee(I))}else ge=(ge=ge.mul(oe)).add(ee(I))}return ge.unsigned=ot,ge}function U(E,ot){return"number"==typeof E?ee(E,ot):"string"==typeof E?wt(E,ot):$t(E.low,E.high,"boolean"==typeof ot?ot:E.unsigned)}Nt.fromString=wt,Nt.fromValue=U;var B=4294967296,st=B*B,ct=st/2,H=le(1<<24),mt=le(0);Nt.ZERO=mt;var tt=le(0,!0);Nt.UZERO=tt;var Et=le(1);Nt.ONE=Et;var kt=le(1,!0);Nt.UONE=kt;var zt=le(-1);Nt.NEG_ONE=zt;var ie=$t(-1,2147483647,!1);Nt.MAX_VALUE=ie;var ut=$t(-1,-1,!0);Nt.MAX_UNSIGNED_VALUE=ut;var vt=$t(0,-2147483648,!1);Nt.MIN_VALUE=vt;var q=Nt.prototype;q.toInt=function(){return this.unsigned?this.low>>>0:this.low},q.toNumber=function(){return this.unsigned?(this.high>>>0)*B+(this.low>>>0):this.high*B+(this.low>>>0)},q.toString=function(E){if((E=E||10)<2||36<E)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(vt)){var ot=ee(E),Rt=this.div(ot),Pt=Rt.mul(ot).sub(this);return Rt.toString(E)+Pt.toInt().toString(E)}return"-"+this.neg().toString(E)}for(var oe=ee(Yt(E,6),this.unsigned),ge=this,ke="";;){var Ne=ge.div(oe),I=(ge.sub(Ne.mul(oe)).toInt()>>>0).toString(E);if((ge=Ne).isZero())return I+ke;for(;I.length<6;)I="0"+I;ke=""+I+ke}},q.getHighBits=function(){return this.high},q.getHighBitsUnsigned=function(){return this.high>>>0},q.getLowBits=function(){return this.low},q.getLowBitsUnsigned=function(){return this.low>>>0},q.getNumBitsAbs=function(){if(this.isNegative())return this.eq(vt)?64:this.neg().getNumBitsAbs();for(var E=0!=this.high?this.high:this.low,ot=31;ot>0&&0==(E&1<<ot);ot--);return 0!=this.high?ot+33:ot+1},q.isZero=function(){return 0===this.high&&0===this.low},q.eqz=q.isZero,q.isNegative=function(){return!this.unsigned&&this.high<0},q.isPositive=function(){return this.unsigned||this.high>=0},q.isOdd=function(){return 1==(1&this.low)},q.isEven=function(){return 0==(1&this.low)},q.equals=function(E){return ae(E)||(E=U(E)),(this.unsigned===E.unsigned||this.high>>>31!=1||E.high>>>31!=1)&&this.high===E.high&&this.low===E.low},q.eq=q.equals,q.notEquals=function(E){return!this.eq(E)},q.neq=q.notEquals,q.ne=q.notEquals,q.lessThan=function(E){return this.comp(E)<0},q.lt=q.lessThan,q.lessThanOrEqual=function(E){return this.comp(E)<=0},q.lte=q.lessThanOrEqual,q.le=q.lessThanOrEqual,q.greaterThan=function(E){return this.comp(E)>0},q.gt=q.greaterThan,q.greaterThanOrEqual=function(E){return this.comp(E)>=0},q.gte=q.greaterThanOrEqual,q.ge=q.greaterThanOrEqual,q.compare=function(E){if(ae(E)||(E=U(E)),this.eq(E))return 0;var ot=this.isNegative(),Rt=E.isNegative();return ot&&!Rt?-1:!ot&&Rt?1:this.unsigned?E.high>>>0>this.high>>>0||E.high===this.high&&E.low>>>0>this.low>>>0?-1:1:this.sub(E).isNegative()?-1:1},q.comp=q.compare,q.negate=function(){return!this.unsigned&&this.eq(vt)?vt:this.not().add(Et)},q.neg=q.negate,q.add=function(E){ae(E)||(E=U(E));var I=0,Ae=0,Je=0,vn=0;return Je+=(vn+=(65535&this.low)+(65535&E.low))>>>16,Ae+=(Je+=(this.low>>>16)+(E.low>>>16))>>>16,I+=(Ae+=(65535&this.high)+(65535&E.high))>>>16,I+=(this.high>>>16)+(E.high>>>16),$t((Je&=65535)<<16|(vn&=65535),(I&=65535)<<16|(Ae&=65535),this.unsigned)},q.subtract=function(E){return ae(E)||(E=U(E)),this.add(E.neg())},q.sub=q.subtract,q.multiply=function(E){if(this.isZero())return mt;if(ae(E)||(E=U(E)),te)return $t(te.mul(this.low,this.high,E.low,E.high),te.get_high(),this.unsigned);if(E.isZero())return mt;if(this.eq(vt))return E.isOdd()?vt:mt;if(E.eq(vt))return this.isOdd()?vt:mt;if(this.isNegative())return E.isNegative()?this.neg().mul(E.neg()):this.neg().mul(E).neg();if(E.isNegative())return this.mul(E.neg()).neg();if(this.lt(H)&&E.lt(H))return ee(this.toNumber()*E.toNumber(),this.unsigned);var Rt=65535&this.high,Pt=this.low>>>16,oe=65535&this.low,ke=65535&E.high,Ne=E.low>>>16,I=65535&E.low,Ae=0,Je=0,vn=0,nt=0;return vn+=(nt+=oe*I)>>>16,Je+=(vn+=Pt*I)>>>16,vn&=65535,Je+=(vn+=oe*Ne)>>>16,Ae+=(Je+=Rt*I)>>>16,Je&=65535,Ae+=(Je+=Pt*Ne)>>>16,Je&=65535,Ae+=(Je+=oe*ke)>>>16,Ae+=(this.high>>>16)*I+Rt*Ne+Pt*ke+oe*(E.high>>>16),$t((vn&=65535)<<16|(nt&=65535),(Ae&=65535)<<16|(Je&=65535),this.unsigned)},q.mul=q.multiply,q.divide=function(E){if(ae(E)||(E=U(E)),E.isZero())throw Error("division by zero");var ot,Rt,Pt;if(te)return this.unsigned||-2147483648!==this.high||-1!==E.low||-1!==E.high?$t((this.unsigned?te.div_u:te.div_s)(this.low,this.high,E.low,E.high),te.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?tt:mt;if(this.unsigned){if(E.unsigned||(E=E.toUnsigned()),E.gt(this))return tt;if(E.gt(this.shru(1)))return kt;Pt=tt}else{if(this.eq(vt))return E.eq(Et)||E.eq(zt)?vt:E.eq(vt)?Et:(ot=this.shr(1).div(E).shl(1)).eq(mt)?E.isNegative()?Et:zt:(Rt=this.sub(E.mul(ot)),Pt=ot.add(Rt.div(E)));if(E.eq(vt))return this.unsigned?tt:mt;if(this.isNegative())return E.isNegative()?this.neg().div(E.neg()):this.neg().div(E).neg();if(E.isNegative())return this.div(E.neg()).neg();Pt=mt}for(Rt=this;Rt.gte(E);){ot=Math.max(1,Math.floor(Rt.toNumber()/E.toNumber()));for(var oe=Math.ceil(Math.log(ot)/Math.LN2),ge=oe<=48?1:Yt(2,oe-48),ke=ee(ot),Ne=ke.mul(E);Ne.isNegative()||Ne.gt(Rt);)Ne=(ke=ee(ot-=ge,this.unsigned)).mul(E);ke.isZero()&&(ke=Et),Pt=Pt.add(ke),Rt=Rt.sub(Ne)}return Pt},q.div=q.divide,q.modulo=function(E){return ae(E)||(E=U(E)),te?$t((this.unsigned?te.rem_u:te.rem_s)(this.low,this.high,E.low,E.high),te.get_high(),this.unsigned):this.sub(this.div(E).mul(E))},q.mod=q.modulo,q.rem=q.modulo,q.not=function(){return $t(~this.low,~this.high,this.unsigned)},q.and=function(E){return ae(E)||(E=U(E)),$t(this.low&E.low,this.high&E.high,this.unsigned)},q.or=function(E){return ae(E)||(E=U(E)),$t(this.low|E.low,this.high|E.high,this.unsigned)},q.xor=function(E){return ae(E)||(E=U(E)),$t(this.low^E.low,this.high^E.high,this.unsigned)},q.shiftLeft=function(E){return ae(E)&&(E=E.toInt()),0==(E&=63)?this:E<32?$t(this.low<<E,this.high<<E|this.low>>>32-E,this.unsigned):$t(0,this.low<<E-32,this.unsigned)},q.shl=q.shiftLeft,q.shiftRight=function(E){return ae(E)&&(E=E.toInt()),0==(E&=63)?this:E<32?$t(this.low>>>E|this.high<<32-E,this.high>>E,this.unsigned):$t(this.high>>E-32,this.high>=0?0:-1,this.unsigned)},q.shr=q.shiftRight,q.shiftRightUnsigned=function(E){if(ae(E)&&(E=E.toInt()),0==(E&=63))return this;var ot=this.high;return E<32?$t(this.low>>>E|ot<<32-E,ot>>>E,this.unsigned):$t(32===E?ot:ot>>>E-32,0,this.unsigned)},q.shru=q.shiftRightUnsigned,q.shr_u=q.shiftRightUnsigned,q.toSigned=function(){return this.unsigned?$t(this.low,this.high,!1):this},q.toUnsigned=function(){return this.unsigned?this:$t(this.low,this.high,!0)},q.toBytes=function(E){return E?this.toBytesLE():this.toBytesBE()},q.toBytesLE=function(){var E=this.high,ot=this.low;return[255&ot,ot>>>8&255,ot>>>16&255,ot>>>24,255&E,E>>>8&255,E>>>16&255,E>>>24]},q.toBytesBE=function(){var E=this.high,ot=this.low;return[E>>>24,E>>>16&255,E>>>8&255,255&E,ot>>>24,ot>>>16&255,ot>>>8&255,255&ot]},Nt.fromBytes=function(E,ot,Rt){return Rt?Nt.fromBytesLE(E,ot):Nt.fromBytesBE(E,ot)},Nt.fromBytesLE=function(E,ot){return new Nt(E[0]|E[1]<<8|E[2]<<16|E[3]<<24,E[4]|E[5]<<8|E[6]<<16|E[7]<<24,ot)},Nt.fromBytesBE=function(E,ot){return new Nt(E[4]<<24|E[5]<<16|E[6]<<8|E[7],E[0]<<24|E[1]<<16|E[2]<<8|E[3],ot)}},254:function(Ht,te){var Nt,Re;Nt=function(Xt){"use strict";var ee=Object.assign||function(H){for(var mt=1;mt<arguments.length;mt++){var tt=arguments[mt];for(var Et in tt)Object.prototype.hasOwnProperty.call(tt,Et)&&(H[Et]=tt[Et])}return H};function $t(H){if(Array.isArray(H)){for(var mt=0,tt=Array(H.length);mt<H.length;mt++)tt[mt]=H[mt];return tt}return Array.from(H)}var Yt={order:2,precision:2,period:null};function wt(H,mt){var tt=[],Et=[];H.forEach(function(ie,ut){null!==ie[1]&&(Et.push(ie),tt.push(mt[ut]))});var kt=Et.reduce(function(ie,ut){return ie+ut[1]},0)/Et.length,zt=Et.reduce(function(ie,ut){var vt=ut[1]-kt;return ie+vt*vt},0);return 1-Et.reduce(function(ie,ut,vt){var E=ut[1]-tt[vt][1];return ie+E*E},0)/zt}function B(H,mt){var tt=Math.pow(10,mt);return Math.round(H*tt)/tt}var st={linear:function(H,mt){for(var tt=[0,0,0,0,0],Et=0,kt=0;kt<H.length;kt++)null!==H[kt][1]&&(Et++,tt[0]+=H[kt][0],tt[1]+=H[kt][1],tt[2]+=H[kt][0]*H[kt][0],tt[3]+=H[kt][0]*H[kt][1],tt[4]+=H[kt][1]*H[kt][1]);var zt=Et*tt[2]-tt[0]*tt[0],ut=0===zt?0:B((Et*tt[3]-tt[0]*tt[1])/zt,mt.precision),vt=B(tt[1]/Et-ut*tt[0]/Et,mt.precision),q=function(ot){return[B(ot,mt.precision),B(ut*ot+vt,mt.precision)]},E=H.map(function(ot){return q(ot[0])});return{points:E,predict:q,equation:[ut,vt],r2:B(wt(H,E),mt.precision),string:0===vt?"y = "+ut+"x":"y = "+ut+"x + "+vt}},exponential:function(H,mt){for(var tt=[0,0,0,0,0,0],Et=0;Et<H.length;Et++)null!==H[Et][1]&&(tt[0]+=H[Et][0],tt[1]+=H[Et][1],tt[2]+=H[Et][0]*H[Et][0]*H[Et][1],tt[3]+=H[Et][1]*Math.log(H[Et][1]),tt[4]+=H[Et][0]*H[Et][1]*Math.log(H[Et][1]),tt[5]+=H[Et][0]*H[Et][1]);var kt=tt[1]*tt[2]-tt[5]*tt[5],zt=Math.exp((tt[2]*tt[3]-tt[5]*tt[4])/kt),ie=(tt[1]*tt[4]-tt[5]*tt[3])/kt,ut=B(zt,mt.precision),vt=B(ie,mt.precision),q=function(ot){return[B(ot,mt.precision),B(ut*Math.exp(vt*ot),mt.precision)]},E=H.map(function(ot){return q(ot[0])});return{points:E,predict:q,equation:[ut,vt],string:"y = "+ut+"e^("+vt+"x)",r2:B(wt(H,E),mt.precision)}},logarithmic:function(H,mt){for(var tt=[0,0,0,0],Et=H.length,kt=0;kt<Et;kt++)null!==H[kt][1]&&(tt[0]+=Math.log(H[kt][0]),tt[1]+=H[kt][1]*Math.log(H[kt][0]),tt[2]+=H[kt][1],tt[3]+=Math.pow(Math.log(H[kt][0]),2));var zt=B((Et*tt[1]-tt[2]*tt[0])/(Et*tt[3]-tt[0]*tt[0]),mt.precision),ie=B((tt[2]-zt*tt[0])/Et,mt.precision),ut=function(q){return[B(q,mt.precision),B(B(ie+zt*Math.log(q),mt.precision),mt.precision)]},vt=H.map(function(q){return ut(q[0])});return{points:vt,predict:ut,equation:[ie,zt],string:"y = "+ie+" + "+zt+" ln(x)",r2:B(wt(H,vt),mt.precision)}},power:function(H,mt){for(var tt=[0,0,0,0,0],Et=H.length,kt=0;kt<Et;kt++)null!==H[kt][1]&&(tt[0]+=Math.log(H[kt][0]),tt[1]+=Math.log(H[kt][1])*Math.log(H[kt][0]),tt[2]+=Math.log(H[kt][1]),tt[3]+=Math.pow(Math.log(H[kt][0]),2));var zt=(Et*tt[1]-tt[0]*tt[2])/(Et*tt[3]-Math.pow(tt[0],2)),ut=B(Math.exp((tt[2]-zt*tt[0])/Et),mt.precision),vt=B(zt,mt.precision),q=function(ot){return[B(ot,mt.precision),B(B(ut*Math.pow(ot,vt),mt.precision),mt.precision)]},E=H.map(function(ot){return q(ot[0])});return{points:E,predict:q,equation:[ut,vt],string:"y = "+ut+"x^"+vt,r2:B(wt(H,E),mt.precision)}},polynomial:function(H,mt){for(var tt=[],Et=[],kt=0,zt=0,ie=H.length,ut=mt.order+1,vt=0;vt<ut;vt++){for(var q=0;q<ie;q++)null!==H[q][1]&&(kt+=Math.pow(H[q][0],vt)*H[q][1]);tt.push(kt),kt=0;for(var E=[],ot=0;ot<ut;ot++){for(var Rt=0;Rt<ie;Rt++)null!==H[Rt][1]&&(zt+=Math.pow(H[Rt][0],vt+ot));E.push(zt),zt=0}Et.push(E)}Et.push(tt);for(var Pt=function U(H,mt){for(var tt=H,Et=H.length-1,kt=[mt],zt=0;zt<Et;zt++){for(var ie=zt,ut=zt+1;ut<Et;ut++)Math.abs(tt[zt][ut])>Math.abs(tt[zt][ie])&&(ie=ut);for(var vt=zt;vt<Et+1;vt++){var q=tt[vt][zt];tt[vt][zt]=tt[vt][ie],tt[vt][ie]=q}for(var E=zt+1;E<Et;E++)for(var ot=Et;ot>=zt;ot--)tt[ot][E]-=tt[ot][zt]*tt[zt][E]/tt[zt][zt]}for(var Rt=Et-1;Rt>=0;Rt--){for(var Pt=0,oe=Rt+1;oe<Et;oe++)Pt+=tt[oe][Rt]*kt[oe];kt[Rt]=(tt[Et][Rt]-Pt)/tt[Rt][Rt]}return kt}(Et,ut).map(function(I){return B(I,mt.precision)}),oe=function(I){return[B(I,mt.precision),B(Pt.reduce(function(Ae,Je,vn){return Ae+Je*Math.pow(I,vn)},0),mt.precision)]},ge=H.map(function(I){return oe(I[0])}),ke="y = ",Ne=Pt.length-1;Ne>=0;Ne--)ke+=Ne>1?Pt[Ne]+"x^"+Ne+" + ":1===Ne?Pt[Ne]+"x + ":Pt[Ne];return{string:ke,points:ge,predict:oe,equation:[].concat($t(Pt)).reverse(),r2:B(wt(H,ge),mt.precision)}}};Xt.exports=function ct(){return Object.keys(st).reduce(function(mt,tt){return ee({_round:B},mt,function le(H,mt,tt){return mt in H?Object.defineProperty(H,mt,{value:tt,enumerable:!0,configurable:!0,writable:!0}):H[mt]=tt,H}({},tt,function(Et,kt){return st[tt](Et,ee({},Yt,kt))}))},{})}()},void 0===(Re=Nt.apply(te,[Ht]))||(Ht.exports=Re)},377:(Ht,te,Nt)=>{var ae=Nt(832),Re=Nt(652),Xt=Nt(801),le=Nt(30),ee=Nt(618),$t=Nt(49),Yt=Nt(971);Yt.alea=ae,Yt.xor128=Re,Yt.xorwow=Xt,Yt.xorshift7=le,Yt.xor4096=ee,Yt.tychei=$t,Ht.exports=Yt},832:function(Ht,te,Nt){var ae;!function(Re,Xt,le){function ee(wt){var st,U=this,B=(st=4022871197,function(H){H=String(H);for(var mt=0;mt<H.length;mt++){var tt=.02519603282416938*(st+=H.charCodeAt(mt));tt-=st=tt>>>0,st=(tt*=st)>>>0,st+=4294967296*(tt-=st)}return 2.3283064365386963e-10*(st>>>0)});U.next=function(){var st=2091639*U.s0+2.3283064365386963e-10*U.c;return U.s0=U.s1,U.s1=U.s2,U.s2=st-(U.c=0|st)},U.c=1,U.s0=B(" "),U.s1=B(" "),U.s2=B(" "),U.s0-=B(wt),U.s0<0&&(U.s0+=1),U.s1-=B(wt),U.s1<0&&(U.s1+=1),U.s2-=B(wt),U.s2<0&&(U.s2+=1),B=null}function $t(wt,U){return U.c=wt.c,U.s0=wt.s0,U.s1=wt.s1,U.s2=wt.s2,U}function Yt(wt,U){var B=new ee(wt),st=U&&U.state,ct=B.next;return ct.int32=function(){return 4294967296*B.next()|0},ct.double=function(){return ct()+11102230246251565e-32*(2097152*ct()|0)},ct.quick=ct,st&&("object"==typeof st&&$t(st,B),ct.state=function(){return $t(B,{})}),ct}Xt&&Xt.exports?Xt.exports=Yt:Nt.amdD&&Nt.amdO?void 0===(ae=function(){return Yt}.call(te,Nt,te,Xt))||(Xt.exports=ae):this.alea=Yt}(0,Ht=Nt.nmd(Ht))},49:function(Ht,te,Nt){var ae;!function(Re,Xt,le){function ee(wt){var U=this,B="";U.next=function(){var ct=U.b,H=U.c,mt=U.d,tt=U.a;return ct=ct<<25^ct>>>7^H,H=H-mt|0,mt=mt<<24^mt>>>8^tt,tt=tt-ct|0,U.b=ct=ct<<20^ct>>>12^H,U.c=H=H-mt|0,U.d=mt<<16^H>>>16^tt,U.a=tt-ct|0},U.a=0,U.b=0,U.c=-1640531527,U.d=1367130551,wt===Math.floor(wt)?(U.a=wt/4294967296|0,U.b=0|wt):B+=wt;for(var st=0;st<B.length+20;st++)U.b^=0|B.charCodeAt(st),U.next()}function $t(wt,U){return U.a=wt.a,U.b=wt.b,U.c=wt.c,U.d=wt.d,U}function Yt(wt,U){var B=new ee(wt),st=U&&U.state,ct=function(){return(B.next()>>>0)/4294967296};return ct.double=function(){do{var H=((B.next()>>>11)+(B.next()>>>0)/4294967296)/2097152}while(0===H);return H},ct.int32=B.next,ct.quick=ct,st&&("object"==typeof st&&$t(st,B),ct.state=function(){return $t(B,{})}),ct}Xt&&Xt.exports?Xt.exports=Yt:Nt.amdD&&Nt.amdO?void 0===(ae=function(){return Yt}.call(te,Nt,te,Xt))||(Xt.exports=ae):this.tychei=Yt}(0,Ht=Nt.nmd(Ht))},652:function(Ht,te,Nt){var ae;!function(Re,Xt,le){function ee(wt){var U=this,B="";U.x=0,U.y=0,U.z=0,U.w=0,U.next=function(){var ct=U.x^U.x<<11;return U.x=U.y,U.y=U.z,U.z=U.w,U.w^=U.w>>>19^ct^ct>>>8},wt===(0|wt)?U.x=wt:B+=wt;for(var st=0;st<B.length+64;st++)U.x^=0|B.charCodeAt(st),U.next()}function $t(wt,U){return U.x=wt.x,U.y=wt.y,U.z=wt.z,U.w=wt.w,U}function Yt(wt,U){var B=new ee(wt),st=U&&U.state,ct=function(){return(B.next()>>>0)/4294967296};return ct.double=function(){do{var H=((B.next()>>>11)+(B.next()>>>0)/4294967296)/2097152}while(0===H);return H},ct.int32=B.next,ct.quick=ct,st&&("object"==typeof st&&$t(st,B),ct.state=function(){return $t(B,{})}),ct}Xt&&Xt.exports?Xt.exports=Yt:Nt.amdD&&Nt.amdO?void 0===(ae=function(){return Yt}.call(te,Nt,te,Xt))||(Xt.exports=ae):this.xor128=Yt}(0,Ht=Nt.nmd(Ht))},618:function(Ht,te,Nt){var ae;!function(Re,Xt,le){function ee(wt){var U=this;U.next=function(){var B,st,ct=U.w,H=U.X,mt=U.i;return U.w=ct=ct+1640531527|0,st=H[mt+34&127],B=H[mt=mt+1&127],st^=st<<13,B^=B<<17,st=H[mt]=(st^=st>>>15)^(B^=B>>>12),U.i=mt,st+(ct^ct>>>16)|0},function(B,st){var ct,H,mt,tt,Et,kt=[],zt=128;for(st===(0|st)?(H=st,st=null):(st+="\0",H=0,zt=Math.max(zt,st.length)),mt=0,tt=-32;tt<zt;++tt)st&&(H^=st.charCodeAt((tt+32)%st.length)),0===tt&&(Et=H),H^=H<<10,H^=H>>>15,H^=H<<4,H^=H>>>13,tt>=0&&(mt=0==(ct=kt[127&tt]^=H+(Et=Et+1640531527|0))?mt+1:0);for(mt>=128&&(kt[127&(st&&st.length||0)]=-1),mt=127,tt=512;tt>0;--tt)H=kt[mt+34&127],ct=kt[mt=mt+1&127],H^=H<<13,ct^=ct<<17,kt[mt]=(H^=H>>>15)^(ct^=ct>>>12);B.w=Et,B.X=kt,B.i=mt}(U,wt)}function $t(wt,U){return U.i=wt.i,U.w=wt.w,U.X=wt.X.slice(),U}function Yt(wt,U){null==wt&&(wt=+new Date);var B=new ee(wt),st=U&&U.state,ct=function(){return(B.next()>>>0)/4294967296};return ct.double=function(){do{var H=((B.next()>>>11)+(B.next()>>>0)/4294967296)/2097152}while(0===H);return H},ct.int32=B.next,ct.quick=ct,st&&(st.X&&$t(st,B),ct.state=function(){return $t(B,{})}),ct}Xt&&Xt.exports?Xt.exports=Yt:Nt.amdD&&Nt.amdO?void 0===(ae=function(){return Yt}.call(te,Nt,te,Xt))||(Xt.exports=ae):this.xor4096=Yt}(0,Ht=Nt.nmd(Ht))},30:function(Ht,te,Nt){var ae;!function(Re,Xt,le){function ee(wt){var U=this;U.next=function(){var B,st,ct=U.x,H=U.i;return B=ct[H],st=(B^=B>>>7)^B<<24,st^=(B=ct[H+1&7])^B>>>10,st^=(B=ct[H+3&7])^B>>>3,st^=(B=ct[H+4&7])^B<<7,B=ct[H+7&7],st^=(B^=B<<13)^B<<9,ct[H]=st,U.i=H+1&7,st},function(B,st){var ct,H=[];if(st===(0|st))H[0]=st;else for(st=""+st,ct=0;ct<st.length;++ct)H[7&ct]=H[7&ct]<<15^st.charCodeAt(ct)+H[ct+1&7]<<13;for(;H.length<8;)H.push(0);for(ct=0;ct<8&&0===H[ct];++ct);for(8==ct&&(H[7]=-1),B.x=H,B.i=0,ct=256;ct>0;--ct)B.next()}(U,wt)}function $t(wt,U){return U.x=wt.x.slice(),U.i=wt.i,U}function Yt(wt,U){null==wt&&(wt=+new Date);var B=new ee(wt),st=U&&U.state,ct=function(){return(B.next()>>>0)/4294967296};return ct.double=function(){do{var H=((B.next()>>>11)+(B.next()>>>0)/4294967296)/2097152}while(0===H);return H},ct.int32=B.next,ct.quick=ct,st&&(st.x&&$t(st,B),ct.state=function(){return $t(B,{})}),ct}Xt&&Xt.exports?Xt.exports=Yt:Nt.amdD&&Nt.amdO?void 0===(ae=function(){return Yt}.call(te,Nt,te,Xt))||(Xt.exports=ae):this.xorshift7=Yt}(0,Ht=Nt.nmd(Ht))},801:function(Ht,te,Nt){var ae;!function(Re,Xt,le){function ee(wt){var U=this,B="";U.next=function(){var ct=U.x^U.x>>>2;return U.x=U.y,U.y=U.z,U.z=U.w,U.w=U.v,(U.d=U.d+362437|0)+(U.v=U.v^U.v<<4^ct^ct<<1)|0},U.x=0,U.y=0,U.z=0,U.w=0,U.v=0,wt===(0|wt)?U.x=wt:B+=wt;for(var st=0;st<B.length+64;st++)U.x^=0|B.charCodeAt(st),st==B.length&&(U.d=U.x<<10^U.x>>>4),U.next()}function $t(wt,U){return U.x=wt.x,U.y=wt.y,U.z=wt.z,U.w=wt.w,U.v=wt.v,U.d=wt.d,U}function Yt(wt,U){var B=new ee(wt),st=U&&U.state,ct=function(){return(B.next()>>>0)/4294967296};return ct.double=function(){do{var H=((B.next()>>>11)+(B.next()>>>0)/4294967296)/2097152}while(0===H);return H},ct.int32=B.next,ct.quick=ct,st&&("object"==typeof st&&$t(st,B),ct.state=function(){return $t(B,{})}),ct}Xt&&Xt.exports?Xt.exports=Yt:Nt.amdD&&Nt.amdO?void 0===(ae=function(){return Yt}.call(te,Nt,te,Xt))||(Xt.exports=ae):this.xorwow=Yt}(0,Ht=Nt.nmd(Ht))},971:function(Ht,te,Nt){var ae;!function(Re,Xt,le){var ee,$t=256,Yt=le.pow($t,6),wt=le.pow(2,52),U=2*wt,B=255;function st(kt,zt,ie){var ut=[],vt=tt(mt((zt=1==zt?{entropy:!0}:zt||{}).entropy?[kt,Et(Xt)]:kt??function(){try{var ot;return ee&&(ot=ee.randomBytes)?ot=ot($t):(ot=new Uint8Array($t),(Re.crypto||Re.msCrypto).getRandomValues(ot)),Et(ot)}catch{var Rt=Re.navigator,Pt=Rt&&Rt.plugins;return[+new Date,Re,Pt,Re.screen,Et(Xt)]}}(),3),ut),q=new ct(ut),E=function(){for(var ot=q.g(6),Rt=Yt,Pt=0;ot<wt;)ot=(ot+Pt)*$t,Rt*=$t,Pt=q.g(1);for(;ot>=U;)ot/=2,Rt/=2,Pt>>>=1;return(ot+Pt)/Rt};return E.int32=function(){return 0|q.g(4)},E.quick=function(){return q.g(4)/4294967296},E.double=E,tt(Et(q.S),Xt),(zt.pass||ie||function(ot,Rt,Pt,oe){return oe&&(oe.S&&H(oe,q),ot.state=function(){return H(q,{})}),Pt?(le.random=ot,Rt):ot})(E,vt,"global"in zt?zt.global:this==le,zt.state)}function ct(kt){var zt,ie=kt.length,ut=this,vt=0,q=ut.i=ut.j=0,E=ut.S=[];for(ie||(kt=[ie++]);vt<$t;)E[vt]=vt++;for(vt=0;vt<$t;vt++)E[vt]=E[q=B&q+kt[vt%ie]+(zt=E[vt])],E[q]=zt;(ut.g=function(ot){for(var Rt,Pt=0,oe=ut.i,ge=ut.j,ke=ut.S;ot--;)Rt=ke[oe=B&oe+1],Pt=Pt*$t+ke[B&(ke[oe]=ke[ge=B&ge+Rt])+(ke[ge]=Rt)];return ut.i=oe,ut.j=ge,Pt})($t)}function H(kt,zt){return zt.i=kt.i,zt.j=kt.j,zt.S=kt.S.slice(),zt}function mt(kt,zt){var ie,ut=[],vt=typeof kt;if(zt&&"object"==vt)for(ie in kt)try{ut.push(mt(kt[ie],zt-1))}catch{}return ut.length?ut:"string"==vt?kt:kt+"\0"}function tt(kt,zt){for(var ie,ut=kt+"",vt=0;vt<ut.length;)zt[B&vt]=B&(ie^=19*zt[B&vt])+ut.charCodeAt(vt++);return Et(zt)}function Et(kt){return String.fromCharCode.apply(0,kt)}if(tt(le.random(),Xt),Ht.exports){Ht.exports=st;try{ee=Nt(42)}catch{}}else void 0===(ae=function(){return st}.call(te,Nt,te,Ht))||(Ht.exports=ae)}(typeof self<"u"?self:this,[],Math)},730:()=>{window.requestAnimFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(Ht,te){return window.setTimeout(Ht,16.666666666666668)},window.cancelRequestAnimFrame=window.cancelCancelRequestAnimationFrame||window.webkitCancelRequestAnimationFrame||window.mozCancelRequestAnimationFrame||window.oCancelRequestAnimationFrame||window.msCancelRequestAnimationFrame||window.clearTimeout},410:()=>{},628:()=>{},601:()=>{},792:()=>{},977:()=>{},42:()=>{}},Ng={};function _t(Ht){var te=Ng[Ht];if(void 0!==te)return te.exports;var Nt=Ng[Ht]={id:Ht,loaded:!1,exports:{}};return ik[Ht].call(Nt.exports,Nt,Nt.exports,_t),Nt.loaded=!0,Nt.exports}_t.amdD=function(){throw new Error("define cannot be used indirect")},_t.amdO={},_t.n=Ht=>{var te=Ht&&Ht.__esModule?()=>Ht.default:()=>Ht;return _t.d(te,{a:te}),te},_t.d=(Ht,te)=>{for(var Nt in te)_t.o(te,Nt)&&!_t.o(Ht,Nt)&&Object.defineProperty(Ht,Nt,{enumerable:!0,get:te[Nt]})},_t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch{if("object"==typeof window)return window}}(),_t.o=(Ht,te)=>Object.prototype.hasOwnProperty.call(Ht,te),_t.r=Ht=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(Ht,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Ht,"__esModule",{value:!0})},_t.nmd=Ht=>(Ht.paths=[],Ht.children||(Ht.children=[]),Ht);var Sg={};(()=>{"use strict";_t.d(Sg,{default:()=>pM});var Ht={};_t.r(Ht),_t.d(Ht,{browserFiles:()=>Lk,browserHTTPRequest:()=>Pk,concatenateArrayBuffers:()=>Fc,copyModel:()=>Ak,decodeWeights:()=>jg,encodeWeights:()=>ld,fromMemory:()=>Wk,fromMemorySync:()=>d0,getLoadHandlers:()=>vk,getModelArtifactsForJSON:()=>cd,getModelArtifactsForJSONSync:()=>Yg,getModelArtifactsInfoForJSON:()=>Dl,getSaveHandlers:()=>Jg,getWeightSpecs:()=>Zg,http:()=>gd,isHTTPScheme:()=>md,listModels:()=>Ek,loadWeights:()=>zk,moveModel:()=>Fk,registerLoadRouter:()=>wk,registerSaveRouter:()=>xk,removeModel:()=>Rk,weightsLoaderFactory:()=>c0,withSaveHandler:()=>Vk,withSaveHandlerSync:()=>Uk});var te={};_t.r(te),_t.d(te,{assertParamsValid:()=>xd,computeFlatOffset:()=>kd,computeOutShape:()=>wd,getNormalizedAxes:()=>qk,isSliceContinous:()=>vd,maskToAxes:()=>jk,parseSliceParams:()=>_c,sliceInfo:()=>Id,startForAxis:()=>k0,startIndicesWithElidedDims:()=>x0,stopForAxis:()=>I0,stopIndicesWithElidedDims:()=>w0,stridesForAxis:()=>v0,stridesWithElidedDims:()=>g0});var Nt={};_t.r(Nt),_t.d(Nt,{conv2d:()=>Sy,depthwiseConv2d:()=>DI,matMul:()=>af});var ae={};_t.r(ae),_t.d(ae,{collectGatherOpShapeInfo:()=>Lf,computeOutShape:()=>s1,segOpComputeOptimalWindowSize:()=>r1});var Re={};_t.r(Re),_t.d(Re,{ERF_A1:()=>Nf,ERF_A2:()=>Sf,ERF_A3:()=>Tf,ERF_A4:()=>Cf,ERF_A5:()=>$f,ERF_P:()=>If,PARALLELIZE_THRESHOLD:()=>bf,RowPartitionType:()=>ts,SELU_SCALE:()=>uh,SELU_SCALEALPHA:()=>lh,applyActivation:()=>sh,assertAndGetBroadcastShape:()=>de,assertAxesAreInnerMostDims:()=>Dn,assertParamsConsistent:()=>yf,assignToTypedArray:()=>Uy,axesAreInnerMostDims:()=>_d,calculateShapes:()=>ql,checkEinsumDimSizes:()=>Df,checkPadOnDimRoundingMode:()=>Gn,combineLocations:()=>Z0,combineRaggedTensorToTensorShapes:()=>My,complexWithEvenIndex:()=>Wy,complexWithOddIndex:()=>Vy,computeConv2DInfo:()=>Nn,computeConv3DInfo:()=>la,computeDefaultPad:()=>Td,computeDilation2DInfo:()=>_l,computeOptimalWindowSize:()=>oh,computeOutAndReduceShapes:()=>Sn,computeOutShape:()=>ds,computePool2DInfo:()=>Dr,computePool3DInfo:()=>Cs,convertConv2DDataFormat:()=>$s,decodeEinsumEquation:()=>Af,eitherStridesOrDilationsAreOne:()=>Fn,expandShapeToKeepDim:()=>sn,exponent:()=>Hy,exponents:()=>Gy,fromStringArrayToUint8:()=>a1,fromUint8ToStringArray:()=>ti,getAxesPermutation:()=>tn,getBroadcastDims:()=>Zi,getComplexWithIndex:()=>Ef,getEinsumComputePath:()=>_f,getEinsumPermutation:()=>Ff,getFusedBiasGradient:()=>rh,getFusedDyActivation:()=>nh,getImageCenter:()=>xf,getInnerMostAxes:()=>an,getPermuted:()=>Xl,getRaggedRank:()=>zy,getReductionAxes:()=>fn,getReshaped:()=>Kl,getReshapedPermuted:()=>Yl,getRowPartitionTypesHelper:()=>Ly,getSliceBeginCoords:()=>wf,getSliceSize:()=>vf,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Ky,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Xy,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Yy,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>NN,getSparseReshapeInputOutputMismatchErrorMessage:()=>t1,getSparseReshapeInputOutputMultipleErrorMessage:()=>Qy,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Zy,getSparseReshapeNegativeOutputDimErrorMessage:()=>Jy,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>n1,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>SN,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>TN,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>e1,getUndoAxesPermutation:()=>ha,isIdentityPermutation:()=>Of,log:()=>ok,mergeRealAndImagArrays:()=>Fs,prepareAndValidate:()=>kf,prepareSplitSize:()=>Mf,segment_util:()=>ae,shouldFuse:()=>ah,slice_util:()=>te,splitRealAndImagArrays:()=>By,tupleValuesAreOne:()=>ua,upcastType:()=>ur,validateDefaultValueShape:()=>Py,validateInput:()=>ky,validateUpdateShape:()=>vy,warn:()=>vr});var Xt={};_t.r(Xt),_t.d(Xt,{json:()=>WT});var le={};_t.r(le),_t.d(le,{json:()=>VT});var ee={};_t.r(ee),_t.d(ee,{json:()=>UT});var $t={};_t.r($t),_t.d($t,{json:()=>GT});var Yt={};_t.r(Yt),_t.d(Yt,{json:()=>HT});var wt={};_t.r(wt),_t.d(wt,{json:()=>jT});var U={};_t.r(U),_t.d(U,{json:()=>qT});var B={};_t.r(B),_t.d(B,{json:()=>KT});var st={};_t.r(st),_t.d(st,{json:()=>XT});var ct={};_t.r(ct),_t.d(ct,{json:()=>YT});var H={};_t.r(H),_t.d(H,{json:()=>ZT});var mt={};_t.r(mt),_t.d(mt,{json:()=>JT});var tt={};_t.r(tt),_t.d(tt,{json:()=>QT});var Et={};_t.r(Et),_t.d(Et,{json:()=>tC});var kt={};_t.r(kt),_t.d(kt,{json:()=>eC});var zt={};_t.r(zt),_t.d(zt,{json:()=>nC});var ie={};_t.r(ie),_t.d(ie,{json:()=>rC});var ut={};_t.r(ut),_t.d(ut,{json:()=>sC});var vt={};_t.r(vt),_t.d(vt,{json:()=>aC});var q={};_t.r(q),_t.d(q,{OP_SCOPE_SUFFIX:()=>Hg,abs:()=>mn,acos:()=>T0,acosh:()=>C0,add:()=>yt,addN:()=>Kk,all:()=>Sd,any:()=>Oc,argMax:()=>Qi,argMin:()=>$0,asin:()=>E0,asinh:()=>R0,atan:()=>A0,atan2:()=>F0,atanh:()=>D0,avgPool:()=>Lc,avgPool3d:()=>_0,basicLSTMCell:()=>Xk,batchNorm:()=>Ol,batchNorm2d:()=>O0,batchNorm3d:()=>M0,batchNorm4d:()=>L0,batchToSpaceND:()=>zc,bincount:()=>z0,booleanMaskAsync:()=>CI,broadcastArgs:()=>Yk,broadcastTo:()=>no,buffer:()=>we,cast:()=>Dt,ceil:()=>P0,clipByValue:()=>hr,clone:()=>Ss,complex:()=>ra,concat:()=>je,concat1d:()=>B0,concat2d:()=>Pc,concat3d:()=>W0,concat4d:()=>V0,conv1d:()=>$d,conv2d:()=>ca,conv2dTranspose:()=>Rd,conv3d:()=>U0,conv3dTranspose:()=>H0,cos:()=>Bc,cosh:()=>Ad,cosineWindow:()=>rf,cumprod:()=>Wc,cumsum:()=>Fd,denseBincount:()=>Zk,depthToSpace:()=>j0,depthwiseConv2d:()=>Ml,diag:()=>Jk,dilation2d:()=>q0,div:()=>Bt,divNoNan:()=>K0,dot:()=>X0,dropout:()=>Iy,einsum:()=>Qk,elu:()=>Ll,enclosingPowerOfTwo:()=>Ny,equal:()=>Yr,erf:()=>Y0,euclideanNorm:()=>Q0,exp:()=>kr,expandDims:()=>er,expm1:()=>ty,eye:()=>Od,fft:()=>th,fill:()=>ro,floor:()=>Pl,floorDiv:()=>Dd,fused:()=>Nt,gather:()=>Bl,gatherND:()=>AI,greater:()=>Ir,greaterEqual:()=>Za,ifft:()=>jl,imag:()=>Uc,image:()=>Qr,inTopKAsync:()=>FI,irfft:()=>Jd,isFinite:()=>ey,isInf:()=>ny,isNaN:()=>ry,leakyRelu:()=>Gc,less:()=>Md,lessEqual:()=>Ja,linalg:()=>_y,linspace:()=>tI,localResponseNormalization:()=>sy,log:()=>Nr,log1p:()=>Hc,logSigmoid:()=>ay,logSoftmax:()=>Ld,logSumExp:()=>zd,logicalAnd:()=>hs,logicalNot:()=>jc,logicalOr:()=>Pd,logicalXor:()=>iy,losses:()=>bN,lowerBound:()=>eI,matMul:()=>Ie,max:()=>Zr,maxPool:()=>qc,maxPool3d:()=>ly,maxPoolWithArgmax:()=>nI,maximum:()=>Es,mean:()=>rn,meshgrid:()=>rI,min:()=>Vc,minimum:()=>Wl,mirrorPad:()=>uy,mod:()=>cy,moments:()=>Kc,movingAverage:()=>$I,mul:()=>M,multiRNNCell:()=>sI,multinomial:()=>aI,neg:()=>Ke,norm:()=>zl,notEqual:()=>ao,oneHot:()=>Wd,ones:()=>Sr,onesLike:()=>Tr,op:()=>O,outerProduct:()=>iI,pad:()=>da,pad1d:()=>oI,pad2d:()=>lI,pad3d:()=>uI,pad4d:()=>cI,pool:()=>hy,pow:()=>pa,prelu:()=>Yc,print:()=>i0,prod:()=>py,raggedGather:()=>hI,raggedTensorToTensor:()=>pI,rand:()=>dI,randomGamma:()=>gI,randomNormal:()=>Ud,randomStandardNormal:()=>yI,randomUniform:()=>Vl,range:()=>Ul,real:()=>Gl,reciprocal:()=>dy,relu:()=>ps,relu6:()=>Gd,reshape:()=>P,reverse:()=>Or,reverse1d:()=>bI,reverse2d:()=>xI,reverse3d:()=>wI,reverse4d:()=>vI,rfft:()=>eh,round:()=>Hd,rsqrt:()=>jd,scalar:()=>Qt,scatterND:()=>EI,searchSorted:()=>Bd,selu:()=>qd,separableConv2d:()=>Kd,setdiff1dAsync:()=>kI,sigmoid:()=>Xr,sign:()=>fy,signal:()=>yN,sin:()=>Xd,sinh:()=>Yd,slice:()=>ne,slice1d:()=>Zc,slice2d:()=>Zd,slice3d:()=>Jc,slice4d:()=>Hl,softmax:()=>Qc,softplus:()=>so,spaceToBatchND:()=>Xc,sparse:()=>xN,sparseToDense:()=>RI,spectral:()=>gN,split:()=>pr,sqrt:()=>Pn,square:()=>Pe,squaredDifference:()=>Qd,squeeze:()=>dr,stack:()=>Cr,step:()=>oo,stridedSlice:()=>my,string:()=>wN,sub:()=>Ot,sum:()=>Vt,tan:()=>gy,tanh:()=>eo,tensor:()=>Kr,tensor1d:()=>on,tensor2d:()=>Rs,tensor3d:()=>f0,tensor4d:()=>II,tensor5d:()=>NI,tensor6d:()=>SI,tile:()=>_r,topk:()=>yy,transpose:()=>Te,truncatedNormal:()=>tf,unique:()=>by,unsortedSegmentSum:()=>ef,unstack:()=>Jr,upperBound:()=>TI,variable:()=>xy,where:()=>tr,whereAsync:()=>wy,zeros:()=>gn,zerosLike:()=>$e});var E={};_t.r(E),_t.d(E,{addImpl:()=>fw,bincountImpl:()=>zm,bincountReduceImpl:()=>ww,castImpl:()=>dw,ceilImpl:()=>vw,concatImpl:()=>kw,equalImpl:()=>Sw,expImpl:()=>Cw,expm1Impl:()=>Ew,floorImpl:()=>Fw,gatherNdImpl:()=>Dw,gatherV2Impl:()=>_w,greaterEqualImpl:()=>Mw,greaterImpl:()=>Ow,lessEqualImpl:()=>zw,lessImpl:()=>Lw,linSpaceImpl:()=>Pw,logImpl:()=>Bw,maxImpl:()=>Ww,maximumImpl:()=>Uw,minimumImpl:()=>Gw,multiplyImpl:()=>Pm,negImpl:()=>jw,notEqualImpl:()=>qw,prodImpl:()=>Yw,raggedGatherImpl:()=>Jw,raggedTensorToTensorImpl:()=>ev,rangeImpl:()=>nv,rsqrtImpl:()=>rv,scatterImpl:()=>vo,sigmoidImpl:()=>HC,simpleAbsImpl:()=>gw,sliceImpl:()=>xw,sparseFillEmptyRowsImpl:()=>av,sparseReshapeImpl:()=>iv,sparseSegmentReductionImpl:()=>Hm,sqrtImpl:()=>PR,stridedSliceImpl:()=>ov,stringNGramsImpl:()=>lv,stringSplitImpl:()=>uv,stringToHashBucketFastImpl:()=>cv,subImpl:()=>Rw,tileImpl:()=>hv,topKImpl:()=>dv,transposeImpl:()=>Mm,uniqueImpl:()=>mv});class ot{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class Rt{refCount(t){return Pt("refCount")}incRef(t){return Pt("incRef")}timerAvailable(){return!0}time(t){return Pt("time")}read(t){return Pt("read")}readSync(t){return Pt("readSync")}readToGPU(t,e){return Pt("readToGPU")}numDataIds(){return Pt("numDataIds")}disposeData(t,e){return Pt("disposeData")}write(t,e,r){return Pt("write")}move(t,e,r,s,a){return Pt("move")}memory(){return Pt("memory")}floatPrecision(){return Pt("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Pt("dispose")}}function Pt(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function oe(n){let t=n.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,Ne(n,t,e)}function ge(n,t,e){return Math.max(n,Math.min(t,e))}function ke(n){return n%2==0?n:n+1}function Ne(n,t,e){const r=n[t];n[t]=n[e],n[e]=r}function I(n,t){if(!n)throw new Error("string"==typeof t?t:t())}function Ae(n,t,e=""){I(he(n,t),()=>e+` Shapes ${n} and ${t} must match`)}function Je(n){I(null!=n,()=>"The input to the tensor constructor must be a non-null value.")}function vn(n,t=[],e=!1){if(null==t&&(t=[]),Array.isArray(n)||xr(n)&&!e)for(let r=0;r<n.length;++r)vn(n[r],t,e);else t.push(n);return t}function nt(n){if(0===n.length)return 1;let t=n[0];for(let e=1;e<n.length;e++)t*=n[e];return t}function he(n,t){if(n===t)return!0;if(null==n||null==t||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}function vs(n){return n%1==0}function zo(n){const t=Math.ceil(Math.sqrt(n));return[t,Math.ceil(n/t)]}function Vs(n,t){return t<=n.length?n:n+" ".repeat(t-n.length)}function Mu(n,t=(s=>0),e,r=setTimeout){return new Promise((s,a)=>{let i=0;const o=()=>{if(n())return void s();i++;const u=t(i);null!=e&&i>=e?a():r(o,u)};o()})}function Lu(n,t){let e=1,r=-1;for(let a=0;a<n.length;++a)if(n[a]>=0)e*=n[a];else if(-1===n[a]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${a}`);r=a}else if(n[a]<0)throw Error(`Shapes can not be < 0. Found ${n[a]} at dim ${a}`);if(-1===r){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${n}`);return n}if(0===e)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(t%e!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const s=n.slice();return s[r]=t/e,s}function be(n,t){const e=t.length;return I((n=null==n?t.map((r,s)=>s):[].concat(n)).every(r=>r>=-e&&r<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${n}`),I(n.every(r=>vs(r)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(r=>r<0?e+r:r)}function us(n,t){const e=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:be(t,n).sort();let i=0;for(let o=0;o<n.length;++o){if(null!=a){if(a[i]===o&&1!==n[o])throw new Error(`Can't squeeze axis ${o} since its dim '${n[o]}' is not 1`);(null==a[i]||a[i]>o)&&1===n[o]&&(e.push(n[o]),r.push(o)),a[i]<=o&&i++}1!==n[o]&&(e.push(n[o]),r.push(o))}return{newShape:e,keptDims:r}}function cn(n,t){let e=null;if(null==n||"float32"===n)e=new Float32Array(t);else if("int32"===n)e=new Int32Array(t);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);e=new Uint8Array(t)}return e}function hn(n,t){let e=null;if(null==n||"float32"===n)e=new Float32Array(t);else if("int32"===n)e=new Int32Array(t);else if("bool"===n)e=new Uint8Array(t);else{if("string"!==n)throw new Error(`Unknown data type ${n}`);e=new Array(t)}return e}function zu(n,t){return!("complex64"===t||"float32"===t&&"complex64"!==n||"int32"===t&&"float32"!==n&&"complex64"!==n||"bool"===t&&"bool"===n)}function xr(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}function Po(n){if("float32"===n||"int32"===n)return 4;if("complex64"===n)return 8;if("bool"===n)return 1;throw new Error(`Unknown dtype ${n}`)}function Ea(n){return"string"==typeof n||n instanceof String}function Ar(n){return"number"==typeof n}function Ra(n){return Array.isArray(n)?Ra(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":Ar(n)?"float32":Ea(n)?"string":"boolean"==typeof n?"bool":"float32"}function Ii(n){return!!(n&&n.constructor&&n.call&&n.apply)}function Us(n,t){for(let e=t;e<n;++e)if(n%e==0)return e;return n}function jt(n){const t=n.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=n[t-1];for(let r=t-3;r>=0;--r)e[r]=e[r+1]*n[r+1];return e}function Ni(n,t,e,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let i=0;i<a;i++)s[i]=e[n+i]}else{const a=t[0],i=t.slice(1),o=i.reduce((u,c)=>u*c)*(r?2:1);for(let u=0;u<a;u++)s[u]=Ni(n+u*o,i,e,r)}return s}function Wn(n,t,e=!1){if(0===n.length)return t[0];const r=n.reduce((s,a)=>s*a)*(e?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${n}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return Ni(0,n,t,e)}function Si(n,t){const e=dn(n,t);for(let r=0;r<e.length;r++)e[r]=1;return e}function dn(n,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(n);if("int32"===t)return new Int32Array(n);if("bool"===t)return new Uint8Array(n);throw new Error(`Unknown data type ${t}`)}function Bo(n,t){const e=n.reduce((r,s)=>r*s,1);if(null==t||"float32"===t)return Wn(n,new Float32Array(e));if("int32"===t)return Wn(n,new Int32Array(e));if("bool"===t)return Wn(n,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function Wo(n){n.forEach(t=>{I(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function wr(n,t,e){if(0===t)return 0;if(1===t)return n[0];let r=n[n.length-1];for(let s=0;s<n.length-1;++s)r+=e[s]*n[s];return r}function ks(n,t,e){if(0===t)return[];if(1===t)return[n];const r=new Array(t);for(let s=0;s<r.length-1;++s)r[s]=Math.floor(n/e[s]),n-=r[s]*e[s];return r[r.length-1]=n,r}function Is(n){return n&&n.then&&"function"==typeof n.then}const Vo="tfjsflags";class Pu{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Bu,this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&(Q().getBool("IS_TEST")||Q().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,r){if(this.flagRegistry[t]={evaluationFn:e,setHook:r},null!=this.urlFlags[t]){const s=this.urlFlags[t];Q().getBool("IS_TEST")||Q().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${s}.`),this.set(t,s)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(Is(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=this.getQueryParams(this.global.location.search);Vo in t&&t[Vo].split(",").forEach(e=>{const[r,s]=e.split(":");this.urlFlags[r]=function(a,i){if("true"===(i=i.toLowerCase())||"false"===i)return"true"===i;if(""+ +i===i)return+i;throw new Error(`Could not parse value flag value ${i} for flag ${a}.`)}(r,s)})}}function Bu(n){const t={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...r)=>{return i=r[1],t[decodeURIComponent(r[0])]=decodeURIComponent(i||""),r.join("=");var i}),t}function Q(){return Ci}let Ti,Ci=null;function Wu(){if(null==Ti){let n;if(typeof window<"u")n=window;else if(void 0!==_t.g)n=_t.g;else if(typeof process<"u")n=process;else{if(typeof self>"u")throw new Error("Could not find a global object");n=self}Ti=n}return Ti}function Uo(n,t){const e=function(){const r=Wu();return null==r._tfGlobals&&(r._tfGlobals=new Map),r._tfGlobals}();if(e.has(n))return e.get(n);{const r=t();return e.set(n,r),e.get(n)}}const Gs="Abs",Hs="Acos",Aa="Acosh",Jn="Add",$i="AddN",Ri="ArgMax",Ai="ArgMin",Fa="Asin",Da="Asinh",_a="Atan",Oa="Atanh",Ma="Atan2",Fi="AvgPool",Ho="AvgPoolGrad",Di="AvgPool3D",_i="AvgPool3DGrad",Oi="BatchMatMul",Mi="BatchToSpaceND",jo="Bincount",qo="BroadcastArgs",La="Cast",za="Ceil",Pa="ClipByValue",Ko="Complex",Li="ComplexAbs",zi="Concat",Pi="Conv2D",Xo="Conv2DBackpropFilter",Bi="Conv2DBackpropInput",Wi="Conv3D",Yo="Conv3DBackpropFilterV2",Vi="Conv3DBackpropInputV2",jr="Cos",js="Cosh",cs="Cumprod",Ui="Cumsum",qs="CropAndResize",Ba="DenseBincount",Zo="DepthToSpace",Gi="DepthwiseConv2dNative",Wa="DepthwiseConv2dNativeBackpropFilter",Jo="DepthwiseConv2dNativeBackpropInput",Qo="Diag",T="Dilation2D",F="Dilation2DBackpropInput",D="Dilation2DBackpropFilter",j="RealDiv",G="Einsum",Z="Elu",ht="EluGrad",xt="Erf",It="Equal",Tt="Exp",Lt="ExpandDims",qt="Expm1",_e="Fill",Oe="FlipLeftRight",He="Floor",Qn="FloorDiv",Ks="FusedBatchNorm",Xs="GatherV2",tl="GatherNd",Hi="Greater",Ys="GreaterEqual",el="Identity",gp="IFFT",yp="Imag",nl="IsFinite",rl="IsInf",sl="IsNan",Vu="LeakyRelu",Uu="Less",Gu="LessEqual",bp="LinSpace",al="Log",il="Log1p",Hu="LogicalAnd",ju="LogicalNot",qu="LogicalOr",Ku="LRN",xp="LRNGrad",Xu="Max",ol="Maximum",Yu="MaxPool",wp="MaxPoolGrad",Zu="MaxPool3D",vp="MaxPool3DGrad",kp="MaxPoolWithArgmax",Ju="Mean",Qu="Min",ll="Minimum",tc="MirrorPad",ul="Mod",Ip="Multinomial",cl="Multiply",ec="Neg",nc="NotEqual",Np="NonMaxSuppressionV3",Sp="NonMaxSuppressionV4",Tp="NonMaxSuppressionV5",rc="OnesLike",sc="OneHot",ac="Pack",ic="PadV2",hl="Pow",oc="Prelu",lc="Prod",Cp="RaggedGather",$p="RaggedTensorToTensor",Ep="Range",Rp="Real",pl="Reciprocal",dl="Relu",uc="Reshape",cc="ResizeNearestNeighbor",Ap="ResizeNearestNeighborGrad",hc="ResizeBilinear",Fp="ResizeBilinearGrad",fl="Relu6",pc="Reverse",ml="Round",gl="Rsqrt",Dp="ScatterNd",_p="SearchSorted",dc="Select",yl="Selu",fc="Slice",bl="Sin",xl="Sinh",wl="Sign",vl="Sigmoid",kl="Softplus",Il="Sqrt",mc="Sum",gc="SpaceToBatchND",yc="SplitV",bc="Softmax",Op="SparseFillEmptyRows",Mp="SparseReshape",Lp="SparseSegmentMean",zp="SparseSegmentSum",Pp="SparseToDense",Nl="SquaredDifference",Bp="Square",Wp="StridedSlice",Vp="StringNGrams",Up="StringSplit",Gp="StringToHashBucketFast",Sl="Sub",Tl="Tan",Cl="Tanh",$l="Tile",Hp="TopK",jp="Transform",ji="Transpose",qp="Unique",xc="Unpack",wc="UnsortedSegmentSum",vc="ZerosLike",El="Step",Kp="FromPixels",Xp="RotateWithOffset",kc="_FusedMatMul",Ic="FusedConv2D",Nc="FusedDepthwiseConv2D";function vr(...n){Q().getBool("IS_TEST")||Q().getBool("PROD")||console.warn(...n)}function ok(...n){Q().getBool("IS_TEST")||Q().getBool("PROD")||console.log(...n)}const Sc=Uo("kernelRegistry",()=>new Map),Yp=Uo("gradRegistry",()=>new Map);function Zp(n,t){const e=Eg(n,t);return Sc.get(e)}function Tg(n){return Yp.get(n)}function Cg(n){const t=Sc.entries(),e=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===n&&e.push(i)}return e}function $g(n){const{kernelName:t,backendName:e}=n,r=Eg(t,e);Sc.has(r)&&vr(`The kernel '${t}' for backend '${e}' is already registered`),Sc.set(r,n)}function lk(n){const{kernelName:t}=n;Yp.has(t)&&Q().getBool("DEBUG")&&vr(`Overriding the gradient for '${t}'`),Yp.set(t,n)}function Eg(n,t){return`${t}_${n}`}var Rg=_t(720);const Va=_t.n(Rg)()||Rg;function Tc(n){return Va.fromString(n,!0,16)}const Ag=Tc("c3a5c85c97cb3127"),Ua=Tc("b492b66fbe98f273"),Vn=Tc("9ae16a3b2f90404f");function Jp(n){return n.xor(n.shru(47))}function Fg(n,t,e){const r=n.slice(t,t+e);return Va.fromBytes(Array.from(r),!0,!0)}function Ve(n,t){return Fg(n,t,8)}function Dg(n,t){return Fg(n,t,4)}function kn(n,t){return 0===t?n:n.shru(t).or(n.shl(64-t))}function Zs(n,t,e=Tc("9ddfea08eb382d69")){let r=n.xor(t).mul(e);r=r.xor(r.shru(47));let s=t.xor(r).mul(e);return s=s.xor(s.shru(47)),s=s.mul(e),s}function Cc(n,t,e,r){return function(s,a,i,o,u,c){u=u.add(s),c=kn(c.add(u).add(o),21);const l=u;return u=(u=u.add(a)).add(i),c=c.add(kn(u,44)),[u.add(o),c.add(l)]}(Ve(n,t),Ve(n,t+8),Ve(n,t+16),Ve(n,t+24),e,r)}function uk(n,t=n.length){const e=Va.fromNumber(81,!0);if(t<=32)return t<=16?function(p,d=p.length){if(d>=8){const f=Vn.add(2*d),m=Ve(p,0).add(Vn),g=Ve(p,d-8);return Zs(kn(g,37).mul(f).add(m),kn(m,25).add(g).mul(f),f)}if(d>=4){const f=Vn.add(2*d);return Zs(Dg(p,0).shl(3).add(d),Dg(p,d-4),f)}if(d>0){const m=d+(p[d-1]<<2);return Jp(Vn.mul(p[0]+(p[d>>1]<<8)).xor(Ag.mul(m))).mul(Vn)}return Vn}(n,t):function(p,d=p.length){const f=Vn.add(2*d),m=Ve(p,0).mul(Ua),g=Ve(p,8),y=Ve(p,d-8).mul(f),b=Ve(p,d-16).mul(Vn);return Zs(kn(m.add(g),43).add(kn(y,30)).add(b),m.add(kn(g.add(Vn),18)).add(y),f)}(n,t);if(t<=64)return function(p,d=p.length){const f=Vn.add(2*d),m=Ve(p,0).mul(Vn),g=Ve(p,8),y=Ve(p,d-8).mul(f),b=Ve(p,d-16).mul(Vn),x=kn(m.add(g),43).add(kn(y,30)).add(b),w=Zs(x,m.add(kn(g.add(Vn),18)).add(y),f),k=Ve(p,16).mul(f),N=Ve(p,24),$=x.add(Ve(p,d-32)).mul(f),C=w.add(Ve(p,d-24)).mul(f);return Zs(kn(k.add(N),43).add(kn($,30)).add(C),k.add(kn(N.add(m),18)).add($),f)}(n,t);let r=e,s=e.mul(Ua).add(113),a=Jp(s.mul(Vn).add(113)).mul(Vn),i=[Va.UZERO,Va.UZERO],o=[Va.UZERO,Va.UZERO];r=r.mul(Vn).add(Ve(n,0));let u=0;const c=64*(t-1>>6),l=c+(t-1&63)-63;do{r=kn(r.add(s).add(i[0]).add(Ve(n,u+8)),37).mul(Ua),s=kn(s.add(i[1]).add(Ve(n,u+48)),42).mul(Ua),r=r.xor(o[1]),s=s.add(i[0]).add(Ve(n,u+40)),a=kn(a.add(o[0]),33).mul(Ua),i=Cc(n,u,i[1].mul(Ua),r.add(o[0])),o=Cc(n,u+32,a.add(o[1]),s.add(Ve(n,u+16))),[a,r]=[r,a],u+=64}while(u!==c);const h=Ua.add(a.and(255).shl(1));return u=l,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=kn(r.add(s).add(i[0]).add(Ve(n,u+8)),37).mul(h),s=kn(s.add(i[1]).add(Ve(n,u+48)),42).mul(h),r=r.xor(o[1].mul(9)),s=s.add(i[0].mul(9).add(Ve(n,u+40))),a=kn(a.add(o[0]),33).mul(h),i=Cc(n,u,i[1].mul(h),r.add(o[0])),o=Cc(n,u+32,a.add(o[1]),s.add(Ve(n,u+16))),[a,r]=[r,a],Zs(Zs(i[0],o[0],h).add(Jp(s).mul(Ag)).add(a),Zs(i[1],o[1],h).add(r),h)}function Js(n,t){return"string"===t?Qs(n):Ga([n],t)}function Ga(n,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=vn(n)),Q().getBool("DEBUG")&&function(e,r){for(let s=0;s<e.length;s++){const a=e[s];if(isNaN(a)||!isFinite(a))throw Error(`A tensor of type ${r} being uploaded contains ${a}.`)}}(n,t),r=t,(e=n)instanceof Float32Array&&"float32"===r||e instanceof Int32Array&&"int32"===r||e instanceof Uint8Array&&"bool"===r)return n;var e,r;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(n);if("int32"===t)return new Int32Array(n);if("bool"===t){const e=new Uint8Array(n.length);for(let r=0;r<e.length;++r)0!==Math.round(n[r])&&(e[r]=1);return e}throw new Error(`Unknown data type ${t}`)}function zn(){return Q().platform.now()}function Qs(n,t="utf-8"){return t=t||"utf-8",Q().platform.encode(n,t)}function ta(n,t="utf-8"){return t=t||"utf-8",Q().platform.decode(n,t)}class ck{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new pk)}profileKernel(t,e,r){let s;const a=()=>{s=r()};let i;const o=zn();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(a);else{a();for(const u of s)u.dataSync();i=Promise.resolve({kernelMs:zn()-o})}if(Q().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<s.length;u++){const c=s[u];c.data().then(l=>{hk(l,c.dtype,t)})}return{kernelName:t,outputs:s,inputs:e,timeMs:i.then(u=>u.kernelMs),extraInfo:i.then(u=>null!=u.getExtraProfileInfo?u.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:r,timeMs:s,inputs:a,extraInfo:i}=t;r.forEach(o=>{Promise.all([o.data(),s,i]).then(u=>{this.logger.logKernelProfile(e,o,u[0],u[1],a,u[2])})})}}function hk(n,t,e){if("float32"!==t)return!1;for(let r=0;r<n.length;r++){const s=n[r];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${e}'`),!0}return!1}class pk{logKernelProfile(t,e,r,s,a,i){const o="number"==typeof s?Vs(`${s}ms`,9):s.error,u=Vs(t,25),c=e.rank,l=e.size,h=Vs(e.shape.toString(),14);let p="";for(const d in a){const f=a[d];if(null!=f){const m=f.shape||e.shape,g=m.length;p+=`${d}: ${g}D ${g>0?m:""} `}}console.log(`%c${u}\t%c${o}\t%c${c}D ${h}\t%c${l}\t%c${p}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function dk(n,t,e,r){const s=jt(t),a=function(c,l,h,p){const d=nt(l),f=p[p.length-1],m=new Array(f).fill(0),g=l.length,y="complex64"===h?Fl(c):c;if(g>1)for(let b=0;b<d/f;b++){const x=b*f;for(let w=0;w<f;w++)m[w]=Math.max(m[w],Al(y[x+w],0,h).length)}return m}(n,t,e,s),i=t.length,o=$c(n,t,e,s,a),u=["Tensor"];return r&&(u.push(`  dtype: ${e}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map(c=>"    "+c).join("\n")),u.join("\n")}function Al(n,t,e){let r;return r=Array.isArray(n)?`${parseFloat(n[0].toFixed(7))} + ${parseFloat(n[1].toFixed(7))}j`:Ea(n)?`'${n}'`:"bool"===e?Og(n):parseFloat(n.toFixed(7)).toString(),Vs(r,t)}function Og(n){return 0===n?"false":"true"}function $c(n,t,e,r,s,a=!0){const i="complex64"===e?2:1,o=t[0],u=t.length;if(0===u)return"complex64"===e?[Al(Fl(n)[0],0,e)]:"bool"===e?[Og(n[0])]:[n[0].toString()];if(1===u){if(o>20){let g=Array.from(n.slice(0,3*i)),y=Array.from(n.slice((o-3)*i,o*i));return"complex64"===e&&(g=Fl(g),y=Fl(y)),["["+g.map((b,x)=>Al(b,s[x],e)).join(", ")+", ..., "+y.map((b,x)=>Al(b,s[o-3+x],e)).join(", ")+"]"]}return["["+("complex64"===e?Fl(n):Array.from(n)).map((m,g)=>Al(m,s[g],e)).join(", ")+"]"]}const c=t.slice(1),l=r.slice(1),h=r[0]*i,p=[];if(o>20){for(let m=0;m<3;m++){const g=m*h;p.push(...$c(n.slice(g,g+h),c,e,l,s,!1))}p.push("...");for(let m=o-3;m<o;m++){const g=m*h;p.push(...$c(n.slice(g,g+h),c,e,l,s,m===o-1))}}else for(let m=0;m<o;m++){const g=m*h;p.push(...$c(n.slice(g,g+h),c,e,l,s,m===o-1))}const d=2===u?",":"";p[0]="["+p[0]+d;for(let m=1;m<p.length-1;m++)p[m]=" "+p[m]+d;let f=",\n";for(let m=2;m<u;m++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function Fl(n){const t=[];for(let e=0;e<n.length;e+=2)t.push([n[e],n[e+1]]);return t}class In{constructor(t,e,r){if(this.dtype=e,this.shape=t.slice(),this.size=nt(t),null!=r){const s=r.length;I(s===this.size,()=>`Length of values '${s}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=r||hn(e,this.size),this.strides=jt(t)}set(t,...e){0===e.length&&(e=[0]),I(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const r=this.locToIndex(e);this.values[r]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const s of t){if(s<0||s>=this.shape[e])throw new Error(`Requested out of range element at ${t}.   Buffer shape=${this.shape}`);e++}let r=t[t.length-1];for(let s=0;s<t.length-1;++s)r+=this.strides[s]*t[s];return this.values[r]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let r=0;r<t.length-1;++r)e+=this.strides[r]*t[r];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let r=0;r<e.length-1;++r)e[r]=Math.floor(t/this.strides[r]),t-=e[r]*this.strides[r];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return qr().makeTensor(this.values,this.shape,this.dtype)}}let qr=null,qi=null,fk=null;class Se{constructor(t,e,r,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=nt(t),this.strides=jt(t),this.dataId=r,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return qi.buffer(this.shape,this.dtype,t)}bufferSync(){return qi.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Wn(this.shape,t,"complex64"===this.dtype)}arraySync(){return Wn(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const t=qr().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map(r=>ta(r))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),qr().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=qr().readSync(this.dataId);if("string"===this.dtype)try{return t.map(e=>ta(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await qr().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(qr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return qi.print(this,t)}clone(){return this.throwIfDisposed(),qi.clone(this)}toString(t=!1){return dk(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),qi.cast(this,t)}variable(t=!0,e,r){return this.throwIfDisposed(),qr().makeVariable(this,t,e,r)}}function it(){return Uo("Tensor",()=>Se)}Object.defineProperty(Se,Symbol.hasInstance,{value:n=>!!n&&null!=n.data&&null!=n.dataSync&&null!=n.throwIfDisposed}),it();class Ec extends Se{constructor(t,e,r,s){super(t.shape,t.dtype,t.dataId,s),this.trainable=e,this.name=r}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!he(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);qr().disposeTensor(this),this.dataId=t.dataId,qr().incRef(this,null)}dispose(){qr().disposeVariable(this),this.isDisposedInternal=!0}}var Mg,td,ed,nd,rd,n;Object.defineProperty(Ec,Symbol.hasInstance,{value:n=>n instanceof Se&&null!=n.assign&&n.assign instanceof Function}),(n=Mg||(Mg={})).R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6",function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"}(td||(td={})),function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"}(ed||(ed={})),function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"}(nd||(nd={})),function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"}(rd||(rd={}));const mk={float32:nd,int32:td,bool:ed,complex64:rd};function ur(n,t){if("string"===n||"string"===t){if("string"===n&&"string"===t)return"string";throw new Error(`Can not upcast ${n} with ${t}`)}return mk[n][t]}function sd(n){return ur(n,"int32")}function nn(n,t){if(n.dtype===t.dtype)return[n,t];const e=ur(n.dtype,t.dtype);return[n.cast(e),t.cast(e)]}function ad(n,t){return t.some(e=>e.id===n.id)}function ea(n){const t=[];return Lg(n,t,new Set),t}function Lg(n,t,e){if(null==n)return;if(n instanceof Se)return void t.push(n);if(r=n,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=n;for(const a in s){const i=s[a];e.has(i)||(e.add(i),Lg(i,t,e))}}function id(n){return null!=n.kernelName}class zg{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class Ki{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new zg}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const r=t[e];if(await this.initializeBackend(r).success)return void await this.setBackend(r)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,r=1){return t in this.registryFactory?(vr(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:r},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:r}=this.initializeBackend(t);if(!(r?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new ck(this.backendInstance),!0}setupRegisteredKernels(){Cg(this.backendName).forEach(t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Cg(t).forEach(e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const r=e.factory();if(!r||r instanceof Rt||"function"!=typeof r.then)return this.registry[t]=r,{success:!0,asyncInit:!1};{const s=++this.pendingBackendInitId,a=r.then(i=>!(s<this.pendingBackendInitId||(this.registry[t]=i,this.pendingBackendInit=null,0))).catch(i=>(s<this.pendingBackendInitId||(this.pendingBackendInit=null,vr(`Initialization of backend ${t} failed`),vr(i.stack||i.message)),!1));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(r){return vr(`Initialization of backend ${t} failed`),vr(r.stack||r.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const r=t[e],{success:s,asyncInit:a}=this.initializeBackend(r);if(a||s)return{name:r,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const r=this.state.tensorInfo.get(e),s=r.backend,a=this.readSync(e),i=s.refCount(e);s.disposeData(e,!0),r.backend=t,t.move(e,a,r.shape,r.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let r,s=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=e(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(t,e,r){t();try{const s=r();return e(),s}catch(s){throw e(),s}}nextTensorId(){return Ki.nextTensorId++}nextVariableId(){return Ki.nextVariableId++}clone(t){const e=L.runKernel(el,{x:t});return this.addTapeNode(this.state.activeScope.name,{x:t},[e],s=>({x:()=>L.runKernel(La,{x:s},{dtype:"float32"})}),[],{}),e}runKernel(t,e,r){if(null==Zp(t,this.backendName))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:r})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,r){const s=this.backend.numDataIds();let a=0;r.forEach(u=>{a+="complex64"===u.dtype?3:1});const o=s-e-a-this.state.numDataMovesStack[this.state.numDataMovesStack.length-1];if(o>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${o} data ids) after running '${t}'`)}runKernelFunc(t){let e,r=[];const s=this.isTapeOn(),a=this.state.numBytes,i=this.state.numTensors;let o,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const c=id(t)?t.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(id(t)){const{kernelName:f,inputs:m,attrs:g}=t,y=Zp(f,this.backendName);I(null!=y,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),o=()=>{const b=this.backend.numDataIds();u=y.kernelFunc({inputs:m,attrs:g,backend:this.backend});const x=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,b,x);const w=x.map(k=>null!=k.rank?k:this.makeTensorFromTensorInfo(k));if(s){const k=this.getTensorsForGradient(f,m,w);r=this.saveTensorsForBackwardMode(k)}return w}}else{const{forwardFunc:f}=t,m=g=>{s&&(r=g.map(y=>this.keep(this.clone(y))))};o=()=>{const g=this.backend.numDataIds();u=this.tidy(()=>f(this.backend,m));const y=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,g,y),y}}const{inputs:l,attrs:h}=t,p=id(t)?null:t.backwardsFunc;let d;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(c,l,()=>o()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),e=d.outputs):e=o()}),s&&this.addTapeNode(c,l,e,p,r,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(f=>null!=l[f]?l[f].shape:null),outputShapes:e.map(f=>f.shape),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(u)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(e=>this.keep(this.clone(e)))}getTensorsForGradient(t,e,r){const s=Tg(t);if(null!=s){const a=s.inputsToSave||[],i=s.outputsToSave||[];let o;s.saveAllInputs?(I(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),o=Object.keys(e).map(c=>e[c])):o=a.map(c=>e[c]);const u=r.filter((c,l)=>i[l]);return o.concat(u)}return[]}makeTensor(t,e,r,s){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");s=s||this.backend;let a=t;"string"===(r=r||"float32")&&Ea(t[0])&&(a=t.map(u=>Qs(u)));const i=s.write(a,e,r),o=new Se(e,r,i,this.nextTensorId());if(this.trackTensor(o,s),"string"===r){const u=this.state.tensorInfo.get(i),c=function(l){if(null==l)return 0;let h=0;return l.forEach(p=>h+=p.length),h}(a);this.state.numBytes+=c-u.bytes,u.bytes=c}return o}makeTensorFromDataId(t,e,r,s){const a={dataId:t,shape:e,dtype:r=r||"float32"};return this.makeTensorFromTensorInfo(a,s)}makeTensorFromTensorInfo(t,e){const{dataId:r,shape:s,dtype:a}=t,i=new Se(s,a,r,this.nextTensorId());return this.trackTensor(i,e),i}makeVariable(t,e=!0,r,s){r=r||this.nextVariableId().toString(),null!=s&&s!==t.dtype&&(t=t.cast(s));const a=new Ec(t,e,r,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(t,e){this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++;let r=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(r=t.size*Po(t.dtype)),this.state.numBytes+=r,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:r})),t instanceof Ec||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,"string"===t.dtype&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),"complex64"!==t.dtype&&"string"!==t.dtype){const r=t.size*Po(t.dtype);this.state.numBytes-=r}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables)this.disposeVariable(this.state.registeredVariables[t])}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,r=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(s=>s.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-r;for(const s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,r,s,a,i){const o={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:r,saved:a},u=Tg(t);null!=u&&(s=u.gradFunc),null!=s&&(o.gradient=c=>(c=c.map((l,h)=>{if(null==l){const p=r[h],d=dn(p.size,p.dtype);return this.makeTensor(d,p.shape,p.dtype)}return l}),s(c.length>1?c:c[0],a,i))),this.state.activeTape.push(o)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=ea(t),r=new Set(e.map(a=>a.id));for(let a=0;a<this.state.activeScope.track.length;a++){const i=this.state.activeScope.track[a];i.kept||r.has(i.id)||i.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(a=>{a.kept||a.scopeId!==s.id||this.track(a)})}gradients(t,e,r,s=!1){if(I(e.length>0,()=>"gradients() received an empty list of xs."),null!=r&&"float32"!==r.dtype)throw new Error(`dy must have 'float32' dtype, but has '${r.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));I(a instanceof Se,()=>"The result y returned by f() must be a tensor.");const i=function(o,u,c){const l={},h={};for(let m=0;m<u.length;m++)l[u[m].id]=!0;for(let m=0;m<o.length;m++){const g=o[m],y=g.inputs;for(const b in y){const x=y[b];let w=!1;for(let k=0;k<u.length;k++)if(l[x.id]){g.outputs.forEach(N=>l[N.id]=!0),w=!0,h[g.id]=!0;break}if(w)break}}const p={};p[c.id]=!0;const d={};for(let m=o.length-1;m>=0;m--){const g=o[m],y=g.inputs;for(let b=0;b<g.outputs.length;b++)if(p[g.outputs[b].id]){for(const x in y)p[y[x].id]=!0,d[g.id]=!0;break}}const f=[];for(let m=0;m<o.length;m++){const g=o[m];if(h[g.id]&&d[g.id]){const y={};for(const x in g.inputs){const w=g.inputs[x];l[w.id]&&(y[x]=w)}const b=Object.assign({},g);b.inputs=y,b.outputs=g.outputs,f.push(b)}}return f}(this.state.activeTape,e,a);if(!s&&0===i.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const o={};o[a.id]=r??function(c){const l=Si(nt(c),"float32");return L.makeTensor(l,c,"float32")}(a.shape),function(c,l,h,p){for(let d=l.length-1;d>=0;d--){const f=l[d],m=[];if(f.outputs.forEach(y=>{const b=c[y.id];m.push(null!=b?b:null)}),null==f.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${f.kernelName}.`);const g=f.gradient(m);for(const y in f.inputs){if(!(y in g))throw new Error(`Cannot backprop through input ${y}. Available gradients found: ${Object.keys(g)}.`);const b=h(()=>g[y]());if("float32"!==b.dtype)throw new Error(`Error in gradient for op ${f.kernelName}. The gradient of input ${y} must have 'float32' dtype, but has '${b.dtype}'`);const x=f.inputs[y];if(!he(b.shape,x.shape))throw new Error(`Error in gradient for op ${f.kernelName}. The gradient of input '${y}' has shape '${b.shape}', which does not match the shape of the input '${x.shape}'`);if(null==c[x.id])c[x.id]=b;else{const w=c[x.id];c[x.id]=p(w,b),w.dispose()}}}}(o,i,c=>this.tidy(c),gk);const u=e.map(c=>o[c.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(c=>{for(const l of c.saved)l.dispose()}),this.state.activeTape=null),{value:a,grads:u}})}customGrad(t){return I(Ii(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{let r;I(e.every(a=>a instanceof Se),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const s={};return e.forEach((a,i)=>{s[i]=a}),this.runKernelFunc({forwardFunc:(a,i)=>(r=t(...e,i),I(r.value instanceof Se,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),I(Ii(r.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),r.value),backwardsFunc:(a,i)=>{const o=r.gradFunc(a,i),u=Array.isArray(o)?o:[o];I(u.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),I(u.every(l=>l instanceof Se),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const c={};return u.forEach((l,h)=>{c[h]=()=>l}),c},inputs:s})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=zn(),r=await this.backend.time(t);return r.wallMs=zn()-e,r}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new zg;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Pg(){const n=Wu();if(null==n._tfengine){const e=new Pu(n);n._tfengine=new Ki(e)}return Ci=n._tfengine.ENV,qr=()=>n._tfengine,n._tfengine}Ki.nextTensorId=0,Ki.nextVariableId=0;const L=Pg();function gk(n,t){return L.runKernel(Jn,{a:n,b:t})}function Wg(n){if(n||typeof navigator<"u"&&null!=navigator){if(n||(n=navigator),"ReactNative"===n.product)return!0;const t=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!t){const e=n;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Vg(){return typeof window<"u"&&null!=window.document||typeof WorkerGlobalScope<"u"}const cr=Q();function na(n,t){let e=n;if(xr(n))return"string"===t?[]:[n.length];if(!Array.isArray(n))return[];const r=[];for(;Array.isArray(e)||xr(e)&&"string"!==t;)r.push(e.length),e=e[0];return Array.isArray(n)&&Q().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ug(n,r,[]),r}function Ug(n,t,e){if(e=e||[],!Array.isArray(n)&&!xr(n))return void I(0===t.length,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);I(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${n.length} elements`),I(n.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${n.length} elements`);const r=t.slice(1);for(let s=0;s<n.length;++s)Ug(n[s],r,e.concat(s))}function Gg(n,t,e,r){if("string_or_numeric"!==n){if(null==n)throw new Error("Expected dtype cannot be null.");if("numeric"!==n&&n!==t||"numeric"===n&&"string"===t)throw new Error(`Argument '${e}' passed to '${r}' must be ${n} tensor, but got ${t} tensor`)}}function S(n,t,e,r="numeric"){if(n instanceof Se)return Gg(r,n.dtype,t,e),n;let s=Ra(n);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Gg(r,s,t,e),null==n||!xr(n)&&!Array.isArray(n)&&"number"!=typeof n&&"boolean"!=typeof n&&"string"!=typeof n)throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${null==n?"null":n.constructor.name}'`);const a=na(n,s);xr(n)||Array.isArray(n)||(n=[n]);const i="string"!==s?Ga(n,s):vn(n,[],!0);return L.makeTensor(i,a,s)}function Rc(n,t,e,r="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((s,a)=>S(s,`${t}[${a}]`,e,r))}cr.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),cr.registerFlag("IS_BROWSER",()=>Vg()),cr.registerFlag("IS_NODE",()=>typeof process<"u"&&void 0!==process.versions&&void 0!==process.versions.node),cr.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),cr.registerFlag("PROD",()=>!1),cr.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>cr.getBool("DEBUG")),cr.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),cr.registerFlag("IS_TEST",()=>!1),cr.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),cr.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1),cr.registerFlag("ENGINE_COMPILE_ONLY",()=>!1),cr.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1),cr.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);const Hg="__op";function O(n){const t=Object.keys(n);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const r=n[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e+=Hg;const s=(...a)=>{L.startScope(e);try{const i=r(...a);return Is(i)&&console.error("Cannot return a Promise inside of tidy."),L.endScope(i),i}catch(i){throw L.endScope(null),i}};return Object.defineProperty(s,"name",{value:e,configurable:!0}),s}const ra=O({complex_:function(n,t){const e=S(n,"real","complex"),r=S(t,"imag","complex");return Ae(e.shape,r.shape,`real and imag shapes, ${e.shape} and ${r.shape}, must match in call to tf.complex().`),L.runKernel(Ko,{real:e,imag:r})}});function sa(n,t,e,r){if(null==r&&(r=Ra(n)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!xr(n)&&!Array.isArray(n)&&"number"!=typeof n&&"boolean"!=typeof n&&"string"!=typeof n)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Wo(t);const s=nt(t),a=nt(e);I(s===a,()=>`Based on the provided shape, [${t}], the tensor should have ${s} values but has ${a}`);for(let i=0;i<e.length;++i){const o=e[i],u=i!==e.length-1||o!==nt(t.slice(i));I(e[i]===t[i]||!u,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return xr(n)||Array.isArray(n)||(n=[n]),t=t||e,n="string"!==r?Ga(n,r):vn(n,[],!0),L.makeTensor(n,t,r)}function Kr(n,t,e){return sa(n,t,na(n,e),e)}const od={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function ld(n,t){const e=[],r=[],s=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(n)?n[a].tensor:n[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const c=new Promise(async l=>{const h=await o.bytes(),p=h.reduce((m,g)=>m+g.length,0)+4*h.length,d=new Uint8Array(p);let f=0;for(let m=0;m<h.length;m++){const g=h[m],y=new Uint8Array(new Uint32Array([g.length]).buffer);d.set(y,f),f+=4,d.set(g,f),f+=g.length}l(d)});r.push(c)}else r.push(o.data());null!=t&&(u.group=t),e.push(u)}return{data:yk(await Promise.all(r)),specs:e}}function jg(n,t){const e={};let r,s=0;for(const a of t){const i=a.name,o=a.dtype,u=a.shape,c=nt(u);let l;if("quantization"in a){const h=a.quantization;if("uint8"===h.dtype||"uint16"===h.dtype){if(!("min"in h)||!("scale"in h))throw new Error(`Weight ${a.name} with quantization ${h.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==h.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${h.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${a.name} is quantized with ${h.dtype} which only supports weights of type float32 not ${o}.`)}const p=od[h.dtype],d=n.slice(s,s+c*p),f="uint8"===h.dtype?new Uint8Array(d):new Uint16Array(d);if("float32"===o)if("uint8"===h.dtype||"uint16"===h.dtype){l=new Float32Array(f.length);for(let m=0;m<f.length;m++)l[m]=f[m]*h.scale+h.min}else{if("float16"!==h.dtype)throw new Error(`Unsupported quantization type ${h.dtype} for weight type float32.`);void 0===r&&(r=bk()),l=r(f)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);if("uint8"!==h.dtype&&"uint16"!==h.dtype)throw new Error(`Unsupported quantization type ${h.dtype} for weight type int32.`);l=new Int32Array(f.length);for(let m=0;m<f.length;m++)l[m]=Math.round(f[m]*h.scale+h.min)}s+=c*p}else if("string"===o){const h=nt(a.shape);l=[];for(let p=0;p<h;p++){const d=new Uint32Array(n.slice(s,s+4))[0];s+=4;const f=new Uint8Array(n.slice(s,s+d));l.push(f),s+=d}}else{const h=od[o],p=n.slice(s,s+c*h);if("float32"===o)l=new Float32Array(p);else if("int32"===o)l=new Int32Array(p);else if("bool"===o)l=new Uint8Array(p);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);{l=new Float32Array(p);const d=new Float32Array(l.length/2),f=new Float32Array(l.length/2);for(let y=0;y<d.length;y++)d[y]=l[2*y],f[y]=l[2*y+1];const m=Kr(d,u,"float32"),g=Kr(f,u,"float32");e[i]=ra(m,g),m.dispose(),g.dispose()}}s+=c*h}"complex64"!==o&&(e[i]=Kr(l,u,o))}return e}function yk(n){if(null===n)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let t=0;const e=[];n.forEach(a=>{if(t+=a.byteLength,e.push(a.byteLength===a.buffer.byteLength?a:new a.constructor(a)),!(a instanceof Float32Array||a instanceof Int32Array||a instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${a.constructor.name}`)});const r=new Uint8Array(t);let s=0;return e.forEach(a=>{r.set(new Uint8Array(a.buffer),s),s+=a.byteLength}),r.buffer}const ud=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function qg(n){return ud?Buffer.byteLength(n):new Blob([n]).size}function Fc(n){if(1===n.length)return n[0];let t=0;n.forEach(s=>{t+=s.byteLength});const e=new Uint8Array(t);let r=0;return n.forEach(s=>{e.set(new Uint8Array(s),r),r+=s.byteLength}),e.buffer}function Kg(n){for(n=n.trim();n.endsWith("/");)n=n.slice(0,n.length-1);const t=n.split("/");return t[t.length-1]}function Xg(n,t){const e={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:t};return null!=n.signature&&(e.signature=n.signature),null!=n.userDefinedMetadata&&(e.userDefinedMetadata=n.userDefinedMetadata),null!=n.modelInitializer&&(e.modelInitializer=n.modelInitializer),null!=n.trainingConfig&&(e.trainingConfig=n.trainingConfig),e}function Yg(n,t,e){const r={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(null!=n.trainingConfig&&(r.trainingConfig=n.trainingConfig),null!=n.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=e}return null!=n.signature&&(r.signature=n.signature),null!=n.userDefinedMetadata&&(r.userDefinedMetadata=n.userDefinedMetadata),null!=n.modelInitializer&&(r.modelInitializer=n.modelInitializer),r}async function cd(n,t){let e,r;return null!=n.weightsManifest&&([e,r]=await t(n.weightsManifest)),Yg(n,e,r)}function Dl(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==n.modelTopology?0:qg(JSON.stringify(n.modelTopology)),weightSpecsBytes:null==n.weightSpecs?0:qg(JSON.stringify(n.weightSpecs)),weightDataBytes:null==n.weightData?0:n.weightData.byteLength}}function Zg(n){const t=[];for(const e of n)t.push(...e.weights);return t}function bk(){const n=function(){const r=a=>{let i=a<<13,o=0;for(;0==(8388608&i);)o-=8388608,i<<=1;return i&=-8388609,o+=947912704,i|o},s=new Uint32Array(2048);s[0]=0;for(let a=1;a<1024;a++)s[a]=r(a);for(let a=1024;a<2048;a++)s[a]=939524096+(a-1024<<13);return s}(),t=function(){const r=new Uint32Array(64);r[0]=0,r[31]=1199570944,r[32]=2147483648,r[63]=3347054592;for(let s=1;s<31;s++)r[s]=s<<23;for(let s=33;s<63;s++)r[s]=2147483648+(s-32<<23);return r}(),e=function(){const r=new Uint32Array(64);for(let s=0;s<64;s++)r[s]=1024;return r[0]=r[32]=0,r}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let i=0;i<r.length;i++){const o=r[i];a[i]=n[e[o>>10]+(1023&o)]+t[o>>10]}return new Float32Array(s)}}class Qe{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Qe.instance&&(Qe.instance=new Qe),Qe.instance}static registerSaveRouter(t){Qe.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Qe.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Qe.getHandlers(t,"save")}static getLoadHandlers(t,e){return Qe.getHandlers(t,"load",e)}static getHandlers(t,e,r){const s=[];return("load"===e?Qe.getInstance().loadRouters:Qe.getInstance().saveRouters).forEach(a=>{const i=a(t,r);null!==i&&s.push(i)}),s}}const xk=n=>Qe.registerSaveRouter(n),wk=n=>Qe.registerLoadRouter(n),Jg=n=>Qe.getSaveHandlers(n),vk=(n,t)=>Qe.getLoadHandlers(n,t),hd="tensorflowjs",Ha="models_store",aa="model_info_store";function Qg(){if(!Q().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,t=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function pd(n){const t=n.result;t.createObjectStore(Ha,{keyPath:"modelPath"}),t.createObjectStore(aa,{keyPath:"modelPath"})}class ja{constructor(t){if(this.indexedDB=Qg(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((r,s)=>{const a=this.indexedDB.open(hd,1);a.onupgradeneeded=()=>pd(a),a.onsuccess=()=>{const i=a.result;if(null==e){const o=i.transaction(Ha,"readonly"),u=o.objectStore(Ha).get(this.modelPath);u.onsuccess=()=>{if(null==u.result)return i.close(),s(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));r(u.result.modelArtifacts)},u.onerror=c=>(i.close(),s(u.error)),o.oncomplete=()=>i.close()}else{const o=Dl(e),u=i.transaction(aa,"readwrite");let c=u.objectStore(aa);const l=c.put({modelPath:this.modelPath,modelArtifactsInfo:o});let h;l.onsuccess=()=>{h=i.transaction(Ha,"readwrite");const p=h.objectStore(Ha).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:o});p.onsuccess=()=>r({modelArtifactsInfo:o}),p.onerror=d=>{c=u.objectStore(aa);const f=c.delete(this.modelPath);f.onsuccess=()=>(i.close(),s(p.error)),f.onerror=m=>(i.close(),s(p.error))}},l.onerror=p=>(i.close(),s(l.error)),u.oncomplete=()=>{null==h?i.close():h.oncomplete=()=>i.close()}}},a.onerror=i=>s(a.error)})}}ja.URL_SCHEME="indexeddb://";const t0=n=>{return Q().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(ja.URL_SCHEME)?(t=n.slice(ja.URL_SCHEME.length),new ja(t)):null;var t};Qe.registerSaveRouter(t0),Qe.registerLoadRouter(t0);class kk{constructor(){this.indexedDB=Qg()}async listModels(){return new Promise((t,e)=>{const r=this.indexedDB.open(hd,1);r.onupgradeneeded=()=>pd(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(aa,"readonly"),i=a.objectStore(aa).getAll();i.onsuccess=()=>{const o={};for(const u of i.result)o[u.modelPath]=u.modelArtifactsInfo;t(o)},i.onerror=o=>(s.close(),e(i.error)),a.oncomplete=()=>s.close()},r.onerror=s=>e(r.error)})}async removeModel(t){var e;return t=(e=t).startsWith(ja.URL_SCHEME)?e.slice(ja.URL_SCHEME.length):e,new Promise((r,s)=>{const a=this.indexedDB.open(hd,1);a.onupgradeneeded=()=>pd(a),a.onsuccess=()=>{const i=a.result,o=i.transaction(aa,"readwrite"),u=o.objectStore(aa),c=u.get(t);let l;c.onsuccess=()=>{if(null==c.result)return i.close(),s(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const h=u.delete(t),p=()=>{l=i.transaction(Ha,"readwrite");const d=l.objectStore(Ha).delete(t);d.onsuccess=()=>r(c.result.modelArtifactsInfo),d.onerror=f=>s(c.error)};h.onsuccess=p,h.onerror=d=>(p(),i.close(),s(c.error))}},c.onerror=h=>(i.close(),s(c.error)),o.oncomplete=()=>{null==l?i.close():l.oncomplete=()=>i.close()}},a.onerror=i=>s(a.error)})}}const Ns="/",Xi="tensorflowjs_models",e0="info",Ik="model_topology",Nk="weight_specs",Sk="weight_data",Tk="model_metadata";function n0(n){return{info:[Xi,n,e0].join(Ns),topology:[Xi,n,Ik].join(Ns),weightSpecs:[Xi,n,Nk].join(Ns),weightData:[Xi,n,Sk].join(Ns),modelMetadata:[Xi,n,Tk].join(Ns)}}function r0(n){for(const t of Object.values(n))window.localStorage.removeItem(t)}function Ck(n){const t=n.split(Ns);if(t.length<3)throw new Error(`Invalid key format: ${n}`);return t.slice(1,t.length-1).join(Ns)}class qa{constructor(t){if(!Q().getBool("IS_BROWSER")||typeof window>"u"||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=n0(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),r=JSON.stringify(t.weightSpecs),s=Dl(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,function(i){if(ud)return Buffer.from(i).toString("base64");const o=new Uint8Array(i);let u="";for(let c=0,l=o.length;c<l;c++)u+=String.fromCharCode(o[c]);return btoa(u)}(t.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:null!=t.signature?t.signature:void 0,userDefinedMetadata:null!=t.userDefinedMetadata?t.userDefinedMetadata:void 0,modelInitializer:null!=t.modelInitializer?t.modelInitializer:void 0,trainingConfig:null!=t.trainingConfig?t.trainingConfig:void 0})),{modelArtifactsInfo:s}}catch{throw r0(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},r=JSON.parse(this.LS.getItem(this.keys.topology));if(null==r)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=r;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=s;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const o=JSON.parse(a);e.format=o.format,e.generatedBy=o.generatedBy,e.convertedBy=o.convertedBy,null!=o.signature&&(e.signature=o.signature),null!=o.userDefinedMetadata&&(e.userDefinedMetadata=o.userDefinedMetadata),null!=o.modelInitializer&&(e.modelInitializer=o.modelInitializer),null!=o.trainingConfig&&(e.trainingConfig=o.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(o){if(ud){const l=Buffer.from(o,"base64");return l.buffer.slice(l.byteOffset,l.byteOffset+l.byteLength)}const u=atob(o),c=new Uint8Array(u.length);for(let l=0;l<u.length;++l)c.set([u.charCodeAt(l)],l);return c.buffer}(i),e}}qa.URL_SCHEME="localstorage://";const s0=n=>{return Q().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(qa.URL_SCHEME)?(t=n.slice(qa.URL_SCHEME.length),new qa(t)):null;var t};Qe.registerSaveRouter(s0),Qe.registerLoadRouter(s0);class $k{constructor(){I(Q().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),I(typeof window>"u"||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=Xi+Ns,r=Ns+e0;for(let s=0;s<this.LS.length;++s){const a=this.LS.key(s);a.startsWith(e)&&a.endsWith(r)&&(t[Ck(a)]=JSON.parse(this.LS.getItem(a)))}return t}async removeModel(t){var e;const r=n0(t=(e=t).startsWith(qa.URL_SCHEME)?e.slice(qa.URL_SCHEME.length):e);if(null==this.LS.getItem(r.info))throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(r.info));return r0(r),s}}const Yi="://";class Un{constructor(){this.managers={}}static getInstance(){return null==Un.instance&&(Un.instance=new Un),Un.instance}static registerManager(t,e){I(null!=t,()=>"scheme must not be undefined or null."),t.endsWith(Yi)&&(t=t.slice(0,t.indexOf(Yi))),I(t.length>0,()=>"scheme must not be an empty string.");const r=Un.getInstance();I(null==r.managers[t],()=>`A model store manager is already registered for scheme '${t}'.`),r.managers[t]=e}static getManager(t){const e=Un.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(Un.getInstance().managers)}}function Dc(n){if(-1===n.indexOf(Yi))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Un.getSchemes().join(",")}`);return{scheme:n.split(Yi)[0],path:n.split(Yi)[1]}}async function a0(n,t,e=!1){I(n!==t,()=>`Old path and new path are the same: '${n}'`);const r=Qe.getLoadHandlers(n);I(r.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),I(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${n}.`);const s=r[0],a=Qe.getSaveHandlers(t);I(a.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),I(a.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);const i=a[0],o=Dc(n).scheme,u=Dc(n).path,c=o===Dc(n).scheme,l=await s.load();e&&c&&await Un.getManager(o).removeModel(u);const h=await i.save(l);return e&&!c&&await Un.getManager(o).removeModel(u),h.modelArtifactsInfo}async function Ek(){const n=Un.getSchemes(),t={};for(const e of n){const r=await Un.getManager(e).listModels();for(const s in r)t[e+Yi+s]=r[s]}return t}async function Rk(n){const t=Dc(n);return Un.getManager(t.scheme).removeModel(t.path)}async function Ak(n,t){return a0(n,t,!1)}async function Fk(n,t){return a0(n,t,!0)}class Dk{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){window&&Q().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",r=>{r.source===window&&r.data.name===this.messageName&&(r.stopPropagation(),(0,this.functionRefs[r.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))},!0))):setTimeout(t,e)}}if(Q().get("IS_BROWSER")){Q().setPlatform("browser",new Dk);try{Un.registerManager(qa.URL_SCHEME,new $k)}catch{}try{Un.registerManager(ja.URL_SCHEME,new kk)}catch{}}let dd;function we(n,t="float32",e){return t=t||"float32",Wo(n),new In(n,t,e)}Q().get("IS_NODE")&&!Q().get("IS_BROWSER")&&Q().setPlatform("node",new class Ok{constructor(){this.util=_t(628),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=Q().global.fetch?Q().global.fetch(t,e):(null==dd&&(dd=_t(410)),dd(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});const Dt=O({cast_:function(n,t){const e=S(n,"x","cast");if("bool"!==(a=t)&&"complex64"!==a&&"float32"!==a&&"int32"!==a&&"string"!==a)throw new Error(`Failed to cast to unknown dtype ${t}`);var a;if("string"===t&&"string"!==e.dtype||"string"!==t&&"string"===e.dtype)throw new Error("Only strings can be casted to strings");return L.runKernel(La,{x:e},{dtype:t})}}),Ss=O({clone_:function(n){const t={x:S(n,"x","clone","string_or_numeric")};return L.runKernel(el,t)}});function i0(n,t=!1){console.log(n.toString(t))}function o0(n){return new Promise(t=>setTimeout(t)).then(n)}Pg(),qi={buffer:we,cast:Dt,clone:Ss,print:i0};class Ka{constructor(t){if(!Q().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Ka.URL_SCHEME)&&(t=t.slice(Ka.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelJsonFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const r=Xg(t,[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}]),s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=this.modelJsonAnchor??document.createElement("a");if(a.download=this.modelJsonFileName,a.href=s,await o0(()=>a.dispatchEvent(new MouseEvent("click"))),null!=t.weightData){const i=this.weightDataAnchor??document.createElement("a");i.download=this.weightDataFileName,i.href=e,await o0(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Dl(t)}}}}Ka.URL_SCHEME="downloads://";class Mk{constructor(t){if(null==t||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}async load(){return new Promise((t,e)=>{const r=new FileReader;r.onload=s=>{const a=JSON.parse(s.target.result),i=a.modelTopology;if(null==i)return void e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==a.weightsManifest)return void e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void t({modelTopology:i});const o=cd(a,u=>this.loadWeights(u));t(o)},r.onerror=s=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(this.jsonFile)})}loadWeights(t){const e=[],r=[];for(const i of t)e.push(...i.weights),r.push(...i.paths);const s=this.checkManifestAndWeightFiles(t),a=r.map(i=>this.loadWeightsFile(i,s[i]));return Promise.all(a).then(i=>[e,Fc(i)])}loadWeightsFile(t,e){return new Promise((r,s)=>{const a=new FileReader;a.onload=i=>{r(i.target.result)},a.onerror=i=>s(`Failed to weights data from file of path '${t}'.`),a.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){const e=[],r=this.weightsFiles.map(a=>Kg(a.name)),s={};for(const a of t)a.paths.forEach(i=>{const o=Kg(i);if(-1!==e.indexOf(o))throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(e.push(o),-1===r.indexOf(o))throw new Error(`Weight file with basename '${o}' is not provided.`);s[i]=this.weightsFiles[r.indexOf(o)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}}function Lk(n){return new Mk(n)}function l0(n,t,e,r){var a;I(null!=(a=n)&&Array.isArray(a)&&a.length>0,()=>"promises must be a none empty array"),function(a,i){I(a>=0&&a<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${a}`),I(i>=0&&i<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${i}`),I(i>=a,()=>`startFraction must be no more than endFraction, but got startFraction ${a} and endFraction ${i}`)}(e=e??0,r=r??1);let s=0;return Promise.all(n.map(a=>(a.then(i=>{const o=e+ ++s/n.length*(r-e);return t(o),i}),a)))}async function u0(n,t){null==t&&(t={});const e=t.fetchFunc??Q().platform.fetch,r=n.map(a=>e(a,t.requestInit,{isBinary:!0})),s=(null==t.onProgress?await Promise.all(r):await l0(r,t.onProgress,0,.5)).map(a=>a.arrayBuffer());return null==t.onProgress?await Promise.all(s):await l0(s,t.onProgress,.5,1)}async function zk(n,t="",e,r){return c0(s=>u0(s,{requestInit:r}))(n,t,e)}function c0(n){return async(t,e="",r)=>{const s=t.map(()=>!1),a={},i=null!=r?r.map(()=>!1):[],o=[];if(t.forEach((d,f)=>{let m=0;d.weights.forEach(g=>{const b=od["quantization"in g?g.quantization.dtype:g.dtype]*nt(g.shape),x=()=>{s[f]=!0,null==a[f]&&(a[f]=[]),a[f].push({manifestEntry:g,groupOffset:m,sizeBytes:b})};null!=r?r.forEach((w,k)=>{w===g.name&&(x(),i[k]=!0)}):x(),o.push(g.name),m+=b})}),!i.every(d=>d)){const d=r.filter((f,m)=>!i[m]);throw new Error(`Could not find weights in manifest with names: ${d.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=s.reduce((d,f,m)=>(f&&d.push(m),d),[]),c=[];u.forEach(d=>{t[d].paths.forEach(f=>{const m=e+(e.endsWith("/")?"":"/")+f;c.push(m)})});const l=await n(c),h={};let p=0;return u.forEach(d=>{const f=t[d].paths.length;let m=0;for(let x=0;x<f;x++)m+=l[p+x].byteLength;const g=new ArrayBuffer(m),y=new Uint8Array(g);let b=0;for(let x=0;x<f;x++){const w=new Uint8Array(l[p+x]);y.set(w,b),b+=w.byteLength}a[d].forEach(x=>{const w=jg(g.slice(x.groupOffset,x.groupOffset+x.sizeBytes),[x.manifestEntry]);for(const k in w)h[k]=w[k]}),p+=f}),h}}Qe.registerSaveRouter(n=>Q().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Ka.URL_SCHEME)?function(t="model"){return new Ka(t)}(n.slice(Ka.URL_SCHEME.length)):null);class fd{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?(I("function"==typeof e.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=Q().platform.fetch,I(null!=t&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&I(2===t.length,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const r=Xg(t,[{paths:["./model.weights.bin"],weights:t.weightSpecs}]);e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,e);if(s.ok)return{modelArtifactsInfo:Dl(t),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}if(null==e.modelTopology&&null==e.weightsManifest)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return cd(e,a=>this.loadWeights(a))}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[r,s]=function(c){const l=c.lastIndexOf("/"),h=c.lastIndexOf("?");return[c.substring(0,l)+"/",h>l?c.substring(h):""]}(e),a=this.weightPathPrefix||r,i=Zg(t),o=[],u=[];for(const c of t)for(const l of c.paths)null!=this.weightUrlConverter?u.push(this.weightUrlConverter(l)):o.push(a+l+s);return this.weightUrlConverter&&o.push(...await Promise.all(u)),[i,Fc(await u0(o,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function md(n){return null!=n.match(fd.URL_SCHEME_REGEX)}fd.URL_SCHEME_REGEX=/^https?:\/\//;const h0=(n,t)=>{if(typeof fetch>"u"&&(null==t||null==t.fetchFunc))return null;{let e=!0;if(e=Array.isArray(n)?n.every(r=>md(r)):md(n),e)return gd(n,t)}return null};function gd(n,t){return new fd(n,t)}function Pk(n,t){return gd(n,t)}Qe.registerSaveRouter(h0),Qe.registerLoadRouter(h0);class yd{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}}class p0{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}}class Bk{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}}function Wk(n,t,e,r){return new Bk(d0(...arguments))}function d0(n,t,e,r){return 1===arguments.length?null!=n.modelTopology||null!=n.weightSpecs?new yd(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new yd({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new yd({modelTopology:n,weightSpecs:t,weightData:e,trainingConfig:r}))}function Vk(n){return new p0(n)}function Uk(n){return new p0(n)}function Zi(n,t){const e=n.length,r=[];for(let s=0;s<e;s++){const a=e-1-s,i=n[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function fn(n,t){const e=[];for(let r=0;r<t.length;r++){const s=n[n.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&e.unshift(a)}return e}function de(n,t){const e=[],r=Math.max(n.length,t.length);for(let s=0;s<r;s++){let a=n[n.length-s-1];null==a&&(a=1);let i=t[t.length-s-1];if(null==i&&(i=1),1===a)e.unshift(i);else if(1===i)e.unshift(a);else{if(a!==i)throw Error(`Operands could not be broadcast together with shapes ${n} and ${t}.`);e.unshift(a)}}return e}function f0(n,t,e){if(Je(n),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=na(n,e);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return sa(n,t,r,e)}let Xa;const m0=O({fromPixels_:function Gk(n,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==n)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,r=!1,s=!1,a=!1,i=!1,o=!1;if(n.data instanceof Uint8Array)e=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)s=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)a=!0;else if(null!=n.getContext)i=!0;else{if(!(typeof ImageBitmap<"u"&&n instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);o=!0}if(null!=Zp(Kp,L.backendName))return L.runKernel(Kp,{pixels:n},{numChannels:t});const[u,c]=s?[n.videoWidth,n.videoHeight]:[n.width,n.height];let l,h;if(i)l=n.getContext("2d").getImageData(0,0,u,c).data;else if(r||e)l=n.data;else if(a||s||o){if(null==Xa)if(typeof document>"u"){if(typeof OffscreenCanvas>"u"||typeof OffscreenCanvasRenderingContext2D>"u")throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Xa=new OffscreenCanvas(1,1).getContext("2d")}else Xa=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Xa.canvas.width=u,Xa.canvas.height=c,Xa.drawImage(n,0,0,u,c),l=Xa.getImageData(0,0,u,c).data}if(4===t)h=new Int32Array(l);else{const p=u*c;h=new Int32Array(p*t);for(let d=0;d<p;d++)for(let f=0;f<t;++f)h[d*t+f]=l[4*d+f]}return f0(h,[c,u,t],"int32")}});function xd(n,t,e){const r=n.shape.length;I(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),I(r===e.length,()=>`Error in slice${r}D: Length of size ${e} must match the rank of the array (${r}).`);for(let s=0;s<r;++s)I(t[s]+e[s]<=n.shape[s],()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+e[s]}) would overflow input.shape[${s}] (${n.shape[s]})`)}function jk(n){const t=[];let e=0;for(;n>0;)1&n&&t.push(e),n/=2,e++;return t}function wd(n,t,e){const r=[];for(let s=0;s<n.length;s++)r[s]=Math.ceil((t[s]-n[s])/e[s]);return r}function g0(n,t,e,r){const s=[...n];for(let a=s.length;a<r.length;a++)s.push(1);for(let a=0;a<e;a++)0===a?s[t]=1:(s.splice(t,0,1),s.pop());return s}function y0(n,t,e){return e<=n?e:e-(t-1)}function b0(n,t){const e=[];for(let r=0;r<n;r++)e.push(t+r);return e}function qk(n,t,e,r,s,a,i,o,u){const c=n.length;let l=new Array(c),h=new Array(c),p=new Array(c);if(t.length&&e>0){const d=t[0],f=e+1;l=x0(i,d,f,r,n),h=w0(o,d,f,s,n),p=g0(a,d,f,n)}else for(let d=0;d<c;d++)l[d]=k0(i,r,a,n,d,u),h[d]=I0(o,s,a,n,d,u),p[d]=v0(a,d,u);return{begin:l,end:h,strides:p}}function x0(n,t,e,r,s){const a=[...s],i=b0(e,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=0;else{const u=y0(t,e,o);let c=r[u];n&1<<u&&(c=0),a[o]=c}return a}function w0(n,t,e,r,s){const a=[...s],i=b0(e,t);for(let o=0;o<a.length;o++)if(i.indexOf(o)>-1)a[o]=Number.MAX_SAFE_INTEGER;else{const u=y0(t,e,o);let c=r[u];n&1<<u&&(c=Number.MAX_SAFE_INTEGER),a[o]=c}for(let o=0;o<a.length;o++){const u=s[o];a[o]<0&&(a[o]+=u),a[o]=ge(0,a[o],s[o])}return a}function v0(n,t,e){let r=n[t];return(e&1<<t||null==r)&&(r=1),r}function k0(n,t,e,r,s,a){let i=t[s];(n&1<<s||a&1<<s||null==i)&&(i=(e[s]||1)>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),i=ge(0,i,u-1),i}function I0(n,t,e,r,s,a){let i=t[s];const o=e[s]||1;(n&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),i=o>0?ge(0,i,u):ge(-1,i,u-1),i}function vd(n,t,e){let r=e.length;for(let s=0;s<e.length;s++)if(e[s]>1){r=s;break}for(let s=r+1;s<e.length;s++)if(t[s]>0||e[s]!==n[s])return!1;return!0}function kd(n,t){let e=n.length>0?n[n.length-1]:1;for(let r=0;r<n.length-1;r++)e+=n[r]*t[r];return e}function _c(n,t,e){let r;const s=n.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach(i=>{I(-1!==i,()=>"slice() does not support negative begin indexing.")}),a=null==e?new Array(s).fill(-1):"number"==typeof e?[e,...new Array(s-1).fill(-1)]:e.length<s?e.concat(new Array(s-e.length).fill(-1)):e,a=a.map((i,o)=>i>=0?i:(I(-1===i,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),n.shape[o]-r[o])),[r,a]}function Id(n,t,e,r,s,a,i,o,u){let c;if(null==r?(c=new Array(t.length),c.fill(1)):c=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const h={dims:c.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:c.slice(),beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let b=0;b<h.dims;b++)l&&0!=(1<<b&o)&&h.numAddAxisAfterEllipsis++,1<<b&i&&(l=!0);l||(h.ellipsisMask|=1<<h.dims,h.dims++);const p={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(b,x){x.beginMask=0,x.endMask=0,x.shrinkAxisMask=0;let w=0;x.beginValid=null!=b.begin,x.endValid=null!=b.end,x.begin=new Array(x.dims),x.end=new Array(x.dims),x.strides=new Array(x.dims),x.finalShapeGatherIndices=[],x.finalShapeGatherIndicesSparse=[],x.inputShapeGatherIndicesSparse=new Array(x.dims);for(let k=0;k<b.dims;k++)if(1<<k&b.ellipsisMask){const N=Math.min(x.dims-(b.dims-k)+1+b.numAddAxisAfterEllipsis,x.dims);for(;w<N;w++)x.begin[w]=0,x.end[w]=0,x.strides[w]=1,x.beginMask|=1<<w,x.endMask|=1<<w,x.finalShapeGatherIndices.push(w),x.finalShapeGatherIndicesSparse.push(-1),x.inputShapeGatherIndicesSparse[w]=k}else if(1<<k&b.newAxisMask)x.finalShapeGatherIndices.push(-2),x.finalShapeGatherIndicesSparse.push(-1);else{if(w===x.begin.length)throw Error(`Index out of range using input dim ${w}; input has only ${x.dims} dims, ${x.begin.length}.`);null!=b.begin&&(x.begin[w]=b.begin[k]),null!=b.end&&(x.end[w]=b.end[k]),x.strides[w]=b.strides[k],b.beginMask&1<<k&&(x.beginMask|=1<<w),b.endMask&1<<k&&(x.endMask|=1<<w),b.shrinkAxisMask&1<<k?(x.finalShapeGatherIndices.push(-1),x.finalShapeGatherIndicesSparse.push(-1),x.shrinkAxisMask|=1<<w):(x.finalShapeGatherIndices.push(w),x.finalShapeGatherIndicesSparse.push(k)),x.inputShapeGatherIndicesSparse[w]=k,w++}}(h,p);let d=!0,f=!0,m=!0;const g=[],y=[];for(let b=0;b<n.length;++b){if(0===p.strides[b])throw Error(`strides[${b}] must be non-zero`);const x=!!(p.shrinkAxisMask&1<<b),w=n[b];if(-1===w){g.push(x?1:-1);continue}const k=[p.beginMask&1<<b,p.endMask&1<<b],N=[p.strides[b]>0?0:-1,p.strides[b]>0?w:w-1];if(x&&p.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[b];const $=!!(p.beginMask&1<<b&&p.endMask&1<<b);if(p.beginValid&&p.endValid){if(x){const _=p.begin[b]<0?w+p.begin[b]:p.begin[b];if(p.begin[b]=_,p.end[b]=p.begin[b]+1,_<0||_>=w)throw Error(`slice index ${p.begin[b]} of dimension ${b} out of bounds.`)}else p.begin[b]=N0(p.begin[b],0,p.strides[b],w,k,N),p.end[b]=N0(p.end[b],1,p.strides[b],w,k,N);const A=1===p.strides[b]&&0===p.begin[b]&&p.end[b]===w;d=d&&A,f=f&&(0===b&&1===p.strides[b]||A)}else d=d&&1===p.strides[b]&&$,f=f&&(0===b&&1===p.strides[b]||$);let C,R=!1;if(p.beginValid&&p.endValid?(C=p.end[b]-p.begin[b],R=!0):x?(C=1,R=!0):$&&w>=0&&(C=p.strides[b]<0?-w:w,R=!0),R){let A;A=0===C||C<0!=p.strides[b]<0?0:Math.trunc(C/p.strides[b])+(C%p.strides[b]!=0?1:0),g.push(A)}else g.push(-1)}for(let b=0;b<p.finalShapeGatherIndices.length;++b){const x=p.finalShapeGatherIndices[b];x>=0?y.push(g[x]):-2===x&&y.push(1)}return{finalShapeSparse:y.filter((b,x)=>-2!==p.finalShapeGatherIndices[x]),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function N0(n,t,e,r,s,a){if(s[t])return e>0?a[t]:a[t+1&1];{const i=n<0?r+n:n;return i<a[0]?a[0]:i>a[1]?a[1]:i}}class Ji{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class Fr{constructor(){this.classNameMap={}}static getMap(){return null==Fr.instance&&(Fr.instance=new Fr),Fr.instance}static register(t){Fr.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function bt(n){I(null!=n.className,()=>"Class being registered does not have the static className property defined."),I("string"==typeof n.className,()=>"className is required to be a string, but got type "+typeof n.className),I(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Fr.register(n)}function ia(){return L}function Nd(){return L.memory()}function K(n,t){return L.tidy(n,t)}function ve(n){ea(n).forEach(t=>t.dispose())}function An(n){return L.keep(n)}function S0(n,t,e=1){return L.registerBackend(n,t,e)}function Ts(n){return L.customGrad(n)}function Qt(n,t){if((xr(n)&&"string"!==t||Array.isArray(n))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&xr(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return sa(n,[],[],t)}fk=function(n){Q().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class oa extends Ji{minimize(t,e=!1,r){const{value:s,grads:a}=this.computeGradients(t,r);if(null!=r){const i=r.map(o=>({name:o.name,tensor:a[o.name]}));this.applyGradients(i)}else this.applyGradients(a);return ve(a),e?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return function(r,s){I(Ii(r),()=>"The f passed in variableGrads(f) must be a function"),I(null==s||Array.isArray(s)&&s.every(h=>h instanceof Ec),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const a=null!=s;if(!a){s=[];for(const h in L.registeredVariables)s.push(L.registeredVariables[h])}const i=a?s.filter(h=>!h.trainable):null,o=s.length;I((s=s.filter(h=>h.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);const{value:u,grads:c}=L.gradients(r,s,null,!0);I(c.some(h=>null!=h),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),I(0===u.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`);const l={};return s.forEach((h,p)=>{null!=c[p]&&(l[h.name]=c[p])}),i?.forEach(h=>l[h.name]=null),{value:u,grads:l}}(t,e)}dispose(){null!=this.iterations_&&ve(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Qt(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(oa,Symbol.hasInstance,{value:n=>null!=n.minimize&&null!=n.computeGradients&&null!=n.applyGradients});const mn=O({abs_:function(n){const t=S(n,"x","abs");return L.runKernel("complex64"===t.dtype?Li:Gs,{x:t})}}),T0=O({acos_:function(n){const t={x:S(n,"x","acos")};return L.runKernel(Hs,t)}}),C0=O({acosh_:function(n){const t={x:S(n,"x","acosh")};return L.runKernel(Aa,t)}}),yt=O({add_:function(n,t){let e=S(n,"a","add"),r=S(t,"b","add");return[e,r]=nn(e,r),L.runKernel(Jn,{a:e,b:r})}}),Kk=O({addN_:function(n){I(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),I(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const t=n.map((s,a)=>S(s,`tensors${a}`,"addN")),e=t[0];return t.forEach(s=>{if(s.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(s=>{if(!he(s.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}),L.runKernel($i,t)}}),Sd=O({all_:function(n,t=null,e=!1){const r={x:S(n,"x","all","bool")};return L.runKernel("All",r,{axis:t,keepDims:e})}}),Oc=O({any_:function(n,t=null,e=!1){const r={x:S(n,"x","any","bool")};return L.runKernel("Any",r,{axis:t,keepDims:e})}}),Qi=O({argMax_:function(n,t=0){const e={x:S(n,"x","argMax")};return L.runKernel(Ri,e,{axis:t})}}),$0=O({argMin_:function(n,t=0){const e={x:S(n,"x","argMin")};return L.runKernel(Ai,e,{axis:t})}}),E0=O({asin_:function(n){const t={x:S(n,"x","asin")};return L.runKernel(Fa,t)}}),R0=O({asinh_:function(n){const t={x:S(n,"x","asinh")};return L.runKernel(Da,t)}}),A0=O({atan_:function(n){const t={x:S(n,"x","atan")};return L.runKernel(_a,t)}}),F0=O({atan2_:function(n,t){let e=S(n,"a","atan2"),r=S(t,"b","atan2");return[e,r]=nn(e,r),L.runKernel(Ma,{a:e,b:r})}}),D0=O({atanh_:function(n){const t={x:S(n,"x","atanh")};return L.runKernel(Oa,t)}});function _l(n,t,e,r,s="NHWC",a){return Nn(n,[...t,n[3]],e,a,r,null,null,$s(s))}function Dr(n,t,e,r,s,a,i="channelsLast"){const[o,u]=Mc(t);let c;if("channelsLast"===i)c=[o,u,n[3],n[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);c=[o,u,n[1],n[1]]}return Nn(n,c,e,r,s,a,!1,i)}function Cs(n,t,e,r,s,a,i="NDHWC"){const[o,u,c]=Cd(t);let l,h;if("NDHWC"===i)h="channelsLast",l=[o,u,c,n[4],n[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",l=[o,u,c,n[1],n[1]]}return la(n,l,e,r,s,!1,h,a)}function Nn(n,t,e,r,s,a,i=!1,o="channelsLast"){let[u,c,l,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,c,l,h]=n;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,h,c,l]=n}const[p,d,,f]=t,[m,g]=Mc(e),[y,b]=Mc(r),x=to(p,y),w=to(d,b),{padInfo:k,outHeight:N,outWidth:$}=function(A,_,z,V,X,J,Y,et,rt){let at,dt,pt;if("number"==typeof A){at={top:A,bottom:A,left:A,right:A,type:0===A?"VALID":"NUMBER"};const ft=function(gt,St,Ct,At,Ft){null==At&&(At=Td(gt,St,Ct));const Zt=gt[1];return[Ya((gt[0]-St+2*At)/Ct+1,Ft),Ya((Zt-St+2*At)/Ct+1,Ft)]}([_,z],J,V,A,et);dt=ft[0],pt=ft[1]}else if("same"===A){dt=Math.ceil(_/V),pt=Math.ceil(z/X);const ft=Math.max(0,(dt-1)*V+J-_),gt=Math.max(0,(pt-1)*X+Y-z),St=Math.floor(ft/2),Ct=ft-St,At=Math.floor(gt/2);at={top:St,bottom:Ct,left:At,right:gt-At,type:"SAME"}}else if("valid"===A)at={top:0,bottom:0,left:0,right:0,type:"VALID"},dt=Math.ceil((_-J+1)/V),pt=Math.ceil((z-Y+1)/X);else{if("object"!=typeof A)throw Error(`Unknown padding parameter: ${A}`);{const ft="channelsLast"===rt?A[1][0]:A[2][0],gt="channelsLast"===rt?A[1][1]:A[2][1],St="channelsLast"===rt?A[2][0]:A[3][0],Ct="channelsLast"===rt?A[2][1]:A[3][1];at={top:ft,bottom:gt,left:St,right:Ct,type:0===ft&&0===gt&&0===St&&0===Ct?"VALID":"EXPLICIT"},dt=Ya((_-J+ft+gt)/V+1,et),pt=Ya((z-Y+St+Ct)/X+1,et)}}return{padInfo:at,outHeight:dt,outWidth:pt}}(s,c,l,m,g,x,w,a,o),C=i?f*h:f;let R;return"channelsFirst"===o?R=[u,C,N,$]:"channelsLast"===o&&(R=[u,N,$,C]),{batchSize:u,dataFormat:o,inHeight:c,inWidth:l,inChannels:h,outHeight:N,outWidth:$,outChannels:C,padInfo:k,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:n,outShape:R,filterShape:t}}function la(n,t,e,r,s,a=!1,i="channelsLast",o){let[u,c,l,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,c,l,h,p]=n;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,p,c,l,h]=n}const[d,f,m,,g]=t,[y,b,x]=Cd(e),[w,k,N]=Cd(r),$=to(d,w),C=to(f,k),R=to(m,N),{padInfo:A,outDepth:_,outHeight:z,outWidth:V}=function(Y,et,rt,at,dt,pt,ft,gt,St,Ct,At){let Ft,Jt,Zt,re;if("number"==typeof Y){Ft={top:Y,bottom:Y,left:Y,right:Y,front:Y,back:Y,type:0===Y?"VALID":"NUMBER"};const Gt=function(ue,se,pe,ce,ye,Ce){null==ye&&(ye=Td(ue,se,ce));const Bn=ue[1],Ze=ue[2];return[Ya((ue[0]-se+2*ye)/ce+1,Ce),Ya((Bn-se+2*ye)/ce+1,Ce),Ya((Ze-se+2*ye)/ce+1,Ce),1]}([et,rt,at,1],gt,0,dt,Y,At);Jt=Gt[0],Zt=Gt[1],re=Gt[2]}else if("same"===Y){Jt=Math.ceil(et/dt),Zt=Math.ceil(rt/pt),re=Math.ceil(at/ft);const Gt=(Jt-1)*dt+gt-et,ue=(Zt-1)*pt+St-rt,se=(re-1)*ft+Ct-at,pe=Math.floor(Gt/2),ce=Gt-pe,ye=Math.floor(ue/2),Ce=ue-ye,un=Math.floor(se/2);Ft={top:ye,bottom:Ce,left:un,right:se-un,front:pe,back:ce,type:"SAME"}}else{if("valid"!==Y)throw Error(`Unknown padding parameter: ${Y}`);Ft={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},Jt=Math.ceil((et-gt+1)/dt),Zt=Math.ceil((rt-St+1)/pt),re=Math.ceil((at-Ct+1)/ft)}return{padInfo:Ft,outDepth:Jt,outHeight:Zt,outWidth:re}}(s,c,l,h,y,b,x,$,C,R,o),X=a?g*p:g;let J;return"channelsFirst"===i?J=[u,X,_,z,V]:"channelsLast"===i&&(J=[u,_,z,V,X]),{batchSize:u,dataFormat:i,inDepth:c,inHeight:l,inWidth:h,inChannels:p,outDepth:_,outHeight:z,outWidth:V,outChannels:X,padInfo:A,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:$,effectiveFilterHeight:C,effectiveFilterWidth:R,dilationDepth:w,dilationHeight:k,dilationWidth:N,inShape:n,outShape:J,filterShape:t}}function Td(n,t,e,r=1){const s=to(t,r);return Math.floor((n[0]*(e-1)-e+s)/2)}function Mc(n){return"number"==typeof n?[n,n,n]:2===n.length?[n[0],n[1],1]:n}function Cd(n){return"number"==typeof n?[n,n,n]:n}function to(n,t){return t<=1?n:n+(n-1)*(t-1)}function Ya(n,t){if(!t)return Math.trunc(n);switch(t){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${t}`)}}function ua(n){const[t,e,r]=Mc(n);return 1===t&&1===e&&1===r}function Fn(n,t){return ua(n)||ua(t)}function $s(n){if("NHWC"===n)return"channelsLast";if("NCHW"===n)return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Gn(n,t,e){if(null!=e){if("string"==typeof t)throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if("number"==typeof t)I(vs(t),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else{if("object"!=typeof t)throw Error(`Error in ${n}: Unknown padding parameter: ${t}`);t.forEach(r=>{r.forEach(s=>{I(vs(s),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${s}.`)})})}}}const P=O({reshape_:function(n,t){const e={x:S(n,"x","reshape","string_or_numeric")};return L.runKernel(uc,e,{shape:t})}}),Lc=O({avgPool_:function(n,t,e,r,s){const a=S(n,"x","avgPool","float32");I(Fn(e,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '1'`);let i=a,o=!1;3===a.rank&&(o=!0,i=P(a,[1,a.shape[0],a.shape[1],a.shape[2]])),I(4===i.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),Gn("avgPool",r,s);let l=L.runKernel(Fi,{x:i},{filterSize:t,strides:e,pad:r,dimRoundingMode:s});return l=Dt(l,a.dtype),o?P(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),_0=O({avgPool3d_:function(n,t,e,r,s,a="NDHWC"){const i=S(n,"x","avgPool3d","float32");let o=i,u=!1;4===i.rank&&(u=!0,o=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),I(5===o.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),I("NDHWC"===a,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),Gn("avgPool3d",r,s);let h=L.runKernel(Di,{x:o},{filterSize:t,strides:e,pad:r,dimRoundingMode:s,dataFormat:a});return h=Dt(h,o.dtype),u?P(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),je=O({concat_:function(n,t=0){I(n.length>=1,()=>"Pass at least one tensor to concat");const e=Rc(n,"tensors","concat","string_or_numeric");return"complex64"===e[0].dtype&&e.forEach(a=>{if("complex64"!==a.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${a.dtype}. `)}),1===e.length?Ss(e[0]):L.runKernel(zi,e,{axis:t})}}),Ie=O({matMul_:function(n,t,e=!1,r=!1){let s=S(n,"a","matMul"),a=S(t,"b","matMul");return[s,a]=nn(s,a),L.runKernel(Oi,{a:s,b:a},{transposeA:e,transposeB:r})}}),M=O({mul_:function(n,t){let e=S(n,"a","mul"),r=S(t,"b","mul");return[e,r]=nn(e,r),L.runKernel(cl,{a:e,b:r})}}),Xr=O({sigmoid_:function(n){const t={x:S(n,"x","sigmoid","float32")};return L.runKernel(vl,t)}}),ne=O({slice_:function(n,t,e){const r=S(n,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");return L.runKernel(fc,{x:r},{begin:t,size:e})}}),eo=O({tanh_:function(n){const t={x:S(n,"x","tanh","float32")};return L.runKernel(Cl,t)}}),Xk=O({basicLSTMCell_:function(n,t,e,r,s,a){const i=S(n,"forgetBias","basicLSTMCell"),o=S(t,"lstmKernel","basicLSTMCell"),u=S(e,"lstmBias","basicLSTMCell"),c=S(r,"data","basicLSTMCell"),l=S(s,"c","basicLSTMCell"),h=S(a,"h","basicLSTMCell"),p=je([c,h],1),d=Ie(p,o),f=yt(d,u),g=f.shape[1]/4,y=[f.shape[0],g],b=ne(f,[0,0],y),x=ne(f,[0,g],y),w=ne(f,[0,2*g],y),k=ne(f,[0,3*g],y),N=yt(M(Xr(b),eo(x)),M(l,Xr(yt(i,w))));return[N,M(eo(N),Xr(k))]}}),zc=O({batchToSpaceND_:function(n,t,e){const r=S(n,"x","batchToSpaceND"),s=t.reduce((o,u)=>o*u);return I(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),I(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),I(r.shape[0]%s==0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`),L.runKernel(Mi,{x:r},{blockShape:t,crops:e})}}),Ol=O({batchNorm_:function(n,t,e,r,s,a){null==a&&(a=.001);const i=S(n,"x","batchNorm"),o=S(t,"mean","batchNorm"),u=S(e,"variance","batchNorm");let c,l;null!=s&&(c=S(s,"scale","batchNorm")),null!=r&&(l=S(r,"offset","batchNorm")),I(o.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),I(null==l||o.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),I(null==c||o.rank===c.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h=function(m){let g;return g=0===m.rank||1===m.rank?P(m,[1,1,1,m.size]):2===m.rank?P(m,[1,1,m.shape[0],m.shape[1]]):3===m.rank?P(m,[1,m.shape[0],m.shape[1],m.shape[2]]):m,g}(i),f=L.runKernel(Ks,{x:h,scale:c,offset:l,mean:o,variance:u},{varianceEpsilon:a});return P(f,i.shape)}}),O0=O({batchNorm2d_:function(n,t,e,r,s,a){const i=S(n,"x","batchNorm"),o=S(t,"mean","batchNorm"),u=S(e,"variance","batchNorm");let c,l;return null!=s&&(c=S(s,"scale","batchNorm")),null!=r&&(l=S(r,"offset","batchNorm")),I(2===i.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),I(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),I(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=c&&I(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`),null!=l&&I(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),Ol(i,o,u,l,c,a)}}),M0=O({batchNorm3d_:function(n,t,e,r,s,a){const i=S(n,"x","batchNorm"),o=S(t,"mean","batchNorm"),u=S(e,"variance","batchNorm");let c,l;return null!=s&&(c=S(s,"scale","batchNorm")),null!=r&&(l=S(r,"offset","batchNorm")),I(3===i.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),I(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),I(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=c&&I(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`),null!=l&&I(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),Ol(i,o,u,l,c,a)}}),L0=O({batchNorm4d_:function(n,t,e,r,s,a){const i=S(n,"x","batchNorm"),o=S(t,"mean","batchNorm"),u=S(e,"variance","batchNorm");let c,l;return null!=s&&(c=S(s,"scale","batchNorm")),null!=r&&(l=S(r,"offset","batchNorm")),I(4===i.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),I(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),I(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=c&&I(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`),null!=l&&I(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),Ol(i,o,u,l,c,a)}}),z0=O({bincount_:function(n,t,e){const r=S(n,"x","bincount"),s=S(t,"weights","bincount");return I("int32"===r.dtype,()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),I(e>=0,()=>`size must be non-negative, but got ${e}.`),I(s.size===r.size||0===s.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`),L.runKernel(jo,{x:r,weights:s},{size:e})}}),Yk=O({broadcastArgs_:function(n,t){const e=S(n,"s0","broadcastArgs","int32"),r=S(t,"s1","broadcastArgs","int32");if(1!==e.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${e.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);return L.runKernel(qo,{s0:e,s1:r})}}),no=O({broadcastTo_:function(n,t){let e=S(n,"broadcastTo","x");const r=e.shape;if(t.some(u=>!(u>0)||u%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const u=e.shape.slice();for(;u.length<t.length;)u.unshift(1);e=P(e,u)}const s=e.shape,a=Array.from(t);for(let u=t.length-1;u>=0;u--)if(s[u]===t[u])a[u]=1;else if(1!==e.shape[u])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);return 0===a.map((u,c)=>u>1?c:-1).filter(u=>u>=0).length?Ss(e):L.runKernel($l,{x:e},{reps:a})}}),P0=O({ceil_:function(n){const t={x:S(n,"x","ceil","float32")};return L.runKernel(za,t)}});function ro(n,t,e){return L.runKernel(_e,{},{shape:n,value:t,dtype:e})}const hr=O({clipByValue_:function(n,t,e){const r=S(n,"x","clipByValue");return I(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e?ro(r.shape,t,r.dtype):L.runKernel(Pa,{x:r},{clipValueMin:t,clipValueMax:e})}}),B0=O({concat1d_:function(n){return je(n,0)}}),Pc=O({concat2d_:function(n,t){return je(n,t)}}),W0=O({concat3d_:function(n,t){return je(n,t)}}),V0=O({concat4d_:function(n,t){return je(n,t)}}),ca=O({conv2d_:function(n,t,e,r,s="NHWC",a=[1,1],i){const o=S(n,"x","conv2d","float32"),u=S(t,"filter","conv2d","float32");let c=o,l=!1;3===o.rank&&(l=!0,c=P(o,[1,o.shape[0],o.shape[1],o.shape[2]])),I(4===c.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${c.rank}.`),I(4===u.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),Gn("conv2d",r,i);const h="NHWC"===s?c.shape[3]:c.shape[1];I(h===u.shape[2],()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`),I(Fn(e,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`);const f=L.runKernel(Pi,{x:c,filter:u},{strides:e,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i});return l?P(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),$d=O({conv1d_:function(n,t,e,r,s="NWC",a=1,i){const o=S(n,"x","conv1d"),u=S(t,"filter","conv1d");let c=o,l=!1;2===o.rank&&(l=!0,c=P(o,[1,o.shape[0],o.shape[1]])),I(3===c.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`),I(3===u.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),Gn("conv1d",r,i),I(c.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${u.shape[1]}.`),I(Fn(e,a),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${a}'`),I("NWC"===s,()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`);const h=P(u,[1,u.shape[0],u.shape[1],u.shape[2]]),p=P(c,[c.shape[0],1,c.shape[1],c.shape[2]]),d=ca(p,h,[1,e],r,"NHWC",[1,a],i);return P(d,l?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),Ed=O({conv2DBackpropInput_:function(n,t,e,r,s,a="NHWC",i){I(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let o=n,u=t,c=!1;3===t.rank&&(c=!0,u=P(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,n[0],n[1],n[2]]),I(4===o.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),I(4===u.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),I(4===e.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const l="NHWC"===a?o[3]:o[1],h="NHWC"===a?u.shape[3]:u.shape[1];I(l===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${e.shape[2]}.`),I(h===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${e.shape[3]}.`),Gn("conv2dDerInput",s,i);const f=L.runKernel(Bi,{dy:u,filter:e},{strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o});return c?P(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Rd=O({conv2dTranspose_:function(n,t,e,r,s,a){const i=S(n,"x","conv2dTranspose"),o=S(t,"filter","conv2dTranspose");return Ed(e,i,o,r,s,"NHWC",a)}}),U0=O({conv3d_:function(n,t,e,r,s="NDHWC",a=[1,1,1]){const i=S(n,"x","conv3d"),o=S(t,"filter","conv3d");let u=i,c=!1;4===i.rank&&(c=!0,u=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),I(5===u.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),I(5===o.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),I(u.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`),I(Fn(e,a),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`),I("NDHWC"===s,()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`);const p=L.runKernel(Wi,{x:u,filter:o},{strides:e,pad:r,dataFormat:s,dilations:a});return c?P(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),G0=O({conv3DBackpropInput_:function(n,t,e,r,s){I(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let a=n,i=t,o=!1;4===t.rank&&(o=!0,i=P(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,n[0],n[1],n[2],n[3]]);const u=a[4],c=i.shape[4];I(5===a.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`),I(5===i.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),I(5===e.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),I(u===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[3]}.`),I(c===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${c}) must match output depth for filter ${e.shape[4]}.`);const p=L.runKernel(Vi,{dy:i,filter:e},{pad:s,strides:r,inputShape:a});return o?P(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),H0=O({conv3dTranspose_:function(n,t,e,r,s){const a=S(n,"x","conv3dTranspose"),i=S(t,"filter","conv3dTranspose");return G0(e,a,i,r,s)}}),Bc=O({cos_:function(n){const t={x:S(n,"x","cos","float32")};return L.runKernel(jr,t)}}),Ad=O({cosh_:function(n){const t={x:S(n,"x","cosh","float32")};return L.runKernel(js,t)}}),Wc=O({cumprod_:function(n,t=0,e=!1,r=!1){const s={x:S(n,"x","cumprod")};return L.runKernel(cs,s,{axis:t,exclusive:e,reverse:r})}}),Fd=O({cumsum_:function(n,t=0,e=!1,r=!1){const s={x:S(n,"x","cumsum")};return L.runKernel(Ui,s,{axis:t,exclusive:e,reverse:r})}}),Zk=O({denseBincount_:function(n,t,e,r=!1){const s=S(n,"x","denseBincount"),a=S(t,"weights","denseBincount");return I("int32"===s.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`),I(s.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`),I(e>=0,()=>`size must be non-negative, but got ${e}.`),I(a.size===s.size||0===a.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`),L.runKernel(Ba,{x:s,weights:a},{size:e,binaryOutput:r})}}),j0=O({depthToSpace_:function(n,t,e="NHWC"){const r=S(n,"x","depthToSpace","float32"),s="NHWC"===e?r.shape[1]:r.shape[2],a="NHWC"===e?r.shape[2]:r.shape[3],i="NHWC"===e?r.shape[3]:r.shape[1];return I(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),I(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),I(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`),I(i%(t*t)==0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`),L.runKernel(Zo,{x:r},{blockSize:t,dataFormat:e})}}),Ml=O({depthwiseConv2d_:function(n,t,e,r,s="NHWC",a=[1,1],i){const o=S(n,"x","depthwiseConv2d","float32"),u=S(t,"filter","depthwiseConv2d","float32");let c=o,l=!1;3===o.rank&&(l=!0,c=P(o,[1,o.shape[0],o.shape[1],o.shape[2]])),I(4===c.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),I(4===u.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const h="NHWC"===s?c.shape[3]:c.shape[1];I(h===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${u.shape[2]}.`),Gn("depthwiseConv2d",r,i);const f=L.runKernel(Gi,{x:c,filter:u},{strides:e,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i});return l?P(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Jk=O({diag_:function(n){const t={x:S(n,"x","diag")};return L.runKernel(Qo,t)}}),q0=O({dilation2d_:function(n,t,e,r,s=[1,1],a="NHWC"){const i=S(n,"x","dilation2d"),o=S(t,"filter","dilation2d");I(3===i.rank||4===i.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),I(3===o.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),I("NHWC"===a,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`);let u=i,c=!1;3===i.rank&&(u=P(i,[1,i.shape[0],i.shape[1],i.shape[2]]),c=!0);const p=L.runKernel(T,{x:u,filter:o},{strides:e,pad:r,dilations:s});return c?P(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Dd=O({floorDiv_:function(n,t){let e=S(n,"a","floorDiv"),r=S(t,"b","floorDiv");return[e,r]=nn(e,r),L.runKernel(Qn,{a:e,b:r})}}),Bt=O({div_:function(n,t){let e=S(n,"a","div"),r=S(t,"b","div");return[e,r]=nn(e,r),"int32"===e.dtype&&"int32"===r.dtype?Dd(e,r):L.runKernel(j,{a:e,b:r},{})}}),Yr=O({equal_:function(n,t){let e=S(n,"a","equal","string_or_numeric"),r=S(t,"b","equal","string_or_numeric");return[e,r]=nn(e,r),de(e.shape,r.shape),L.runKernel(It,{a:e,b:r})}}),tr=O({where_:function(n,t,e){const r=S(t,"a","where"),s=S(e,"b","where"),a=S(n,"condition","where","bool"),i=de(de(a.shape,r.shape),s.shape),o={condition:no(a,i),t:no(r,i),e:no(s,i)};return L.runKernel(dc,o)}}),$e=O({zerosLike_:function(n){const t={x:S(n,"x","zerosLike")};return L.runKernel(vc,t)}}),K0=O({divNoNan_:function(n,t){let e=S(n,"a","div"),r=S(t,"b","div");[e,r]=nn(e,r);const s=Bt(e,r),a=$e(s),i=Yr(r,a);return tr(i,a,s)}}),X0=O({dot_:function(n,t){const e=S(n,"t1","dot"),r=S(t,"t2","dot");I(!(1!==e.rank&&2!==e.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${r.rank}.`);const s=1===e.rank?e.size:e.shape[1],a=1===r.rank?r.size:r.shape[0];if(I(s===a,()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`),1===e.rank&&1===r.rank){const i=P(e,[1,-1]),o=P(r,[-1,1]),u=Ie(i,o);return P(u,[])}if(1===e.rank&&2===r.rank){const i=P(e,[1,-1]),o=P(r,[r.shape[0],r.shape[1]]),u=Ie(i,o);return P(u,[u.size])}if(2===e.rank&&1===r.rank){const i=P(r,[-1,1]),o=Ie(e,i);return P(o,[o.size])}{const i=P(r,[r.shape[0],r.shape[1]]);return Ie(e,i)}}}),Qk=O({einsum_:function(n,...t){const e=t.map((s,a)=>S(s,`tensors${a}`,"einsum"));return L.runKernel(G,e,{equation:n})}}),Ll=O({elu_:function(n){const t={x:S(n,"x","elu","float32")};return L.runKernel(Z,t)}}),Y0=O({erf_:function(n){let t=S(n,"x","erf");return I("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=Dt(t,"float32")),L.runKernel(xt,{x:t})}});function _d(n,t){for(let e=0;e<n.length;++e)if(n[n.length-e-1]!==t-1-e)return!1;return!0}function Z0(n,t,e){const r=n.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===e.indexOf(o)?s.push(n[a++]):s.push(t[i++]);return s}function Sn(n,t){const e=[],r=n.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&e.push(n[s]);return[e,t.map(s=>n[s])]}function sn(n,t){return Z0(n,t.map(e=>1),t)}function Dn(n,t,e){I(_d(t,e),()=>`${n} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function tn(n,t){if(_d(n,t))return null;const e=[];for(let r=0;r<t;++r)-1===n.indexOf(r)&&e.push(r);return n.forEach(r=>e.push(r)),e}function ha(n){return n.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function an(n,t){const e=[];for(let r=t-n;r<t;++r)e.push(r);return e}const Zr=O({max_:function(n,t=null,e=!1){const r={x:S(n,"x","max")};return L.runKernel(Xu,r,{reductionIndices:t,keepDims:e})}}),Vc=O({min_:function(n,t=null,e=!1){const r={x:S(n,"x","min")};return L.runKernel(Qu,r,{axis:t,keepDims:e})}}),pa=O({pow_:function(n,t){let e=S(n,"base","pow"),r=S(t,"exp","pow");return[e,r]=nn(e,r),L.runKernel(hl,{a:e,b:r})}}),Pn=O({sqrt_:function(n){const t={x:S(n,"x","sqrt","float32")};return L.runKernel(Il,t)}}),Pe=O({square_:function(n){const t=S(n,"x","square");return L.runKernel("Square",{x:t},{})}}),Vt=O({sum_:function(n,t=null,e=!1){let r=S(n,"x","sum");return"bool"===r.dtype&&(r=Dt(r,"int32")),L.runKernel(mc,{x:r},{axis:t,keepDims:e})}});function J0(n,t,e=null){if(0===n.rank)return mn(n);if(1!==n.rank&&null===e)return J0(P(n,[-1]),t,e);if(1===n.rank||"number"==typeof e||Array.isArray(e)&&1===e.length){if(1===t)return Vt(mn(n),e);if(t===1/0)return Zr(mn(n),e);if(t===-1/0)return Vc(mn(n),e);if("euclidean"===t||2===t)return Pn(Vt(pa(mn(n),Qt(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&2===e.length){if(1===t)return Zr(Vt(mn(n),e[0]),e[1]-1);if(t===1/0)return Zr(Vt(mn(n),e[1]),e[0]);if(t===-1/0)return Vc(Vt(mn(n),e[1]),e[0]);if("fro"===t||"euclidean"===t)return Pn(Vt(Pe(n),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const zl=O({norm_:function(n,t="euclidean",e=null,r=!1){const s=J0(n=S(n,"x","norm"),t,e);let a=s.shape;if(r){const i=be(e,n.shape);a=sn(s.shape,i)}return P(s,a)}}),Q0=O({euclideanNorm_:function(n,t=null,e=!1){return zl(n,"euclidean",t,e)}}),kr=O({exp_:function(n){const t={x:S(n,"x","exp")};return L.runKernel(Tt,t)}}),er=O({expandDims_:function(n,t=0){const e=S(n,"x","expandDims","string_or_numeric");return I(t<=e.rank,()=>"Axis must be <= rank of the tensor"),L.runKernel(Lt,{input:e},{dim:t})}}),ty=O({expm1_:function(n){const t={x:S(n,"x","expm1")};return L.runKernel(qt,t)}}),_r=O({tile_:function(n,t){const e=S(n,"x","tile","string_or_numeric");return I(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`),L.runKernel($l,{x:e},{reps:t})}}),Od=O({eye_:function(n,t,e,r="float32"){null==t&&(t=n);const s=we([n,t],r),a=n<=t?n:t;for(let o=0;o<a;++o)s.set(1,o,o);const i=P(s.toTensor(),[n,t]);if(null==e)return i;if(1===e.length)return _r(er(i,0),[e[0],1,1]);if(2===e.length)return _r(er(er(i,0),0),[e[0],e[1],1,1]);if(3===e.length)return _r(er(er(er(i,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}}),Pl=O({floor_:function(n){const t={x:S(n,"x","floor","float32")};return L.runKernel(He,t)}}),Bl=O({gather_:function(n,t,e=0,r=0){const s={x:S(n,"x","gather"),indices:S(t,"indices","gather","int32")};return L.runKernel(Xs,s,{axis:e,batchDims:r})}}),Ir=O({greater_:function(n,t){let e=S(n,"a","greater","string_or_numeric"),r=S(t,"b","greater","string_or_numeric");return[e,r]=nn(e,r),de(e.shape,r.shape),L.runKernel(Hi,{a:e,b:r})}}),Za=O({greaterEqual_:function(n,t){let e=S(n,"a","greaterEqual","string_or_numeric"),r=S(t,"b","greaterEqual","string_or_numeric");return[e,r]=nn(e,r),de(e.shape,r.shape),L.runKernel(Ys,{a:e,b:r})}}),Uc=O({imag_:function(n){const t={input:S(n,"input","imag")};return L.runKernel(yp,t)}}),ey=O({isFinite_:function(n){const t={x:S(n,"x","isFinite")};return L.runKernel(nl,t)}}),ny=O({isInf_:function(n){const t={x:S(n,"x","isInf")};return L.runKernel(rl,t)}}),ry=O({isNaN_:function(n){const t={x:S(n,"x","isNaN")};return L.runKernel(sl,t)}}),Gc=O({leakyRelu_:function(n,t=.2){const e={x:S(n,"x","leakyRelu")};return L.runKernel(Vu,e,{alpha:t})}}),Md=O({less_:function(n,t){let e=S(n,"a","less","string_or_numeric"),r=S(t,"b","less","string_or_numeric");return[e,r]=nn(e,r),de(e.shape,r.shape),L.runKernel(Uu,{a:e,b:r})}}),Ja=O({lessEqual_:function(n,t){let e=S(n,"a","lessEqual","string_or_numeric"),r=S(t,"b","lessEqual","string_or_numeric");return[e,r]=nn(e,r),de(e.shape,r.shape),L.runKernel(Gu,{a:e,b:r})}});function tI(n,t,e){if(e<=0)throw new Error("The number of values should be positive.");return L.runKernel(bp,{},{start:n,stop:t,num:e})}const sy=O({localResponseNormalization_:function(n,t=5,e=1,r=1,s=.5){const a=S(n,"x","localResponseNormalization");I(4===a.rank||3===a.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`),I(vs(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=a,o=!1;3===a.rank&&(o=!0,i=P(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l=L.runKernel(Ku,{x:i},{depthRadius:t,bias:e,alpha:r,beta:s});return o?P(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),Nr=O({log_:function(n){const t={x:S(n,"x","log","float32")};return L.runKernel(al,t)}}),Hc=O({log1p_:function(n){const t={x:S(n,"x","log1p")};return L.runKernel(il,t)}}),Ke=O({neg_:function(n){const t={x:S(n,"x","neg")};return L.runKernel(ec,t)}}),so=O({softplus_:function(n){const t={x:S(n,"x","softplus")};return L.runKernel(kl,t)}}),ay=O({logSigmoid_:function(n){const t=S(n,"x","logSigmoid");return Ts(r=>({value:Ke(so(Ke(r))),gradFunc:s=>M(s,Xr(Ke(r)))}))(t)}}),Ot=O({sub_:function(n,t){let e=S(n,"a","sub"),r=S(t,"b","sub");return[e,r]=nn(e,r),L.runKernel(Sl,{a:e,b:r})}}),Ld=O({logSoftmax_:function(n,t=-1){const e=S(n,"logits","logSoftmax");if(-1===t&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return Ts((s,a)=>{const i=Zr(s,t,!0),o=Ot(s,i),u=Ot(Dt(o,"float32"),Nr(Vt(kr(o),t,!0)));return a([u]),{value:u,gradFunc:(c,l)=>{const[h]=l,p=kr(h);return Ot(c,M(Vt(c,t,!0),p))}}})(e)}}),zd=O({logSumExp_:function(n,t=null,e=!1){const r=S(n,"x","logSumExp"),s=be(t,r.shape),a=Zr(r,s,!0),i=Ot(r,a),o=kr(i),u=Vt(o,s),c=Nr(u),l=yt(P(a,c.shape),c);if(e){const h=sn(l.shape,s);return P(l,h)}return l}}),hs=O({logicalAnd_:function(n,t){const e=S(n,"a","logicalAnd","bool"),r=S(t,"b","logicalAnd","bool");return de(e.shape,r.shape),L.runKernel(Hu,{a:e,b:r})}}),jc=O({logicalNot_:function(n){const t={x:S(n,"x","logicalNot","bool")};return L.runKernel(ju,t)}}),Pd=O({logicalOr_:function(n,t){const e=S(n,"a","logicalOr","bool"),r=S(t,"b","logicalOr","bool");return de(e.shape,r.shape),L.runKernel(qu,{a:e,b:r})}}),iy=O({logicalXor_:function(n,t){const e=S(n,"a","logicalXor","bool"),r=S(t,"b","logicalXor","bool");return de(e.shape,r.shape),hs(Pd(n,t),jc(hs(n,t)))}}),oy=2147483648,Bd=O({searchSorted_:function(n,t,e="left"){const r=S(n,"sortedSequence","searchSorted"),s=S(t,"values","searchSorted"),i=s.shape[s.shape.length-1],o=P(r,[-1,r.shape[r.shape.length-1]]),u=P(s,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(nt(u.shape)>=oy)throw new Error("values tensor size must less than 2147483648");if(o.shape[1]>=oy)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${o.shape[1]}`);return L.runKernel(_p,{sortedSequence:o,values:u},{side:e})}});function eI(n,t){return Bd(n,t,"left")}const qc=O({maxPool_:function(n,t,e,r,s){const a=S(n,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=P(a,[1,a.shape[0],a.shape[1],a.shape[2]])),I(4===i.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),I(Fn(e,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '1'`),Gn("maxPool",r,s);const l=L.runKernel(Yu,{x:i},{filterSize:t,strides:e,pad:r,dimRoundingMode:s});return o?P(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),ly=O({maxPool3d_:function(n,t=[1,1,1],e,r,s,a="NDHWC"){const i=S(n,"x","maxPool3d");let o=i,u=!1;4===i.rank&&(u=!0,o=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),I(5===o.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),I("NDHWC"===a,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`),Gn("maxPool3d",r,s);const h=L.runKernel(Zu,{x:o},{filterSize:t,strides:e,pad:r,dimRoundingMode:s,dataFormat:a});return u?P(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),nI=O({maxPoolWithArgmax_:function(n,t,e,r,s=!1){const a={x:S(n,"x","maxPoolWithArgmax")},o=L.runKernel(kp,a,{filterSize:t,strides:e,pad:r,includeBatchInIndex:s});return{result:o[0],indexes:o[1]}}}),Es=O({maximum_:function(n,t){let e=S(n,"a","maximum"),r=S(t,"b","maximum");return[e,r]=nn(e,r),"bool"===e.dtype&&(e=Dt(e,"int32"),r=Dt(r,"int32")),de(e.shape,r.shape),L.runKernel(ol,{a:e,b:r})}}),rn=O({mean_:function(n,t=null,e=!1){const r={x:S(n,"x","mean")};return L.runKernel(Ju,r,{axis:t,keepDims:e})}});function gn(n,t="float32"){if("complex64"===t){const r=gn(n,"float32"),s=gn(n,"float32");return ra(r,s)}const e=dn(nt(n),t);return L.makeTensor(e,n,t)}function Sr(n,t="float32"){if("complex64"===t){const r=Sr(n,"float32"),s=gn(n,"float32");return ra(r,s)}const e=Si(nt(n),t);return L.makeTensor(e,n,t)}function rI(n,t,{indexing:e="xy"}={}){if("xy"!==e&&"ij"!==e)throw new TypeError(`${e} is not a valid third argument to meshgrid`);if(void 0===n)return[];let r=S(n,"x","meshgrid",n instanceof Se?n.dtype:"float32");if(void 0===t)return[r];let s=S(t,"y","meshgrid",t instanceof Se?t.dtype:"float32");const a=nt(r.shape),i=nt(s.shape);return"xy"===e?(r=P(r,[1,-1]),s=P(s,[-1,1]),[Ie(Sr([i,1],r.dtype),r),Ie(s,Sr([1,a],s.dtype))]):(r=P(r,[-1,1]),s=P(s,[1,-1]),[Ie(r,Sr([1,i],r.dtype)),Ie(Sr([a,1],s.dtype),s)])}const Wl=O({minimum_:function(n,t){let e=S(n,"a","minimum"),r=S(t,"b","minimum");return[e,r]=nn(e,r),"bool"===e.dtype&&(e=Dt(e,"int32"),r=Dt(r,"int32")),de(e.shape,r.shape),L.runKernel(ll,{a:e,b:r})}}),uy=O({mirrorPad_:function(n,t,e){I("reflect"===e||"symmetric"===e,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const r=S(n,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");I(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);const s="reflect"===e?1:0;for(let o=0;o<r.rank;o++)I(2===t[o].length,()=>"Invalid number of paddings. Must be length of 2 each."),I(t[o][0]>=0&&t[o][0]<=r.shape[o]-s&&t[o][1]>=0&&t[o][1]<=r.shape[o]-s,()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-s} or less than 0 for input of shape ${r.shape}`);return L.runKernel(tc,{x:r},{paddings:t,mode:e})}}),cy=O({mod_:function(n,t){let e=S(n,"a","mod"),r=S(t,"b","mod");return[e,r]=nn(e,r),L.runKernel(ul,{a:e,b:r})}}),Kc=O({moments_:function(n,t=null,e=!1){const r=be(t,(n=S(n,"x","moments")).shape),s=rn(n,r,e);let a=s.shape;e||(a=sn(s.shape,r));const i=Pe(Ot(Dt(n,"float32"),P(s,a)));return{mean:s,variance:rn(i,r,e)}}}),sI=O({multiRNNCell_:function(n,t,e,r){const s=S(t,"data","multiRNNCell"),a=Rc(e,"c","multiRNNCell"),i=Rc(r,"h","multiRNNCell");let o=s;const u=[];for(let h=0;h<n.length;h++){const p=n[h](o,a[h],i[h]);u.push(p[0]),u.push(p[1]),o=p[1]}const c=[],l=[];for(let h=0;h<u.length;h+=2)c.push(u[h]),l.push(u[h+1]);return[c,l]}}),aI=O({multinomial_:function(n,t,e,r=!1){const s=S(n,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);e=e||Math.random();const o={logits:1===i?P(s,[1,-1]):s},c=L.runKernel(Ip,o,{numSamples:t,seed:e,normalized:r});return 1===i?P(c,[c.size]):c}}),ao=O({notEqual_:function(n,t){let e=S(n,"a","notEqual","string_or_numeric"),r=S(t,"b","notEqual","string_or_numeric");return[e,r]=nn(e,r),de(e.shape,r.shape),L.runKernel(nc,{a:e,b:r})}}),Wd=O({oneHot_:function(n,t,e=1,r=0,s="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:S(n,"indices","oneHot","int32")};return L.runKernel(sc,a,{dtype:s,depth:t,onValue:e,offValue:r})}}),Tr=O({onesLike_:function(n){const t={x:S(n,"x","onesLike")};return L.runKernel(rc,t)}}),iI=O({outerProduct_:function(n,t){const e=S(n,"v1","outerProduct"),r=S(t,"v2","outerProduct");I(1===e.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${e.rank} and ${r.rank}.`);const s=P(e,[-1,1]),a=P(r,[1,-1]);return Ie(s,a)}}),da=O({pad_:function(n,t,e=0){const r=S(n,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return L.runKernel(ic,{x:r},{paddings:t,constantValue:e})}}),oI=O({pad1d_:function(n,t,e=0){return I(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),da(n,[t],e)}}),lI=O({pad2d_:function(n,t,e=0){return I(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),da(n,t,e)}}),uI=O({pad3d_:function(n,t,e=0){return I(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),da(n,t,e)}}),cI=O({pad4d_:function(n,t,e=0){return I(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),da(n,t,e)}}),Xc=O({spaceToBatchND_:function(n,t,e){const r=S(n,"x","spaceToBatchND");return I(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),I(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),I(r.shape.reduce((i,o,u)=>u>0&&u<=t.length?i&&(o+e[u-1][0]+e[u-1][1])%t[u-1]==0:i,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`),L.runKernel(gc,{x:r},{blockShape:t,paddings:e})}}),hy=O({pool_:function(n,t,e,r,s,a,i){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const o=S(n,"x","maxPool");let u=o,c=!1;3===o.rank&&(c=!0,u=P(o,[1,o.shape[0],o.shape[1],o.shape[2]])),I(Fn(a,s),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`);const l=Dr(u.shape,t,a,s,r),h=[l.dilationHeight,l.dilationWidth];let p;p="same"===r?function(w,k){const $=w.map((A,_)=>A+(A-1)*(k[_]-1)).map(A=>A-1),C=$.map(A=>Math.floor(A/2)),R=$.map((A,_)=>A-C[_]);return $.map((A,_)=>[C[_],R[_]])}([l.filterHeight,l.filterWidth],h):[[0,0],[0,0]];const d=1===h[0]&&1===h[1],[f,m]=function(w,k,N){const $=N.map(X=>X[0]),C=N.map(X=>X[1]),R=w.concat($,C),A=k.map((X,J)=>(X-R[J]%X)%X),_=C.map((X,J)=>X+A[J]);return[k.map((X,J)=>[$[J],_[J]]),k.map((X,J)=>[0,A[J]])]}([l.inHeight,l.inWidth],h,p),g=d?r:"valid",y=d?u:Xc(u,h,f),b=("avg"===e?()=>Lc(y,t,a,g,i):()=>qc(y,t,a,g,i))(),x=d?b:zc(b,h,m);return c?P(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),Yc=O({prelu_:function(n,t){const e={x:S(n,"x","prelu"),alpha:S(t,"alpha","prelu")};return L.runKernel(oc,e)}}),py=O({prod_:function(n,t=null,e=!1){let r=S(n,"x","prod");return"bool"===r.dtype&&(r=Dt(r,"int32")),L.runKernel(lc,{x:r},{axis:t,keepDims:e})}}),hI=O({raggedGather_:function(n,t,e,r){const s={paramsNestedSplits:n.map((o,u)=>S(o,`tensors${u}`,"raggedGather","int32")),paramsDenseValues:S(t,"paramsDenseValues","raggedGather"),indices:S(e,"indices","raggedGather","int32")},i=L.runKernel(Cp,s,{outputRaggedRank:r});return{outputNestedSplits:i.slice(0,i.length-1),outputDenseValues:i[i.length-1]}}}),pI=O({raggedTensorToTensor_:function(n,t,e,r,s){const a=S(n,"shape","raggedTensorToTensor","int32"),i=S(t,"values","raggedTensorToTensor"),o={shape:a,values:i,defaultValue:S(e,"defaultValue","raggedTensorToTensor",i.dtype),rowPartitionTensors:r.map((c,l)=>S(c,`tensors${l}`,"raggedTensorToTensor","int32"))};return L.runKernel($p,o,{rowPartitionTypes:s})}}),dI=O({rand_:function(n,t,e){const r=nt(n);let s=null;if(null==e||"float32"===e)s=new Float32Array(r);else if("int32"===e)s=new Int32Array(r);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);s=new Uint8Array(r)}for(let a=0;a<r;a++)s[a]=t();return L.makeTensor(s,n,e)}});var io=_t(377);class Vd{constructor(t,e,r,s,a){this.mean=t,this.stdDev=e,this.dtype=r,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=a||Math.random();this.random=io.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const s=this.nextVal;return this.nextVal=NaN,s}let t,e,r=!1;for(;!r;){let s,a,i;do{s=2*this.random()-1,a=2*this.random()-1,i=s*s+a*a}while(i>=1||0===i);const o=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*s*o,e=this.mean+this.stdDev*a*o,this.truncated&&!this.isValidTruncated(t)||(r=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class fI{constructor(t,e,r,s){this.alpha=t,this.beta=1/e,this.dtype=r;const a=s||Math.random();this.randu=io.alea(a.toString()),this.randn=new Vd(0,1,r,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,r,s,a,i;for(;;){do{s=this.randn.nextValue(),i=1+this.c*s}while(i<=0);if(i*=i*i,t=s*s,e=1-.331*t*t,r=.5*t+this.d*(1-i+Math.log(i)),a=this.randu(),a<e||Math.log(a)<r)break}return i*=1/this.beta*this.d,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(t){return"float32"===this.dtype?t:Math.round(t)}}class mI{constructor(t=0,e=1,r,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=r,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=io.alea(s)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const gI=O({randomGamma_:function(n,t,e=1,r="float32",s){if(null==e&&(e=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new fI(t,e,r,s),i=we(n,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}}),Ud=O({randomNormal_:function(n,t=0,e=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new Vd(t,e,r,!1,s),i=we(n,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}}),yI=O({randomStandardNormal_:function(n,t,e){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return Ud(n,0,1,t,e)}}),Vl=O({randomUniform_:function(n,t=0,e=1,r="float32",s){const a=we(n,r),i=new mI(t,e,null,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}});function Ul(n,t,e=1,r="float32"){if(0===e)throw new Error("Cannot have a step of zero");return L.runKernel(Ep,{},{start:n,stop:t,step:e,dtype:r})}const Gl=O({real_:function(n){const t={input:S(n,"input","real")};return L.runKernel(Rp,t)}}),dy=O({reciprocal_:function(n){const t={x:S(n,"x","reciprocal")};return L.runKernel(pl,t)}}),ps=O({relu_:function(n){const t={x:S(n,"x","relu")};return L.runKernel(dl,t)}}),Gd=O({relu6_:function(n){const t={x:S(n,"x","relu6")};return L.runKernel(fl,t)}}),Or=O({reverse_:function(n,t){const e={x:S(n,"x","reverse")};return L.runKernel(pc,e,{dims:t})}}),bI=O({reverse1d_:function(n){const t=S(n,"x","reverse");return I(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Or(t,0)}}),xI=O({reverse2d_:function(n,t){const e=S(n,"x","reverse");return I(2===e.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${e.rank}.`),Or(e,t)}}),wI=O({reverse3d_:function(n,t){const e=S(n,"x","reverse");return I(3===e.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${e.rank}.`),Or(e,t)}}),vI=O({reverse4d_:function(n,t){const e=S(n,"x","reverse");return I(4===e.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${e.rank}.`),Or(e,t)}}),Hd=O({round_:function(n){const t={x:S(n,"x","round")};return L.runKernel(ml,t)}}),jd=O({rsqrt_:function(n){const t={x:S(n,"x","rsqrt","float32")};return L.runKernel(gl,t)}}),qd=O({selu_:function(n){const t={x:S(n,"x","selu")};return L.runKernel(yl,t)}}),Kd=O({separableConv2d_:function(n,t,e,r,s,a=[1,1],i="NHWC"){const o=S(n,"x","separableConv2d"),u=S(t,"depthwiseFilter","separableConv2d"),c=S(e,"pointwiseFilter","separableConv2d");let l=o,h=!1;if(3===o.rank&&(h=!0,l=P(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");I(4===l.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),I(4===u.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),I(4===c.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),I(1===c.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`),I(1===c.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`);const p=u.shape[2],d=u.shape[3];I(c.shape[2]===p*d,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${c.shape[2]}.`);const f=Ml(l,u,r,s,i,a),m=ca(f,c,1,"valid",i);return h?P(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),kI=async function(n,t){const e=S(n,"x","setdiff1d"),r=S(t,"y","setdiff1d");I(e.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${e.dtype}) and y (${r.dtype}).`),I(1===e.rank,()=>`x should be 1D tensor, but got x (${e.shape}).`),I(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const s=await e.data(),a=await r.data(),i=new Set(a);let o=0;for(let l=0;l<s.length;l++)i.has(s[l])||o++;const u=new In([o],e.dtype),c=new In([o],"int32");for(let l=0,h=0;l<s.length;l++)i.has(s[l])||(u.values[h]=s[l],c.values[h]=l,h++);return[u.toTensor(),c.toTensor()]},fy=O({sign_:function(n){const t={x:S(n,"x","sign")};return L.runKernel(wl,t)}}),Xd=O({sin_:function(n){const t={x:S(n,"x","sin","float32")};return L.runKernel(bl,t)}}),Yd=O({sinh_:function(n){const t={x:S(n,"x","sinh")};return L.runKernel(xl,t)}}),Zc=O({slice1d_:function(n,t,e){const r=S(n,"x","slice1d");return I(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),ne(r,[t],[e])}}),Zd=O({slice2d_:function(n,t,e){const r=S(n,"x","slice2d");return I(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),ne(r,t,e)}}),Jc=O({slice3d_:function(n,t,e){const r=S(n,"x","slice3d");return I(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),ne(r,t,e)}}),Hl=O({slice4d_:function(n,t,e){const r=S(n,"x","slice4d");return I(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),ne(r,t,e)}}),Qc=O({softmax_:function(n,t=-1){const e=S(n,"logits","softmax","float32");if(-1===t&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);return L.runKernel(bc,{logits:e},{dim:t})}}),th=O({fft_:function(n){return I("complex64"===n.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`),L.runKernel("FFT",{input:n})}}),jl=O({ifft_:function(n){return I("complex64"===n.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`),L.runKernel(gp,{input:n})}}),Jd=O({irfft_:function(n){const t=n.shape[n.shape.length-1],e=n.size/t;let r;if(t<=2){const s=P(n,[e,t]);r=jl(s)}else{const s=[e,2*(t-1)],a=P(Gl(n),[e,t]),i=P(Uc(n),[e,t]),o=Or(ne(a,[0,1],[e,t-2]),1),u=M(Or(ne(i,[0,1],[e,t-2]),1),Qt(-1)),c=je([a,o],1),l=je([i,u],1),h=P(ra(c,l),[s[0],s[1]]);r=jl(h)}if(r=Gl(r),3===n.rank&&0!==n.shape[0]){const s=r,a=n.shape[0];r=P(r,[a,r.shape[0]/a,r.shape[1]]),s.dispose()}return r}}),pr=O({split_:function(n,t,e=0){const r={x:S(n,"x","split")};return L.runKernel(yc,r,{numOrSizeSplits:t,axis:e})}}),eh=O({rfft_:function(n,t){I("float32"===n.dtype,()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let e=n.shape[n.shape.length-1];const r=n.size/e;let s;if(null!=t&&t<e){const f=n.shape.map(g=>0),m=n.shape.map(g=>g);m[n.shape.length-1]=t,s=ne(n,f,m),e=t}else if(null!=t&&t>e){const f=n.shape.map(m=>m);f[n.shape.length-1]=t-e,s=je([n,gn(f)],n.shape.length-1),e=t}else s=n;const a=$e(s),i=P(ra(s,a),[r,e]),o=th(i),u=Math.floor(e/2)+1,c=Gl(o),l=Uc(o),h=pr(c,[u,e-u],c.shape.length-1),p=pr(l,[u,e-u],l.shape.length-1),d=s.shape.slice();return d[s.shape.length-1]=u,P(ra(h[0],p[0]),d)}}),Qd=O({squaredDifference_:function(n,t){let e=S(n,"a","squaredDifference"),r=S(t,"b","squaredDifference");return[e,r]=nn(e,r),de(e.shape,r.shape),L.runKernel(Nl,{a:e,b:r},{})}}),dr=O({squeeze_:function(n,t){const e=S(n,"x","squeeze","string_or_numeric");return P(e,us(e.shape,t).newShape)}}),Cr=O({stack_:function(n,t=0){const e=Rc(n,"tensors","stack","string_or_numeric");return I(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&I(t<=e[0].rank,()=>"Axis must be <= rank of the tensor"),L.runKernel(ac,e,{axis:t})}}),oo=O({step_:function(n,t=0){const e={x:S(n,"x","step")};return L.runKernel(El,e,{alpha:t})}}),my=O({stridedSlice_:function(n,t,e,r,s=0,a=0,i=0,o=0,u=0){const c={x:S(n,"x","stridedSlice","string_or_numeric")};return L.runKernel(Wp,c,{begin:t,end:e,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u})}}),gy=O({tan_:function(n){const t={x:S(n,"x","tan","float32")};return L.runKernel(Tl,t)}});function on(n,t){Je(n);const e=na(n,t);if(1!==e.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return sa(n,null,e,t)}function Rs(n,t,e){if(Je(n),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=na(n,e);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return sa(n,t,r,e)}function II(n,t,e){if(Je(n),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=na(n,e);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return sa(n,t,r,e)}function NI(n,t,e){if(Je(n),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=na(n,e);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return sa(n,t,r,e)}function SI(n,t,e){if(Je(n),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=na(n,e);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return sa(n,t=t||r,r,e)}const yy=O({topk_:function(n,t=1,e=!0){const r=S(n,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},i={k:t,sorted:e},[o,u]=L.runKernel(Hp,a,i);return{values:o,indices:u}}}),tf=O({truncatedNormal_:function(n,t=0,e=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new Vd(t,e,r,!0,s),i=we(n,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}}),by=O({unique_:function(n,t=0){const e=S(n,"x","unique","string_or_numeric");I(e.rank>0,()=>"The input tensor must be at least 1D");const r={x:e},s={axis:t},[a,i]=L.runKernel(qp,r,s);return{values:a,indices:i}}}),ef=O({unsortedSegmentSum_:function(n,t,e){const r=S(n,"x","unsortedSegmentSum"),s=S(t,"segmentIds","unsortedSegmentSum","int32");return I(vs(e),()=>"numSegments must be of dtype int"),L.runKernel(wc,{x:r,segmentIds:s},{numSegments:e})}}),Jr=O({unstack_:function(n,t=0){const e=S(n,"x","unstack","string_or_numeric");return I(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`),L.runKernel(xc,{value:e},{axis:t})}});function TI(n,t){return Bd(n,t,"right")}function xy(n,t=!0,e,r){return L.makeVariable(n,t,e,r)}function nf(n,t){const e=[];for(let a=0;a<t.length;a++)t[a]&&e.push(a);const r=we(n,"int32"),s=we([e.length,n.length],"int32");for(let a=0;a<e.length;a++){const i=r.indexToLoc(e[a]);s.values.set(i,a*n.length)}return s.toTensor()}const wy=async function(n){const t=S(n,"condition","whereAsync","bool"),e=await t.data(),r=nf(t.shape,e);return n!==t&&t.dispose(),r},CI=async function(n,t,e){const r=S(n,"tensor","boolMask"),s=S(t,"mask","boolMask","bool"),a=e??0,i=s.rank,o=r.shape;I(i>0,()=>"mask cannot be scalar"),Ae(o.slice(a,a+i),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let m=a;m<a+i;m++)u*=o[m];const c=o.slice(0,a).concat([u],o.slice(a+i)),l=P(r,c),h=P(s,[-1]),p=await wy(h),d=dr(p,[1]),f=Bl(l,d,a);return n!==r&&r.dispose(),t!==s&&s.dispose(),d.dispose(),l.dispose(),h.dispose(),p.dispose(),f},Te=O({transpose_:function(n,t,e){const r=S(n,"x","transpose");if(null==t&&(t=r.shape.map((i,o)=>o).reverse()),I(r.rank===t.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`),t.forEach(i=>{I(i>=0&&i<r.rank,()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`)}),r.rank<=1)return r.clone();const s={x:r},a={perm:t};return"complex64"===r.dtype?K(()=>{let i=Gl(r),o=Uc(r);return i=L.runKernel(ji,{x:i},a),o=L.runKernel(ji,{x:o},a),e&&(o=Ke(o)),ra(i,o)}):L.runKernel(ji,s,a)}}),$I=O({movingAverage_:function(n,t,e,r,s=!0){const a=S(n,"v","movingAverage"),i=S(t,"x","movingAverage"),o=S(e,"decay","movingAverage");var u,c;I((u=a).dtype===(c=i).dtype,()=>`The dtypes of the first(${u.dtype}) and second(${c.dtype}) input must match`),I(he(a.shape,i.shape),()=>"Shape mismatch in v and x");const l=Qt(1),h=Ot(l,o);let p=M(Ot(i,a),h);if(s){I(null!=r,()=>"When using zeroDebias: true, step is required.");const d=S(r,"step","movingAverage");p=Bt(p,Ot(l,pa(o,d)))}return yt(a,p)}});function vy(n,t,e){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${n}, sliceDim: ${r}, and batchDim: ${s}.`;if(e.rank<s)throw new Error(a+` update.rank < ${s}. `);if(n.length<r+(e.rank-s))throw new Error(a+` Output shape length < ${r+(e.rank-s)}`);if(e.rank!==s+n.length-r)throw new Error(a+" update.rank != "+(s+n.length-r));for(let i=0;i<s;++i)if(e.shape[i]!==t.shape[i])throw new Error(a+` updates.shape[${i}] (${e.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<e.rank-s;++i)if(e.shape[i+s]!==n[i+r])throw new Error(a+` updates.shape[${i+s}] (${e.shape[i+s]}) != shape[${i+s}] (${n[i+s]})`)}function ky(n,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(0===e.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===n.size)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}vy(e,t,n)}function ql(n,t,e){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=e.length;let i=1;for(let u=s;u<a;++u)i*=e[u];const o=s<1?1:s;return{sliceRank:s,numUpdates:nt(t.shape)/o,sliceSize:i,strides:[...jt(e.slice(0,s)),1],outputSize:nt(e)}}const EI=O({scatterND_:function(n,t,e){const r=S(n,"indices","scatterND","int32"),s=S(t,"updates","scatterND");return ky(s,r,e),L.runKernel(Dp,{indices:r,updates:s},{shape:e})}}),RI=O({sparseToDense_:function(n,t,e,r=0){const s=S(n,"sparseIndices","sparseToDense","int32"),a=S(t,"sparseValues","sparseToDense","string_or_numeric"),i=S(r,"defaultValue","sparseToDense",a.dtype);return function(c,l,h,p){if("int32"!==c.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${c.dtype}.`);if(c.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${c.shape}.`);const d=c.rank>0?c.shape[0]:1,f=c.rank>1?c.shape[1]:1;if(h.length!==f)throw new Error(`outputShape has incorrect number of elements:, ${h.length}, should be: ${f}.`);if(0!==l.rank&&(1!==l.rank||l.size!==d))throw new Error(`sparseValues has incorrect shape ${l.shape}, should be [] or [${d}]`);if(l.dtype!==p.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,e,i),L.runKernel(Pp,{sparseIndices:s,sparseValues:a,defaultValue:i},{outputShape:e})}}),AI=O({gatherND_:function(n,t){const e=S(t,"indices","gatherND","int32"),r={params:S(n,"x","gatherND","string_or_numeric"),indices:e};return L.runKernel(tl,r)}}),Iy=O({dropout_:function(n,t,e,r){const s=S(n,"x","dropout");if(I("float32"===s.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`),I(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return n instanceof Se?s.clone():s;const a=function(u,c){if(null==c)return u.shape.slice();if(he(u.shape,c))return c;if(u.shape.length===c.length){const l=[];for(let h=0;h<u.shape.length;h++)l.push(null==c[h]&&null!=u.shape[h]?u.shape[h]:c[h]);return l}return c}(s,e),i=1-t,o=Bt(Pl(yt(Vl(a,0,1,"float32",r),i)),i);return M(s,o)}});function Ny(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function rf(n,t,e){const r=1-n%2,s=new Float32Array(n);for(let a=0;a<n;++a){const i=2*Math.PI*a/(n+r-1);s[a]=t-e*Math.cos(i)}return on(s,"float32")}const FI=async function(n,t,e=1){const r=S(n,"predictions","inTopK"),s=S(t,"targets","inTopK");I(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),I(r.rank-1===s.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`),Ae(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];I(e>0&&e<=a,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${e}`);const i=await r.data(),o=await s.data(),[u,c]=[i.length/a,a],l=cn("bool",u);for(let h=0;h<u;h++){const p=h*c,d=i.subarray(p,p+c),f=[];for(let m=0;m<d.length;m++)f.push({value:d[m],index:m});f.sort((m,g)=>g.value-m.value),l[h]=0;for(let m=0;m<e;m++)if(f[m].index===o[h]){l[h]=1;break}}return n!==r&&r.dispose(),t!==s&&s.dispose(),Kr(l,s.shape,"bool")},sf=O({conv2DBackpropFilter_:function(n,t,e,r,s,a="NHWC",i){let o=n;3===n.rank&&(o=P(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=t;3===u.rank&&(u=P(t,[1,t.shape[0],t.shape[1],t.shape[2]])),I(4===o.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),I(4===u.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),I(4===e.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const c="NHWC"===a?o.shape[3]:o.shape[1],l="NHWC"===a?u.shape[3]:u.shape[1];return I(c===e[2],()=>`Error in conv2dDerFilter: depth of input ${c}) must match input depth in filter (${e[2]}.`),I(l===e[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${e[3]}).`),Gn("conv2dDerFilter",s,i),L.runKernel(Xo,{x:o,dy:u},{strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:e})}});function nh(n,t,e){if(null==e||"linear"===e)return n;if("relu"===e)return M(n,oo(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function rh(n,t){let e=t;const r=fn(n.shape,t.shape);return r.length>0&&(e=Vt(e,r)),P(e,n.shape)}function sh(n,t,e,r){if("linear"===t)return n;if("relu"===t)return ps(n);if("elu"===t)return Ll(n);if("relu6"===t)return Gd(n);if("prelu"===t)return Yc(n,e);if("leakyrelu"===t)return Gc(n,r);if("sigmoid"===t)return Xr(n);throw new Error(`Unknown fused activation ${t}.`)}const ah=(n,t)=>!(n>0)||"linear"===t,Sy=O({fusedConv2d_:function({x:n,filter:t,strides:e,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(!1===ah(L.state.gradientDepth,u=u||"linear")){I("NHWC"===s,()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let N=ca(n,t,e,r,s,a,i);return null!=o&&(N=yt(N,o)),sh(N,u,c,l)}const h=S(n,"x","conv2d","float32"),p=S(t,"filter","conv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=P(h,[1,h.shape[0],h.shape[1],h.shape[2]])),I(4===d.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`),I(4===p.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`),Gn("fused conv2d",r,i);const m="NHWC"===s?d.shape[3]:d.shape[1];I(p.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${p.shape[2]}.`),I(Fn(e,a),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`);const g=Nn(d.shape,p.shape,e,a,r,i);let y,b;if(null!=o&&(y=S(o,"bias","fused conv2d"),[y]=nn(y,h),"NHWC"===s?de(g.outShape,y.shape):(I(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),I(0===y.shape.length||y.shape[0]===g.outChannels||1===y.shape[0],()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`))),null!=c){const N=c.shape;if(I(N.length<=1||3===N.length,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${N.length}.`),1===N.length)I(1===N[0]||N[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${N}) is not compatible with the number of output channels (${g.outChannels}).`);else if(3===N.length)try{de(N,g.outShape)}catch{throw Error(`Error in fused conv2d: PReLU activation weights (${N}) is not compatible with the output shape of the conv2d (${g.outShape}).`)}b=S(c,"prelu weights","fused conv2d")}const x=(N,$)=>{I("NHWC"===s,()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`);const[C,R,A,_]=$,z=nh(N,A,u);I(ua(a),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`);const V=[Ed(R.shape,z,C,e,r),sf(R,z,C.shape,e,r)];if(null!=_){const X=rh(_,z);V.push(X)}return V},w={x:d,filter:p,bias:y,preluActivationWeights:b},k={strides:e,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:l};return null==o?Ts(($,C,R)=>{let A=L.runKernel(Ic,w,k);return R([C,$,A]),f&&(A=P(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:x}})(d,p):Ts(($,C,R,A)=>{let _=L.runKernel(Ic,w,k);return A([C,$,_,R]),f&&(_=P(_,[_.shape[1],_.shape[2],_.shape[3]])),{value:_,gradFunc:x}})(d,p,y)}}),Ty=O({depthwiseConv2dNativeBackpropFilter_:function(n,t,e,r,s,a=[1,1],i){let o=n;3===n.rank&&(o=P(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=t;return 3===u.rank&&(u=P(t,[1,t.shape[0],t.shape[1],t.shape[2]])),L.runKernel(Wa,{x:o,dy:u},{strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:e})}}),Cy=O({depthwiseConv2dNativeBackpropInput_:function(n,t,e,r,s,a=[1,1],i){let o=t,u=!1;3===t.rank&&(u=!0,o=P(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h=L.runKernel(Jo,{dy:o,filter:e},{strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:n});return u?P(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),DI=O({fusedDepthwiseConv2d_:function({x:n,filter:t,strides:e,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:c,leakyreluAlpha:l}){if(!1===ah(L.state.gradientDepth,u)){let k=Ml(n,t,e,r,s,a,i);return null!=o&&(k=yt(k,o)),sh(k,u,c,l)}const h=S(n,"x","depthwiseConv2d","float32"),p=S(t,"filter","depthwiseConv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=P(h,[1,h.shape[0],h.shape[1],h.shape[2]])),I(4===d.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),I(4===p.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),I(d.shape[3]===p.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),null==a&&(a=[1,1]),I(Fn(e,a),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${a}'`),Gn("fused depthwiseConv2d",r,i);const m=Nn(d.shape,p.shape,e,a,r,i,!0);let g,y;null!=o&&(g=S(o,"bias","fused conv2d"),[g]=nn(g,h),de(m.outShape,g.shape)),null!=c&&(y=S(c,"prelu weights","fused depthwiseConv2d"));const b=(k,N)=>{I(ua(a),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`);const[$,C,R,A]=N,_=nh(k,R,u),z=Cy(C.shape,_,$,e,r,a,i),V=Ty(C,_,$.shape,e,r,a,i);return null!=A?[z,V,rh(g,_)]:[z,V]},x={x:d,filter:p,bias:g,preluActivationWeights:y},w={strides:e,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:l};return null==o?Ts((N,$,C)=>{let R=L.runKernel(Nc,x,w);return C([$,N,R]),f&&(R=P(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:b}})(d,p):Ts((N,$,C,R)=>{let A=L.runKernel(Nc,x,w);return R([$,N,A,C]),f&&(A=P(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:b}})(d,p,g)}}),af=O({fusedMatMul_:function({a:n,b:t,transposeA:e=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===ah(L.state.gradientDepth,a)){let A=Ie(n,t,e,r);return null!=s&&(A=yt(A,s)),sh(A,a,i,o)}let u=S(n,"a","fused matMul"),c=S(t,"b","fused matMul");[u,c]=nn(u,c);const l=e?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?c.shape[c.rank-1]:c.shape[c.rank-2],p=e?u.shape[u.rank-1]:u.shape[u.rank-2],d=r?c.shape[c.rank-2]:c.shape[c.rank-1],f=u.shape.slice(0,-2),m=c.shape.slice(0,-2),g=nt(f),y=nt(m);I(l===h,()=>`Error in fused matMul: inner shapes (${l}) and (${h}) of Tensors with shapes ${u.shape} and ${c.shape} and transposeA=${e} and transposeB=${r} must match.`);const b=de(u.shape.slice(0,-2),c.shape.slice(0,-2)).concat([p,d]),x=P(u,e?[g,l,p]:[g,p,l]),w=P(c,r?[y,d,h]:[y,h,d]);let k,N;null!=s&&(k=S(s,"bias","fused matMul"),[k]=nn(k,u),de(b,k.shape)),null!=i&&(N=S(i,"prelu weights","fused matMul"));const $=(A,_)=>{const[z,V,X,J]=_,Y=nh(P(A,X.shape),X,a);let et,rt;return e||r?!e&&r?(et=Ie(Y,V,!1,!1),rt=Ie(Y,z,!0,!1)):e&&!r?(et=Ie(V,Y,!1,!0),rt=Ie(z,Y,!1,!1)):(et=Ie(V,Y,!0,!0),rt=Ie(Y,z,!0,!0)):(et=Ie(Y,V,!1,!0),rt=Ie(z,Y,!0,!1)),null!=s?[et,rt,rh(J,Y)]:[et,rt]},C={a:x,b:w,bias:k,preluActivationWeights:N},R={transposeA:e,transposeB:r,activation:a,leakyreluAlpha:o};return null==s?Ts((_,z,V)=>{const X=L.runKernel(kc,C,R);return V([_,z,X]),{value:P(X,b),gradFunc:$}})(x,w):Ts((_,z,V,X)=>{const J=L.runKernel(kc,C,R);return X([_,z,J,V]),{value:P(J,b),gradFunc:$}})(x,w,k)}}),_I=O({hammingWindow_:function(n){return rf(n,.54,.46)}}),$y=O({hannWindow_:function(n){return rf(n,.5,.5)}}),Ey=O({frame_:function(n,t,e,r=!1,s=0){let a=0;const i=[];for(;a+t<=n.size;)i.push(ne(n,a,t)),a+=e;if(r)for(;a<n.size;){const o=a+t-n.size,u=je([ne(n,a,t-o),ro([o],s)]);i.push(u),a+=e}return 0===i.length?Rs([],[0,t]):P(je(i),[i.length,t])}}),OI=O({stft_:function(n,t,e,r,s=$y){null==r&&(r=Ny(t));const a=Ey(n,t,e),i=M(a,s(t));return eh(i,r)}}),MI=O({cropAndResize_:function(n,t,e,r,s="bilinear",a=0){const i=S(n,"image","cropAndResize"),o=S(t,"boxes","cropAndResize","float32"),u=S(e,"boxInd","cropAndResize","int32"),c=o.shape[0];return I(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),I(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${o.shape}.`),I(1===u.rank&&u.shape[0]===c,()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${o.shape}.`),I(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),I(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),I("bilinear"===s||"nearest"===s,()=>`method must be bilinear or nearest, but was ${s}`),L.runKernel(qs,{image:i,boxes:o,boxInd:u},{method:s,extrapolationValue:a,cropSize:r})}}),LI=O({flipLeftRight_:function(n){const t=S(n,"image","flipLeftRight","float32");return I(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`),L.runKernel(Oe,{image:t},{})}}),zI=O({grayscaleToRGB_:function(n){const t=S(n,"image","grayscaleToRGB"),e=t.rank-1,r=t.shape[e];I(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),I(1===r,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const s=new Array(t.rank);return s.fill(1,0,e),s[e]=3,_r(t,s)}}),PI=O({rotateWithOffset_:function(n,t,e=0,r=.5){const s=S(n,"image","rotateWithOffset","float32");return I(4===s.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`),L.runKernel(Xp,{image:s},{radians:t,fillValue:e,center:r})}});function lo(n,t,e,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=n.shape[0];return e=Math.min(e,i),I(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),I(2===n.rank,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),I(4===n.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),I(1===t.rank,()=>"scores must be a 1D tensor"),I(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),I(0<=a&&a<=1,()=>`softNmsSigma must be in [0, 1], but was '${a}'`),{maxOutputSize:e,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const BI=O({nonMaxSuppression_:function(n,t,e,r=.5,s=Number.NEGATIVE_INFINITY){const a=S(n,"boxes","nonMaxSuppression","float32"),i=S(t,"scores","nonMaxSuppression","float32"),o=lo(a,i,e,r,s),u={maxOutputSize:e=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return L.runKernel(Np,{boxes:a,scores:i},u)}});function WI(n,t,e){const r=function(u,c,l){let h=0,p=u.length,d=0,f=!1;for(;h<p;){d=h+(p-h>>>1);const m=l(c,u[d]);m>0?h=d+1:(p=d,f=!m)}return f?h:-h-1}(n,t,e||VI);n.splice(r<0?-(r+1):r,0,t)}function VI(n,t){return n>t?1:n<t?-1:0}function of(n,t,e,r,s){return cf(n,t,e,r,s,0)}function lf(n,t,e,r,s,a){return cf(n,t,e,r,s,0,!1,a,!0)}function uf(n,t,e,r,s,a){return cf(n,t,e,r,s,a,!0)}function cf(n,t,e,r,s,a,i=!1,o=!1,u=!1){const c=[];for(let g=0;g<t.length;g++)t[g]>s&&c.push({score:t[g],boxIndex:g,suppressBeginIndex:0});c.sort(Ry);const l=a>0?-.5/a:0,h=[],p=[];for(;h.length<e&&c.length>0;){const g=c.pop(),{score:y,boxIndex:b,suppressBeginIndex:x}=g;if(y<s)break;let w=!1;for(let k=h.length-1;k>=x;--k){const N=UI(n,b,h[k]);if(N>=r){w=!0;break}if(g.score=g.score*GI(r,l,N),g.score<=s)break}g.suppressBeginIndex=h.length,w||(g.score===y?(h.push(b),p.push(g.score)):g.score>s&&WI(c,g,Ry))}const d=h.length,f=e-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=p),u&&(m.validOutputs=d),m}function UI(n,t,e){const r=n.subarray(4*t,4*t+4),s=n.subarray(4*e,4*e+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(s[0],s[2]),l=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),d=(o-a)*(u-i),f=(h-c)*(p-l);if(d<=0||f<=0)return 0;const m=Math.max(a,c),g=Math.max(i,l),y=Math.min(o,h),b=Math.min(u,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function GI(n,t,e){const r=Math.exp(t*e*e);return e<=n?r:0}function Ry(n,t){return n.score-t.score||n.score===t.score&&t.boxIndex-n.boxIndex}const jI=O({nonMaxSuppressionWithScore_:function(n,t,e,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=S(n,"boxes","nonMaxSuppression"),o=S(t,"scores","nonMaxSuppression"),u=lo(i,o,e,r,s,a),l={maxOutputSize:e=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:a=u.softNmsSigma},h=L.runKernel(Tp,{boxes:i,scores:o},l);return{selectedIndices:h[0],selectedScores:h[1]}}}),KI=O({nonMaxSuppressionPadded_:function(n,t,e,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=S(n,"boxes","nonMaxSuppression"),o=S(t,"scores","nonMaxSuppression"),u=lo(i,o,e,r,s,null),h=L.runKernel(Sp,{boxes:i,scores:o},{maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:a});return{selectedIndices:h[0],validOutputs:h[1]}}}),Ay=O({resizeBilinear_:function(n,t,e=!1,r=!1){const s=S(n,"images","resizeBilinear");I(3===s.rank||4===s.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`),I(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),I(!1===r||!1===e,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let a=s,i=!1;3===s.rank&&(i=!0,a=P(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,c=L.runKernel(hc,{images:a},{alignCorners:e,halfPixelCenters:r,size:t});return i?P(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Fy=O({resizeNearestNeighbor_:function(n,t,e=!1,r=!1){const s=S(n,"images","resizeNearestNeighbor");I(3===s.rank||4===s.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`),I(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),I("float32"===s.dtype||"int32"===s.dtype,()=>"`images` must have `int32` or `float32` as dtype"),I(!1===r||!1===e,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let a=s,i=!1;3===s.rank&&(i=!0,a=P(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,c=L.runKernel(cc,{images:a},{alignCorners:e,halfPixelCenters:r,size:t});return i?P(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),YI=O({threshold_:function(n,t="binary",e=!1,r=.5){const s=S(n,"image","threshold"),a=s.shape[0]*s.shape[1];let i,o,u,c,l=M(on([r]),255);if(I(3===s.rank,()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`),I(3===s.shape[2]||1===s.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`),I("int32"===s.dtype||"float32"===s.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`),I("otsu"===t||"binary"===t,()=>`Method must be binary or otsu, but was ${t}`),3===s.shape[2]){[i,o,u]=pr(s,[1,1,1],-1);const p=M(i,.2989),d=M(o,.587),f=M(u,.114);c=yt(yt(p,d),f)}else c=n;"otsu"===t&&(l=function(p,d){let f,m,g,y,b,x,w=on([-1]),k=on([0]),N=on([0]);for(let $=0;$<p.size-1;$++){f=ne(p,0,$+1),m=ne(p,$+1),b=Bt(Vt(f),d),x=Bt(Vt(m),d);const C=Vt(M(f,Ul(0,f.size)));g=Bt(C,Vt(f));const R=ro(m.shape,f.size),A=yt(Ul(0,m.size),R),_=M(m,A);y=Bt(Vt(_),Vt(m));const z=Ot(g,y),V=Ot(g,y),X=M(b,x);N=M(M(X,z),V);const J=Ir(N,k);k=tr(J,N,k),w=tr(J,on([$]),w)}return w}(z0(Dt(Hd(c),"int32"),Kr([]),256),a));const h=e?Ja(c,l):Ir(c,l);return Dt(M(h,255),"int32")}}),ZI=O({transform_:function(n,t,e="nearest",r="constant",s=0,a){const i=S(n,"image","transform","float32"),o=S(t,"transforms","transform","float32");return I(4===i.rank,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),I(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),I(null==a||2===a.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`),L.runKernel(jp,{image:i,transforms:o},{interpolation:e,fillMode:r,fillValue:s,outputShape:a})}}),JI=O({bandPart_:function(n,t,e){I(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),I(e%1==0,()=>`bandPart(): numUpper must be an integer, got ${e}.`);const r=S(n,"a","bandPart");I(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const s=r.shape,[a,i]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(e<=i))throw new Error(`bandPart(): numUpper (${e}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),e<0&&(e=i);const o=P(Ul(0,a,1,"int32"),[-1,1]),u=Ul(0,i,1,"int32"),c=Ot(o,u),l=hs(Ja(c,Qt(+t,"int32")),Za(c,Qt(-e,"int32"))),h=gn([a,i],r.dtype);return P(Cr(Jr(P(r,[-1,a,i])).map(p=>tr(l,p,h))),s)}}),QI=O({gramSchmidt_:function(n){let t;if(Array.isArray(n)){t=!1,I(null!=n&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const s=n[0].shape[0];for(let a=1;a<n.length;++a)I(n[a].shape[0]===s,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[a].shape[0]} vs. ${s})`)}else t=!0,n=pr(n,n.shape[0],0).map(s=>dr(s,[0]));I(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const e=[],r=n;for(let s=0;s<n.length;++s)e.push(L.tidy(()=>{let a=r[s];if(s>0)for(let i=0;i<s;++i){const o=M(Vt(M(e[i],a)),e[i]);a=Ot(a,o)}return Bt(a,zl(a,"euclidean"))}));return t?Cr(e,0):e}});function Dy(n,t=!1){return L.tidy(()=>{I(2===n.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const e=n.shape[0],r=n.shape[1];let s=Od(e),a=Ss(n);const i=Rs([[1]],[1,1]);let o=Ss(i);const u=e>=r?r:e;for(let c=0;c<u;++c){const l=a,h=o,p=s;[o,a,s]=L.tidy(()=>{const d=ne(a,[c,c],[e-c,1]),f=zl(d),m=ne(a,[c,c],[1,1]),g=tr(Ir(m,0),Rs([[-1]]),Rs([[1]])),y=Ot(m,M(g,f)),b=Bt(d,y);o=1===b.shape[0]?Ss(i):je([i,ne(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);const x=Ke(Bt(Ie(g,y),f)),w=ne(a,[c,0],[e-c,r]),k=M(x,o),N=Te(o);if(0===c)a=Ot(w,Ie(k,Ie(N,w)));else{const R=Ot(w,Ie(k,Ie(N,w)));a=je([ne(a,[0,0],[c,r]),R],0)}const $=Te(k),C=ne(s,[0,c],[e,s.shape[1]-c]);if(0===c)s=Ot(C,Ie(Ie(C,o),$));else{const R=Ot(C,Ie(Ie(C,o),$));s=je([ne(s,[0,0],[e,c]),R],1)}return[o,a,s]}),ve([l,h,p])}return!t&&e>r&&(s=ne(s,[0,0],[e,r]),a=ne(a,[0,0],[r,r])),[s,a]})}const tN=O({qr_:function(n,t=!1){if(I(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),2===n.rank)return Dy(n,t);{const e=n.shape.slice(0,n.shape.length-2).reduce((i,o)=>i*o),r=Jr(P(n,[e,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),s=[],a=[];return r.forEach(i=>{const[o,u]=Dy(i,t);s.push(o),a.push(u)}),[P(Cr(s,0),n.shape),P(Cr(a,0),n.shape)]}}});var nr;!function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(nr||(nr={}));const As=O({computeWeightedLoss_:function(n,t,e=nr.SUM_BY_NONZERO_WEIGHTS){const r=S(n,"losses","computeWeightedLoss");let s=null;null!=t&&(s=S(t,"weights","computeWeightedLoss"));const a=null==s?r:M(r,s);if(e===nr.NONE)return a;if(e===nr.SUM)return Vt(a);if(e===nr.MEAN){if(null==s)return rn(a);{const i=r.size/s.size,o=Bt(Vt(a),Vt(s));return i>1?Bt(o,Qt(i)):o}}if(e===nr.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Bt(Vt(a),Qt(r.size));{const i=M(s,Sr(r.shape)),o=Dt(Vt(ao(i,Qt(0))),"float32");return Bt(Vt(a),o)}}throw Error(`Unknown reduction: ${e}`)}}),eN=O({absoluteDifference_:function(n,t,e,r=nr.SUM_BY_NONZERO_WEIGHTS){const s=S(n,"labels","absoluteDifference"),a=S(t,"predictions","absoluteDifference");let i=null;null!=e&&(i=S(e,"weights","absoluteDifference")),Ae(s.shape,a.shape,"Error in absoluteDifference: ");const o=mn(Ot(s,a));return As(o,i,r)}}),nN=O({cosineDistance_:function(n,t,e,r,s=nr.SUM_BY_NONZERO_WEIGHTS){const a=S(n,"labels","cosineDistance"),i=S(t,"predictions","cosineDistance");let o=null;null!=r&&(o=S(r,"weights","cosineDistance")),Ae(a.shape,i.shape,"Error in cosineDistance: ");const u=Qt(1),c=Ot(u,Vt(M(a,i),e,!0));return As(c,o,s)}}),rN=O({hingeLoss_:function(n,t,e,r=nr.SUM_BY_NONZERO_WEIGHTS){let s=S(n,"labels","hingeLoss");const a=S(t,"predictions","hingeLoss");let i=null;null!=e&&(i=S(e,"weights","hingeLoss")),Ae(s.shape,a.shape,"Error in hingeLoss: ");const o=Qt(1);s=Ot(M(Qt(2),s),o);const u=ps(Ot(o,M(s,a)));return As(u,i,r)}}),sN=O({huberLoss_:function(n,t,e,r=1,s=nr.SUM_BY_NONZERO_WEIGHTS){const a=S(n,"labels","huberLoss"),i=S(t,"predictions","huberLoss");let o=null;null!=e&&(o=S(e,"weights","huberLoss")),Ae(a.shape,i.shape,"Error in huberLoss: ");const u=Qt(r),c=mn(Ot(i,a)),l=Wl(c,u),h=Ot(c,l),p=yt(M(Qt(.5),Pe(l)),M(u,h));return As(p,o,s)}}),aN=O({logLoss_:function(n,t,e,r=1e-7,s=nr.SUM_BY_NONZERO_WEIGHTS){const a=S(n,"labels","logLoss"),i=S(t,"predictions","logLoss");let o=null;null!=e&&(o=S(e,"weights","logLoss")),Ae(a.shape,i.shape,"Error in logLoss: ");const u=Qt(1),c=Qt(r),l=Ke(M(a,Nr(yt(i,c)))),h=M(Ot(u,a),Nr(yt(Ot(u,i),c))),p=Ot(l,h);return As(p,o,s)}}),iN=O({meanSquaredError_:function(n,t,e,r=nr.SUM_BY_NONZERO_WEIGHTS){const s=S(n,"labels","meanSquaredError"),a=S(t,"predictions","meanSquaredError");let i=null;null!=e&&(i=S(e,"weights","meanSquaredError")),Ae(s.shape,a.shape,"Error in meanSquaredError: ");const o=Qd(s,a);return As(o,i,r)}}),oN=O({sigmoidCrossEntropy_:function(n,t,e,r=0,s=nr.SUM_BY_NONZERO_WEIGHTS){let a=S(n,"multiClassLabels","sigmoidCrossEntropy");const i=S(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=e&&(o=S(e,"weights","sigmoidCrossEntropy")),Ae(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const c=Qt(r),l=Qt(1),h=Qt(.5);a=yt(M(a,Ot(l,c)),M(h,c))}const u=function(c,l){const h=S(c,"labels","sigmoidCrossEntropyWithLogits"),p=S(l,"logits","sigmoidCrossEntropyWithLogits");Ae(h.shape,p.shape,"Error in sigmoidCrossEntropyWithLogits: ");const d=ps(p),f=M(p,h),m=Hc(kr(Ke(mn(p))));return yt(Ot(d,f),m)}(a,i);return As(u,o,s)}}),lN=O({softmaxCrossEntropy_:function(n,t,e,r=0,s=nr.SUM_BY_NONZERO_WEIGHTS){let a=S(n,"onehotLabels","softmaxCrossEntropy");const i=S(t,"logits","softmaxCrossEntropy");let o=null;if(null!=e&&(o=S(e,"weights","softmaxCrossEntropy")),Ae(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const c=Qt(r),l=Qt(1),h=Qt(a.shape[1]);a=yt(M(a,Ot(l,c)),Bt(c,h))}const u=function(c,l,h=-1){if(-1===h&&(h=l.rank-1),h!==l.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${l.rank} and dim was ${h}`);return Ts((d,f,m)=>{const g=zd(f,[h],!0),y=Ot(Dt(f,"float32"),g);m([d,y]);const b=Ke(M(y,d));return{value:Vt(b,[h]),gradFunc:(x,w)=>{const[k,N]=w,$=sn(x.shape,[h]);return[M(P(x,$),Ot(Dt(k,"float32"),kr(N))),M(P(x,$),Ot(kr(N),Dt(k,"float32")))]}}})(c,l)}(a,i);return As(u,o,s)}}),uN=O({sparseFillEmptyRows_:function(n,t,e,r){const s=S(n,"indices","sparseFillEmptyRows","int32"),a=S(t,"values","sparseFillEmptyRows"),i=S(e,"denseShape","sparseFillEmptyRows","int32"),o=S(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const c=L.runKernel(Op,{indices:s,values:a,denseShape:i,defaultValue:o});return{outputIndices:c[0],outputValues:c[1],emptyRowIndicator:c[2],reverseIndexMap:c[3]}}}),cN=O({sparseReshape_:function(n,t,e){const r=S(n,"inputIndices","sparseReshape","int32"),s=S(t,"inputShape","sparseReshape","int32"),a=S(e,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const o=L.runKernel(Mp,{inputIndices:r,inputShape:s,newShape:a});return{outputIndices:o[0],outputShape:o[1]}}}),hN=O({sparseSegmentMean_:function(n,t,e){const r=S(n,"data","sparseSegmentMean"),s=S(t,"indices","sparseSegmentMean","int32"),a=S(e,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);return L.runKernel(Lp,{data:r,indices:s,segmentIds:a})}}),pN=O({sparseSegmentSum_:function(n,t,e){const r=S(n,"data","sparseSegmentSum"),s=S(t,"indices","sparseSegmentSum","int32"),a=S(e,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);return L.runKernel(zp,{data:r,indices:s,segmentIds:a})}}),dN=O({stringNGrams_:function(n,t,e,r,s,a,i,o){const u=S(n,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const c=S(t,"dataSplits","stringNGrams");if("int32"!==c.dtype)throw new Error("Data splits must be of datatype int32");const p=L.runKernel(Vp,{data:u,dataSplits:c},{separator:e,nGramWidths:r,leftPad:s,rightPad:a,padWidth:i,preserveShortSequences:o});return{nGrams:p[0],nGramsSplits:p[1]}}}),fN=O({stringSplit_:function(n,t,e=!0){const r=S(n,"input","stringSplit","string"),s=S(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const o=L.runKernel(Up,{input:r,delimiter:s},{skipEmpty:e});return{indices:o[0],values:o[1],shape:o[2]}}}),mN=O({stringToHashBucketFast_:function(n,t){const e=S(n,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");return L.runKernel(Gp,{input:e},r)}}),gN={fft:th,ifft:jl,rfft:eh,irfft:Jd},yN={hammingWindow:_I,hannWindow:$y,frame:Ey,stft:OI},Qr={flipLeftRight:LI,grayscaleToRGB:zI,resizeNearestNeighbor:Fy,resizeBilinear:Ay,rotateWithOffset:PI,cropAndResize:MI,nonMaxSuppression:BI,nonMaxSuppressionAsync:async function(n,t,e,r=.5,s=Number.NEGATIVE_INFINITY){const a=S(n,"boxes","nonMaxSuppressionAsync"),i=S(t,"scores","nonMaxSuppressionAsync"),o=lo(a,i,e,r,s);e=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u=await Promise.all([a.data(),i.data()]),c=u[0],l=u[1],{selectedIndices:h}=of(c,l,e,r,s);return a!==n&&a.dispose(),i!==t&&i.dispose(),on(h,"int32")},nonMaxSuppressionWithScore:jI,nonMaxSuppressionWithScoreAsync:async function(n,t,e,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=S(n,"boxes","nonMaxSuppressionAsync"),o=S(t,"scores","nonMaxSuppressionAsync"),u=lo(i,o,e,r,s,a);e=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const c=await Promise.all([i.data(),o.data()]),l=c[0],h=c[1],{selectedIndices:p,selectedScores:d}=uf(l,h,e,r,s,a);return i!==n&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:on(p,"int32"),selectedScores:on(d)}},nonMaxSuppressionPadded:KI,nonMaxSuppressionPaddedAsync:async function(n,t,e,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=S(n,"boxes","nonMaxSuppressionAsync"),o=S(t,"scores","nonMaxSuppressionAsync"),u=lo(i,o,e,r,s,null),c=u.maxOutputSize,l=u.iouThreshold,h=u.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=lf(p,d,c,l,h,a);return i!==n&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:on(f,"int32"),validOutputs:Qt(m,"int32")}},threshold:YI,transform:ZI},_y={bandPart:JI,gramSchmidt:QI,qr:tN},bN={absoluteDifference:eN,computeWeightedLoss:As,cosineDistance:nN,hingeLoss:rN,huberLoss:sN,logLoss:aN,meanSquaredError:iN,sigmoidCrossEntropy:oN,softmaxCrossEntropy:lN},xN={sparseFillEmptyRows:uN,sparseReshape:cN,sparseSegmentMean:hN,sparseSegmentSum:pN},wN={stringNGrams:dN,stringSplit:fN,stringToHashBucketFast:mN};class hf extends oa{constructor(t,e,r=null){super(),this.learningRate=t,this.rho=e,this.epsilon=r,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==r&&(this.epsilon=L.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(e=>e.name):Object.keys(t)).forEach((e,r)=>{const s=L.registeredVariables[e];null==this.accumulatedGrads[r]&&(this.accumulatedGrads[r]={originalName:`${e}/accum_grad`,variable:K(()=>$e(s).variable(!1))}),null==this.accumulatedUpdates[r]&&(this.accumulatedUpdates[r]={originalName:`${e}/accum_var`,variable:K(()=>$e(s).variable(!1))});const a=Array.isArray(t)?t[r].tensor:t[e];if(null==a)return;const i=this.accumulatedGrads[r].variable,o=this.accumulatedUpdates[r].variable;K(()=>{const u=yt(M(i,this.rho),M(Pe(a),1-this.rho)),c=M(Bt(Pn(yt(o,this.epsilon)),Pn(yt(i,this.epsilon))),a),l=yt(M(o,this.rho),M(Pe(c),1-this.rho));i.assign(u),o.assign(l);const h=yt(M(c,-this.learningRate),s);s.assign(h)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(ve(this.accumulatedGrads.map(t=>t.variable)),ve(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){const e=(t=await this.extractIterations(t)).length/2;this.accumulatedGrads=t.slice(0,e).map(r=>({originalName:r.name,variable:r.tensor.variable(!1)})),this.accumulatedUpdates=t.slice(e,2*e).map(r=>({originalName:r.name,variable:r.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}hf.className="Adadelta",bt(hf);class pf extends oa{constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(e=>e.name):Object.keys(t)).forEach((e,r)=>{const s=L.registeredVariables[e];null==this.accumulatedGrads[r]&&(this.accumulatedGrads[r]={originalName:`${e}/accumulator`,variable:K(()=>ro(s.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(t)?t[r].tensor:t[e];if(null==a)return;const i=this.accumulatedGrads[r].variable;K(()=>{const o=yt(i,Pe(a));i.assign(o);const u=yt(M(Bt(a,Pn(yt(o,L.backend.epsilon()))),-this.learningRate),s);s.assign(u)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&ve(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t),this.accumulatedGrads=t.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}pf.className="Adagrad",bt(pf);class df extends oa{constructor(t,e,r,s=null){super(),this.learningRate=t,this.beta1=e,this.beta2=r,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],K(()=>{this.accBeta1=Qt(e).variable(),this.accBeta2=Qt(r).variable()}),null==s&&(this.epsilon=L.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(r=>r.name):Object.keys(t);K(()=>{const r=Ot(1,this.accBeta1),s=Ot(1,this.accBeta2);e.forEach((a,i)=>{const o=L.registeredVariables[a];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:`${a}/m`,variable:K(()=>$e(o).variable(!1))}),null==this.accumulatedSecondMoment[i]&&(this.accumulatedSecondMoment[i]={originalName:`${a}/v`,variable:K(()=>$e(o).variable(!1))});const u=Array.isArray(t)?t[i].tensor:t[a];if(null==u)return;const c=this.accumulatedFirstMoment[i].variable,l=this.accumulatedSecondMoment[i].variable,h=yt(M(c,this.beta1),M(u,1-this.beta1)),p=yt(M(l,this.beta2),M(Pe(u),1-this.beta2)),d=Bt(h,r),f=Bt(p,s);c.assign(h),l.assign(p);const m=yt(M(Bt(d,yt(Pn(f),this.epsilon)),-this.learningRate),o);o.assign(m)}),this.accBeta1.assign(M(this.accBeta1,this.beta1)),this.accBeta2.assign(M(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ve(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedSecondMoment&&ve(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t),K(()=>{this.accBeta1.assign(pa(this.beta1,this.iterations_+1)),this.accBeta2.assign(pa(this.beta2,this.iterations_+1))});const e=t.length/2;this.accumulatedFirstMoment=t.slice(0,e).map(r=>({originalName:r.name,variable:r.tensor.variable(!1)})),this.accumulatedSecondMoment=t.slice(e,2*e).map(r=>({originalName:r.name,variable:r.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}df.className="Adam",bt(df);class ff extends oa{constructor(t,e,r,s=null,a=0){super(),this.learningRate=t,this.beta1=e,this.beta2=r,this.epsilon=s,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],K(()=>{this.iteration=Qt(0).variable(),this.accBeta1=Qt(e).variable()}),null==s&&(this.epsilon=L.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(r=>r.name):Object.keys(t);K(()=>{const r=Ot(1,this.accBeta1),s=Bt(-this.learningRate,yt(M(this.iteration,this.decay),1));e.forEach((a,i)=>{const o=L.registeredVariables[a];null==this.accumulatedFirstMoment[i]&&(this.accumulatedFirstMoment[i]={originalName:`${a}/m`,variable:$e(o).variable(!1)}),null==this.accumulatedWeightedInfNorm[i]&&(this.accumulatedWeightedInfNorm[i]={originalName:`${a}/v`,variable:$e(o).variable(!1)});const u=Array.isArray(t)?t[i].tensor:t[a];if(null==u)return;const c=this.accumulatedFirstMoment[i].variable,l=this.accumulatedWeightedInfNorm[i].variable,h=yt(M(c,this.beta1),M(u,1-this.beta1)),p=M(l,this.beta2),d=mn(u),f=Es(p,d);c.assign(h),l.assign(f);const m=yt(M(Bt(s,r),Bt(h,yt(f,this.epsilon))),o);o.assign(m)}),this.iteration.assign(yt(this.iteration,1)),this.accBeta1.assign(M(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ve(this.accumulatedFirstMoment.map(t=>t.variable)),null!=this.accumulatedWeightedInfNorm&&ve(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}ff.className="Adamax",bt(ff);class ih extends oa{constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(e=>e.name):Object.keys(t)).forEach((e,r)=>{const s=Array.isArray(t)?t[r].tensor:t[e];if(null==s)return;const a=L.registeredVariables[e];K(()=>{const i=yt(M(this.c,s),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=An(Qt(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(0!==(t=await this.extractIterations(t)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}ih.className="SGD",bt(ih);class mf extends ih{constructor(t,e,r=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=r,this.accumulations=[],this.m=Qt(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(e=>e.name):Object.keys(t)).forEach((e,r)=>{const s=L.registeredVariables[e];null==this.accumulations[r]&&(this.accumulations[r]={originalName:`${e}/momentum`,variable:K(()=>$e(s).variable(!1))});const a=this.accumulations[r].variable,i=Array.isArray(t)?t[r].tensor:t[e];null!=i&&K(()=>{let o;const u=yt(M(this.m,a),i);o=yt(M(this.c,this.useNesterov?yt(i,M(u,this.m)):u),s),a.assign(u),s.assign(o)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&ve(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t),this.accumulations=t.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}mf.className="Momentum",bt(mf);class gf extends oa{constructor(t,e=.9,r=0,s=null,a=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=r,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==s&&(this.epsilon=L.backend.epsilon()),null==t)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(e=>e.name):Object.keys(t)).forEach((e,r)=>{const s=L.registeredVariables[e],a=!1;null==this.accumulatedMeanSquares[r]&&(this.accumulatedMeanSquares[r]={originalName:`${e}/rms`,variable:K(()=>$e(s).variable(a))}),null==this.accumulatedMoments[r]&&(this.accumulatedMoments[r]={originalName:`${e}/momentum`,variable:K(()=>$e(s).variable(a))}),null==this.accumulatedMeanGrads[r]&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${e}/mg`,variable:K(()=>$e(s).variable(a))});const i=Array.isArray(t)?t[r].tensor:t[e];if(null==i)return;const o=this.accumulatedMeanSquares[r].variable,u=this.accumulatedMoments[r].variable;K(()=>{const c=yt(M(o,this.decay),M(Pe(i),1-this.decay));if(this.centered){const l=this.accumulatedMeanGrads[r].variable,h=yt(M(l,this.decay),M(i,1-this.decay)),p=Bt(M(i,this.learningRate),Pn(Ot(c,yt(Pe(h),this.epsilon)))),d=yt(M(u,this.momentum),p);o.assign(c),l.assign(h),u.assign(d);const f=Ot(s,d);s.assign(f)}else{const l=yt(M(o,this.decay),M(Pe(i),1-this.decay)),h=yt(M(u,this.momentum),Bt(M(i,this.learningRate),Pn(yt(l,this.epsilon))));o.assign(l),u.assign(h);const p=Ot(s,h);s.assign(p)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&ve(this.accumulatedMeanSquares.map(t=>t.variable)),null!=this.accumulatedMeanGrads&&this.centered&&ve(this.accumulatedMeanGrads.map(t=>t.variable)),null!=this.accumulatedMoments&&ve(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,r=!1;this.accumulatedMeanSquares=t.slice(0,e).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.accumulatedMoments=t.slice(e,2*e).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map(s=>({originalName:s.name,variable:s.tensor.variable(r)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}gf.className="RMSProp",bt(gf);class Qa{static sgd(t){return new ih(t)}static momentum(t,e,r=!1){return new mf(t,e,r)}static rmsprop(t,e=.9,r=0,s=null,a=!1){return new gf(t,e,r,s,a)}static adam(t=.001,e=.9,r=.999,s=null){return new df(t,e,r,s)}static adadelta(t=.001,e=.95,r=null){return new hf(t,e,r)}static adamax(t=.002,e=.9,r=.999,s=null,a=0){return new ff(t,e,r,s,a)}static adagrad(t,e=.1){return new pf(t,e)}}const uo={sgd:Qa.sgd,momentum:Qa.momentum,adadelta:Qa.adadelta,adagrad:Qa.adagrad,rmsprop:Qa.rmsprop,adamax:Qa.adamax,adam:Qa.adam},vN=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function Oy(){return new Promise(n=>vN(()=>n()))}function yf(n,t){const e=n[0].length;n.forEach((s,a)=>{I(s.length===e,()=>`Error in concat${e}D: rank of tensors[${a}] must be the same as the rank of the rest (${e})`)}),I(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const r=n[0];n.forEach((s,a)=>{for(let i=0;i<e;i++)I(i===t||s[i]===r[i],()=>`Error in concat${e}D: Shape of tensors[${a}] (${s}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function ds(n,t){const e=n[0].slice();for(let r=1;r<n.length;r++)e[t]+=n[r][t];return e}var ts;function My(n,t,e){let r=new Array;if(null==e&&null==t)return r;if(null==t)for(;r.length<n+e.length;)r.push(-1);else r=t.slice();if(null==e)return r;if(n+e.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${n+e.length}, but shape.rank = ${r.length}`);for(let s=1;s<e.length;++s){const a=e[s],i=r[r.length-e.length+s],o=r[i];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+n}] = ${a} but shape[${s+n}] = ${o}`)}else r[i]=a}return r}function Ly(n){const t={FIRST_DIM_SIZE:ts.FIRST_DIM_SIZE,VALUE_ROWIDS:ts.VALUE_ROWIDS,ROW_LENGTHS:ts.ROW_LENGTHS,ROW_SPLITS:ts.ROW_SPLITS,ROW_LIMITS:ts.ROW_LIMITS,ROW_STARTS:ts.ROW_STARTS},e=[];for(const r of n){if(!(r in t))break;e.push(t[r])}return e}function zy(n){return 0===n.length?0:n[0]===ts.FIRST_DIM_SIZE?n.length-1:n.length}function Py(n,t){if(null==n||null==t)return;const e=n.length,r=t.length;if(e>=r)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(e,r-1);++s){const a=n[s],i=t[s+1];if(a>=0&&i>=0&&1!==a&&a!==i)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-n.length}] = ${a} but ragged tensor input.flatValues.shape[${s-n.length}] = ${i}`)}}!function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"}(ts||(ts={}));const bf=30;function oh(n){return n<=bf?n:Us(n,Math.floor(Math.sqrt(n)))}function xf(n,t,e){return[e*("number"==typeof n?n:n[0]),t*("number"==typeof n?n:n[1])]}function Kl(n,t,e,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(n[0]/e),s=s.concat(n.slice(1));else{s=s.concat(n[0]);const a=t.length;for(let i=0;i<a;++i)s=s.concat([n[i+1]/t[i],t[i]]);s=s.concat(n.slice(a+1))}return s}function Xl(n,t,e=!0){const r=[];if(e){r.push(t);for(let s=t+1;s<n;++s)s<=2*t?(r.push(s),r.push(s-(t+1))):r.push(s)}else{const s=[],a=[];for(let i=1;i<n;++i)i>=2*t+1||i%2==1?a.push(i):s.push(i);r.push(...s),r.push(0),r.push(...a)}return r}function Yl(n,t,e,r=!0){const s=[];s.push(r?n[0]/e:n[0]*e);for(let a=1;a<n.length;++a)s.push(a<=t.length?r?t[a-1]*n[a]:n[a]/t[a-1]:n[a]);return s}function wf(n,t){const e=[0];for(let r=0;r<t;++r)e.push(n[r][0]);return e}function vf(n,t,e){const r=n.slice(0,1);for(let s=0;s<e;++s)r.push(n[s+1]-t[s][0]-t[s][1]);return r}function kf(n,t){const e=n.shape.length,r=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${e}`);if(0===nt(n.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let h=0;h<s.length-1;++h)i*=s[h];const o=n.shape,u=s.slice();u.pop();let c=1;for(let h=a;h<e;++h)c*=o[h],u.push(o[h]);const l=[...jt(n.shape).map(h=>h/c),1].slice(0,a);return[u,i,c,l]}const lh=1.7580993408473768,uh=1.0507009873554805,If=.3275911,Nf=.254829592,Sf=-.284496736,Tf=1.421413741,Cf=-1.453152027,$f=1.061405429;function Fs(n,t){if(n.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${t.length}.`);const e=new Float32Array(2*n.length);for(let r=0;r<e.length;r+=2)e[r]=n[r/2],e[r+1]=t[r/2];return e}function By(n){const t=new Float32Array(n.length/2),e=new Float32Array(n.length/2);for(let r=0;r<n.length;r+=2)t[r/2]=n[r],e[r/2]=n[r+1];return{real:t,imag:e}}function Wy(n){const t=Math.ceil(n.length/4),e=new Float32Array(t),r=new Float32Array(t);for(let s=0;s<n.length;s+=4)e[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:e,imag:r}}function Vy(n){const t=Math.floor(n.length/4),e=new Float32Array(t),r=new Float32Array(t);for(let s=2;s<n.length;s+=4)e[Math.floor(s/4)]=n[s],r[Math.floor(s/4)]=n[s+1];return{real:e,imag:r}}function Ef(n,t){return{real:n[2*t],imag:n[2*t+1]}}function Uy(n,t,e,r){n[2*r]=t,n[2*r+1]=e}function Gy(n,t){const e=new Float32Array(n/2),r=new Float32Array(n/2);for(let s=0;s<Math.ceil(n/2);s++){const a=(t?2:-2)*Math.PI*(s/n);e[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:e,imag:r}}function Hy(n,t,e){const r=(e?2:-2)*Math.PI*(n/t);return{real:Math.cos(r),imag:Math.sin(r)}}const kN=/->/g;function Af(n,t){const e=((n=n.replace(/\s/g,"")).length-n.replace(kN,"").length)/"->".length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=n.split("->");I(-1===r.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');const a=r.split(","),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let h=0;h<s.length;++h){const p=s[h];if(!a.some(d=>-1!==d.indexOf(p)))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);-1===o.indexOf(p)&&o.push(p)}for(let h=0;h<r.length;++h){const p=r[h];-1===o.indexOf(p)&&","!==p&&o.push(p)}const u=new Array(a.length);for(let h=0;h<i;++h){if(new Set(a[h].split("")).size!==a[h].length)throw new Error(`Found duplicate axes in input component ${a[h]}. Support for duplicate axes in input is not implemented yet.`);u[h]=[];for(let p=0;p<a[h].length;++p)u[h].push(o.indexOf(a[h][p]))}const c=o.length,l=[];for(let h=s.length;h<c;++h)l.push(h);return{allDims:o,summedDims:l,idDims:u}}function Ff(n,t){let e=new Array(n);e.fill(-1);for(let s=0;s<t.length;++s)e[t[s]]=s;const r=[];for(let s=0;s<n;++s)-1===e[s]&&r.push(s);return e=e.filter(s=>-1!==s),{permutationIndices:e,expandDims:r}}function Df(n,t,e){const r=new Array(n);for(let s=0;s<e.length;++s){const a=e[s].shape;for(let i=0;i<t[s].length;++i)void 0===r[t[s][i]]?r[t[s][i]]=a[i]:I(r[t[s][i]]===a[i],()=>`Expected dimension ${r[t[s][i]]} at axis ${i} of input shaped ${JSON.stringify(a)}, but got dimension ${a[i]}`)}}function _f(n,t){const e=n,r=[];let s=0;0===n.length&&e.push(-1),s=n.length+1;for(let i=0;i<s;++i)r.push([]);const a=[];for(let i=0;i<e.length;++i){const o=IN(t,e[i]);for(const u of o)-1===a.indexOf(u)&&(r[i].push(u),a.push(u))}return{path:e,steps:r}}function Of(n){return n.every((t,e)=>t===e)}function IN(n,t){const e=[];for(let r=0;r<n.length;++r)0!==n[r].length&&-1===n[r].indexOf(t)&&-1!==t||e.push(r);return e}function Mf(n,t,e=0){let r=[];if("number"==typeof t)I(n.shape[e]%t==0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(n.shape[e]/t);else{I(t.reduce((i,o)=>(-1===o&&(i+=1),i),0)<=1,()=>"There should be only one negative value in split array.");const a=t.indexOf(-1);if(-1!==a){const i=t.reduce((o,u)=>u>0?o+u:o);t[a]=n.shape[e]-i}I(n.shape[e]===t.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function Ky(n){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${n}`}function Xy(n,t){return`indices(${n}, 0) is invalid: ${t} < 0`}function Yy(n,t,e){return`indices(${n}, 0) is invalid: ${t} >= ${e}`}function Zy(n,t){return`only one output dimension may be -1, not both ${n} and ${t}`}function Jy(n,t){return`size ${n} must be non-negative, not ${t}`}function NN(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Qy(n,t){return`Input to reshape is a SparseTensor with ${nt(n)}\n  dense values, but the requested shape requires a multiple of ${nt(t)}. inputShape=${n} outputShape= ${t}`}function t1(n,t){return`Input to reshape is a tensor with ${nt(n)} dense values, but the requested shape has ${nt(t)}. inputShape=${n} outputShape=${t}`}function SN(){return"segment ids must be >= 0"}function TN(){return"segment ids are not increasing"}function e1(n,t){return`Segment id ${n} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function n1(n,t,e){return`Bad: indices[${n}] == ${t} out of range [0, ${e})`}function r1(n,t){let e,r=!1;for(n<=bf?(e=n,r=!0):e=Us(n,Math.floor(Math.sqrt(n)));!r;)e>t||e===n?r=!0:e=Us(n,e+1);return e}function s1(n,t,e){const r=[],s=n.length;for(let a=0;a<s;a++)r.push(a!==t?n[a]:e);return r}function Lf(n,t,e,r){const s=t.shape.length,a=n.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(e<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${e}).`);for(let h=0;h<r;++h)if(n.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${n.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const i=n.shape[e],o=[];let u=1,c=1,l=1;for(let h=0;h<r;++h)o.push(n.shape[h]),u*=n.shape[h];for(let h=r;h<e;h++)o.push(n.shape[h]),c*=n.shape[h];for(let h=r;h<s;h++)o.push(t.shape[h]);for(let h=e+1;h<a;h++)o.push(n.shape[h]),l*=n.shape[h];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:i,outputShape:o}}function ti(n){try{return n.map(t=>ta(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function a1(n){return n.map(t=>Qs(t))}const i1={kernelName:Gs,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(n,oo(Dt(e,"float32"),-1))}}},CN={kernelName:Hs,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const r=Pe(Dt(e,"float32")),s=Pn(Ot(Qt(1),r));return Ke(Bt(n,s))}}}},$N={kernelName:Aa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const r=Pn(Ot(Pe(Dt(e,"float32")),1));return Bt(n,r)}}}},EN={kernelName:Jn,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,r]=t,s=de(e.shape,r.shape);return{a:()=>{let a=n;const i=fn(e.shape,s);return i.length>0&&(a=Vt(a,i)),P(a,e.shape)},b:()=>{let a=n;const i=fn(r.shape,s);return i.length>0&&(a=Vt(a,i)),P(a,r.shape)}}}},RN={kernelName:$i,saveAllInputs:!0,gradFunc:(n,t)=>{const e={};return t.forEach((r,s)=>{e[s]=()=>n.clone()}),e}},AN={kernelName:Ri,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>$e(e)}}},FN={kernelName:Ai,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>$e(e)}}},DN={kernelName:Fa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Bt(n,Pn(Ot(Qt(1),Pe(Dt(e,"float32")))))}}},_N={kernelName:Da,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const r=Pn(yt(Qt(1),Pe(Dt(e,"float32"))));return Bt(n,r)}}}},ON={kernelName:Ma,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,r]=t,s=de(e.shape,r.shape);return{a:()=>{const a=yt(Pe(e),Pe(r));let i=M(n,Bt(r,a));const o=fn(e.shape,s);return o.length>0&&(i=Vt(i,o)),P(i,e.shape)},b:()=>{const a=yt(Pe(e),Pe(r));let i=Ke(M(n,Bt(e,a)));const o=fn(r.shape,s);return o.length>0&&(i=Vt(i,o)),P(i,r.shape)}}}},MN={kernelName:_a,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Bt(n,yt(Pe(Dt(e,"float32")),1))}}},LN={kernelName:Oa,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Bt(n,Ot(Qt(1),Pe(Dt(e,"float32"))))}}},zN=O({avgPool3dGrad_:function(n,t,e,r,s,a){const i=S(n,"dy","avgPool3dGrad"),o=S(t,"input","avgPool3dGrad");let u=i,c=o,l=!1;4===o.rank&&(l=!0,u=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=P(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),I(5===u.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),I(5===c.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`),Gn("avgPool3dGrad",s,a);const d=L.runKernel(_i,{dy:u,input:c},{filterSize:e,strides:r,pad:s,dimRoundingMode:a});return l?P(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),PN={kernelName:Di,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=e;return{x:()=>zN(n,r,s,a,i,o)}}},BN=O({avgPoolGrad_:function(n,t,e,r,s){const a=S(n,"dy","avgPoolGrad"),i=S(t,"input","avgPoolGrad");I(i.rank===a.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`);let o=i,u=a,c=!1;3===i.rank&&(c=!0,o=P(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=P(a,[1,a.shape[0],a.shape[1],a.shape[2]])),I(4===u.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),I(4===o.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);const p=L.runKernel(Ho,{dy:u,input:o},{filterSize:e,strides:r,pad:s});return c?P(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),WN={kernelName:Fi,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=e;return{x:()=>BN(n,r,s,a,i)}}},VN={kernelName:Oi,inputsToSave:["a","b"],gradFunc:(n,t,e)=>{const[r,s]=t,{transposeA:a,transposeB:i}=e;return a||i?!a&&i?{a:()=>Ie(n,s,!1,!1),b:()=>Ie(n,r,!0,!1)}:a&&!i?{a:()=>Ie(s,n,!1,!0),b:()=>Ie(r,n,!1,!1)}:{a:()=>Ie(s,n,!0,!0),b:()=>Ie(n,r,!0,!0)}:{a:()=>Ie(n,s,!1,!0),b:()=>Ie(r,n,!0,!1)}}},UN={kernelName:Mi,gradFunc:(n,t,e)=>{const{blockShape:r,crops:s}=e;return{x:()=>Xc(n,r,s)}}},GN={kernelName:"BroadcastTo",gradFunc:(n,t,e)=>{const s=e.inputShape,a=e.shape,i=Array.from(a);for(let u=s.length-1;u>=0;u--)if(s[u]===a[u])i[u]=1;else if(1!==s[u])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let u=0;u<i.length;u++)i[u]>1&&o.push(u);return{x:()=>Vt(n,o,!0)}}},HN={kernelName:La,gradFunc:n=>({x:()=>n.clone()})},jN={kernelName:za,gradFunc:n=>({x:()=>$e(n)})},qN={kernelName:Pa,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=e;return{x:()=>tr(hs(Za(r,s),Ja(r,a)),n,$e(n))}}},KN={kernelName:Li,inputsToSave:["x"],gradFunc:i1.gradFunc},XN={kernelName:zi,saveAllInputs:!0,gradFunc:(n,t,e)=>{const r=t.map(o=>o.shape),{axis:s}=e,a=be(s,t[0].shape)[0],i=r.map(o=>o[a]);return pr(n,i,a).map(o=>()=>o)}},YN={kernelName:Pi,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:u}=e;return I(ua(a),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`),{x:()=>Ed(r.shape,n,s,i,o,u),filter:()=>sf(r,n,s.shape,i,o,u)}}},ZN={kernelName:Bi,inputsToSave:["dy","filter"],gradFunc:(n,t,e)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=e;return{dy:()=>ca(n,s,a,i,o,1,u),filter:()=>sf(n,r,s.shape,a,i,o,u)}}},JN=O({conv3DBackpropFilter_:function(n,t,e,r,s){let a=n;4===n.rank&&(a=P(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let i=t;return 4===i.rank&&(i=P(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),I(5===a.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`),I(5===i.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),I(5===e.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),I(a.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${e[3]}.`),I(i.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${e[4]}).`),L.runKernel(Yo,{x:a,dy:i},{strides:r,pad:s,filterShape:e})}}),QN={kernelName:Wi,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:r,strides:s,pad:a}=e;I(ua(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[i,o]=t;return{x:()=>G0(i.shape,n,o,s,a),filter:()=>JN(i,n,o.shape,s,a)}}},tS={kernelName:jr,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(Ke(Xd(Dt(e,"float32"))),n)}}},eS={kernelName:js,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(Yd(Dt(e,"float32")),n)}}},nS={kernelName:Ui,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=e;return{x:()=>{const o=tn([s],r.rank);let u=Fd(n,s,a,!i);return null!=o&&(u=Te(u,o)),u}}}},rS={kernelName:Gi,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=e,o=r??[1,1];I(ua(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[u,c]=t;return I(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),I(4===c.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`),I(u.shape[3]===c.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`),I(Fn(s,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`),Gn("depthwiseConv2d",a,i),{x:()=>Cy(u.shape,n,c,s,a,o,i),filter:()=>Ty(u,n,c.shape,s,a,o,i)}}},sS={kernelName:T,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[r,s]=t,a={x:r,filter:s,dy:n},i={x:r,filter:s,dy:n};return{x:()=>L.runKernel(F,a,e),filter:()=>L.runKernel(D,i,e)}}},aS={kernelName:Z,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t,r={dy:n,y:e};return{x:()=>L.runKernel(ht,r)}}},iS={kernelName:xt,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,r=M(kr(Ke(Pe(e))),2/Math.sqrt(Math.PI));return{x:()=>M(n,r)}}},oS={kernelName:Tt,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(n,e)}}},lS={kernelName:Lt,inputsToSave:["input"],gradFunc:(n,t)=>{const[e]=t;return{input:()=>P(n,e.shape)}}},uS={kernelName:qt,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(n,kr(e))}}},cS={kernelName:He,gradFunc:n=>({x:()=>$e(n)})},hS={kernelName:Qn,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,r]=t,s=de(e.shape,r.shape);return{a:()=>{const a=Bt(n,Dt(r,"float32")),i=fn(e.shape,s);return i.length>0?P(Vt(a,i),e.shape):a},b:()=>{let a=M(n,Dt(e,"float32"));const i=fn(r.shape,s);i.length>0&&(a=P(Vt(a,i),r.shape));const o=Pe(r);return Ke(Bt(a,Dt(o,"float32")))}}}},pS={kernelName:Ks,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,t,e)=>{const{varianceEpsilon:r}=e,[s,a,i,o]=t,u=o??Qt(1),c=fn(a.shape,s.shape),l=[];if(1===a.rank){for(let m=0;m<s.shape.length-1;++m)l.push(s.shape[m]);l.push(1)}const h=Ot(s,a),p=M(n,u),d=jd(yt(i,Qt(r))),f=M(M(M(d,d),d),Qt(-.5));return{x:()=>P(M(M(n,1===a.rank?_r(P(d,[1,1,1,a.shape[0]]),l):d),u),s.shape),mean:()=>{let m=M(M(d,Qt(-1)),p);return 1===a.rank&&(m=Vt(m,c)),P(m,a.shape)},variance:()=>{let m=M(M(f,h),p);return 1===a.rank&&(m=Vt(m,c)),P(m,a.shape)},scale:()=>{const m=M(h,d);let g=M(n,m);return 1===a.rank&&(g=Vt(g,c)),P(g,a.shape)},offset:()=>{let m=n;return 1===a.rank&&(m=Vt(m,c)),P(m,a.shape)}}}},dS={kernelName:Xs,inputsToSave:["x","indices"],gradFunc:(n,t,e)=>{const[r,s]=t,{axis:a}=e,i=be(a,r.shape)[0];return{x:()=>{const o=r.shape,u=s.size,c=o.slice(0,i),l=c.length,h=o.slice(a,o.length).slice(1),p=h.length,d=o1(0,l),f=o1(l+1,l+1+p),m=l1([c,[u],h]),g=P(n,m),y=P(s,[u]),b=l1([[l],d,f]),x=Te(g,b);let w=ef(x,y,r.shape[i]);const k=ha(b);return w=Te(w,k),w},indices:()=>s}}};function o1(n,t){const e=[];for(let r=n;r<t;++r)e.push(r);return e}function l1(n){const t=[];for(let e=0;e<n.length;++e)for(let r=0;r<n[e].length;++r)t.push(n[e][r]);return t}const fS={kernelName:Ys,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,r]=t;return{a:()=>$e(e),b:()=>$e(r)}}},mS={kernelName:el,gradFunc:n=>({x:()=>Dt(n,"float32")})},gS={kernelName:nl,gradFunc:n=>({x:()=>$e(n)})},yS={kernelName:rl,gradFunc:n=>({x:()=>$e(n)})},bS={kernelName:sl,gradFunc:n=>({x:()=>$e(n)})},xS={kernelName:Vu,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[r]=t,{alpha:s}=e,a=Ir(r,0);return{x:()=>tr(a,n,M(n,s))}}},wS={kernelName:il,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Bt(n,yt(e,1))}}},vS={kernelName:al,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Bt(n,Dt(e,"float32"))}}},kS={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[r]=t,{axis:s}=e;return{logits:()=>{const a=kr(r);return Ot(n,M(Vt(n,s,!0),a))}}}},IS=O({localResponseNormalizationBackprop_:function(n,t,e,r=5,s=1,a=1,i=.5){return L.runKernel(xp,{x:n,y:t,dy:e},{depthRadius:r,bias:s,alpha:a,beta:i})}}),NS={kernelName:Ku,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:u}=e;return{x:()=>IS(r,s,n,a,i,o,u)}}};function u1(n,t,e,r){return t.rank<e.rank&&(t=P(t,sn(t.shape,r))),n.rank<e.rank&&(n=P(n,sn(n.shape,r))),{x:()=>M(n,Dt(Yr(e,t),n.dtype))}}const c1={kernelName:Xu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const r=e,{reductionIndices:s}=r,a=t[0],i=u1(n,t[1],a,be(s,a.shape));return{x:()=>i.x()}}},SS={kernelName:ol,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,r]=t;return{a:()=>M(n,Dt(Za(e,r),"float32")),b:()=>M(n,Dt(Md(e,r),"float32"))}}},TS=O({maxPool3dGrad_:function(n,t,e,r,s,a,i){const o=S(n,"dy","maxPool3dGrad"),u=S(t,"input","maxPool3dGrad"),c=S(e,"output","maxPool3dGrad");let l=o,h=u,p=c,d=!1;4===u.rank&&(d=!0,l=P(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=P(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=P(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),I(5===l.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),I(5===h.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),I(5===p.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`),Gn("maxPool3dGrad",a,i);const g=L.runKernel(vp,{dy:l,input:h,output:p},{filterSize:r,strides:s,pad:a,dimRoundingMode:i});return d?P(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),CS={kernelName:Zu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=e;return{x:()=>TS(n,r,s,a,i,o,u)}}},$S=O({maxPoolGrad_:function(n,t,e,r,s,a,i){const o=S(n,"dy","maxPoolGrad"),u=S(t,"input","maxPoolGrad"),c=S(e,"output","maxPoolGrad");return I(u.rank===o.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`),I(4===o.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),I(4===u.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),Gn("maxPoolGrad",a,i),L.runKernel(wp,{dy:o,input:u,output:c},{filterSize:r,strides:s,pad:a,dimRoundingMode:i})}}),ES={kernelName:Yu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=e;return{x:()=>$S(n,r,s,a,i,o)}}},RS={kernelName:Ju,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[r]=t,{axis:s}=e,a=be(s,r.shape),i=nt(Sn(r.shape,a)[1]);return{x:()=>{const o=r.shape.slice();a.forEach(c=>{o[c]=1});const u=P(n,o);return Bt(M(u,Sr(r.shape,"float32")),i)}}}},AS={kernelName:Qu,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const r=e,{axis:s}=r,[a,i]=t,o=u1(n,i,a,be(s,a.shape));return{x:()=>o.x()}}},FS={kernelName:tc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const r=t[0],{paddings:s}=e,a=s.map(i=>i[0]);return{x:()=>ne(n,a,r.shape)}}},DS={kernelName:ac,saveAllInputs:!0,gradFunc:(n,t,e)=>{const{axis:r}=e;return Jr(n,r).map(s=>()=>s)}},h1={kernelName:ic,inputsToSave:["x"],gradFunc:(n,t,e)=>{const r=t[0],{paddings:s}=e,a=s.map(i=>i[0]);return{x:()=>ne(n,a,r.shape)}}},_S={kernelName:hl,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,t)=>{const[e,r,s]=t,a=e,i=r,o=de(a.shape,i.shape);return{a:()=>{const u=Dt(i,"float32");let c=M(n,M(u,pa(a,Ot(u,Qt(1)))));const l=fn(a.shape,o);return l.length>0&&(c=Vt(c,l)),P(c,a.shape)},b:()=>{const u=Ir(a,0),c=tr(u,Nr(a),$e(a));let l=M(n,M(s,c));const h=fn(i.shape,o);return h.length>0&&(l=Vt(l,h)),P(l,i.shape)}}}},OS={kernelName:oc,inputsToSave:["x","alpha"],gradFunc:(n,t)=>{const[e,r]=t,s=Ir(e,0);return{x:()=>tr(s,n,M(n,r)),alpha:()=>{let a=tr(s,$e(n),M(n,e));const i=fn(r.shape,n.shape);return i.length>0&&(a=Vt(a,i)),P(a,r.shape)}}}},LS={kernelName:lc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[r]=t,{axis:s}=e;let a=[];return a=null==s?r.shape.map((i,o)=>o):"number"==typeof s?[s]:s,{x:()=>function MS(n,t,e){const r=n.shape.length,s=r-e.length,a=tn(e,r);let i=n;null!=a&&(i=Te(n,a));const o=i.shape.slice(),u=o.splice(r-e.length,e.length).reduce((l,h)=>l*h,1);o.push(u);let c=function(l,h,p){const d=l.shape.slice();d[p]=1;const f=P(h,d),m=Wc(l,p,!0,!1),g=Wc(l,p,!0,!0),y=M(m,g);return M(f,y)}(i.reshape(o),t,s);if(c=c.reshape(i.shape),null!=a){const l=ha(a);c=Te(c,l)}return c}(r,n,a)}}},zS={kernelName:pl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Bt(n,Ke(Pe(e)))}}},PS={kernelName:fl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,r=M(Ja(e,6),oo(e));return{x:()=>M(n,Dt(r,"float32"))}}},BS={kernelName:dl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(n,Dt(oo(e),"float32"))}}},WS={kernelName:uc,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>P(n,e.shape)}}},VS={kernelName:gl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ke(Bt(n,M(pa(e,1.5),2)))}}},US={kernelName:yl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const r=Ir(e,Qt(0)),s=Qt(lh),a=Qt(uh),i=M(n,a),o=M(M(n,s),kr(Dt(e,"float32")));return tr(r,i,o)}}}},GS={kernelName:bl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(Bc(Dt(e,"float32")),n)}}},HS={kernelName:xl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(Ad(Dt(e,"float32")),n)}}},jS={kernelName:fc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[r]=t,{begin:s,size:a}=e,i=r.shape,[o,u]=_c(r,s,a),c=[];for(let l=0;l<n.rank;l++)c.push([o[l],i[l]-o[l]-u[l]]);return{x:()=>da(n,c)}}},qS={kernelName:kl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(n,Xr(e))}}},p1={kernelName:gc,gradFunc:(n,t,e)=>{const{blockShape:r,paddings:s}=e;return{x:()=>zc(n,r,s)}}},d1={kernelName:yc,gradFunc:(n,t,e)=>{const{axis:r}=e;return{x:()=>je(n,r)}}},KS={kernelName:Il,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Bt(n,M(Pn(Dt(e,"float32")),2))}}},XS={kernelName:Bp,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(n,M(Dt(e,"float32"),2))}}},YS={kernelName:mc,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[r]=t,s=r.shape.slice(),{axis:a}=e;be(a,r.shape).forEach(u=>{s[u]=1});const i=P(n,s),o=M(i,Sr(r.shape,"float32"));return{x:()=>o}}},ZS={kernelName:Tl,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Bt(n,Pe(Bc(e)))}}},JS={kernelName:$l,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[r]=t,{reps:s}=e;return{x:()=>{let a=$e(r);if(1===r.rank)for(let i=0;i<s[0];++i)a=yt(a,ne(n,[i*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let i=0;i<s[0];++i)for(let o=0;o<s[1];++o)a=yt(a,ne(n,[i*r.shape[0],o*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let i=0;i<s[0];++i)for(let o=0;o<s[1];++o)for(let u=0;u<s[2];++u)a=yt(a,ne(n,[i*r.shape[0],o*r.shape[1],u*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let i=0;i<s[0];++i)for(let o=0;o<s[1];++o)for(let u=0;u<s[2];++u)for(let c=0;c<s[3];++c)a=yt(a,ne(n,[i*r.shape[0],o*r.shape[1],u*r.shape[2],c*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return a}}}},QS={kernelName:wc,inputsToSave:["segmentIds"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>function(r,s){const a=Es(s,$e(s)),i=Bl(r,a);let o=Za(s,Qt(0,"int32"));const u=i.rank-o.rank;for(let l=0;l<u;++l)o=er(o,l+1);o=hs(o,Sr(i.shape,"bool"));const c=$e(i);return tr(o,i,c)}(n,e)}}},tT=[i1,CN,$N,EN,RN,AN,FN,DN,_N,ON,MN,LN,PN,WN,VN,UN,GN,HN,jN,qN,KN,XN,ZN,YN,QN,tS,eS,nS,rS,sS,{kernelName:j,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,r]=t,s=de(e.shape,r.shape);return{a:()=>{const a=Bt(n,Dt(r,"float32")),i=fn(e.shape,s);return i.length>0?P(Vt(a,i),e.shape):a},b:()=>{let a=M(n,Dt(e,"float32"));const i=fn(r.shape,s);i.length>0&&(a=P(Vt(a,i),r.shape));const o=Pe(r);return Ke(Bt(a,Dt(o,"float32")))}}}},aS,iS,oS,lS,uS,hS,cS,pS,dS,fS,mS,gS,yS,bS,xS,wS,vS,kS,NS,c1,c1,SS,CS,ES,RS,AS,{kernelName:ll,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,r]=t;return{a:()=>M(n,Dt(Ja(e,r),"float32")),b:()=>M(n,Dt(Ir(e,r),"float32"))}}},FS,{kernelName:ul,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,r]=t,s=de(e.shape,r.shape);return{a:()=>{const a=fn(e.shape,s);return a.length>0?P(Vt(n,a),e.shape):n},b:()=>{const a=M(n,Ke(Pl(Bt(e,r)))),i=fn(r.shape,s);return i.length>0?P(Vt(a,i),r.shape):a}}}},{kernelName:cl,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,r]=t,s=de(e.shape,r.shape);return{a:()=>{const a=M(n,Dt(r,"float32")),i=fn(e.shape,s);return i.length>0?P(Vt(a,i),e.shape):a},b:()=>{const a=M(n,Dt(e,"float32")),i=fn(r.shape,s);return i.length>0?P(Vt(a,i),r.shape):a}}}},{kernelName:ec,gradFunc:n=>({x:()=>Ke(n)})},{kernelName:sc,inputsToSave:["indices"],gradFunc:(n,t)=>{const e=t[0];return{indices:()=>gn(e.shape,"float32")}}},{kernelName:rc,gradFunc:n=>({x:()=>$e(n)})},DS,h1,h1,_S,OS,LS,zS,PS,BS,WS,{kernelName:hc,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[r]=t,s={dy:n,images:r};return{images:()=>L.runKernel(Fp,s,e)}}},{kernelName:cc,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[r]=t,s={dy:n,images:r};return{images:()=>L.runKernel(Ap,s,e)}}},{kernelName:pc,gradFunc:(n,t,e)=>{const{dims:r}=e,s=be(r,n.shape);return{x:()=>Or(n,s)}}},{kernelName:ml,gradFunc:n=>({x:()=>$e(n)})},VS,{kernelName:dc,inputsToSave:["condition"],gradFunc:(n,t)=>{const[e]=t;return{condition:()=>Dt($e(e),"float32"),t:()=>M(n,Dt(e,n.dtype)),e:()=>M(n,Dt(jc(e),n.dtype))}}},US,{kernelName:vl,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(n,M(e,Ot(Qt(1),e)))}}},{kernelName:wl,gradFunc:n=>({x:()=>$e(n)})},GS,HS,jS,{kernelName:bc,outputsToSave:[!0],gradFunc:(n,t,e)=>{const[r]=t,{dim:s}=e,a=M(n,r);return{logits:()=>Ot(a,M(Vt(a,[s],!0),r))}}},qS,p1,p1,d1,d1,KS,{kernelName:Nl,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,r]=t,s=Qt(2);return{a:()=>M(n,M(s,Ot(e,r))),b:()=>M(n,M(s,Ot(r,e)))}}},XS,{kernelName:El,gradFunc:n=>({x:()=>$e(n)})},{kernelName:Sl,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,r]=t,s=de(e.shape,r.shape);return{a:()=>{let a=n;const i=fn(e.shape,s);return i.length>0&&(a=Vt(a,i)),P(a,e.shape)},b:()=>{let a=n;const i=fn(r.shape,s);return i.length>0&&(a=Vt(a,i)),P(Ke(a),r.shape)}}}},YS,ZS,{kernelName:Cl,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>M(Ot(Qt(1),Pe(e)),n)}}},JS,{kernelName:ji,gradFunc:(n,t,e)=>{const r=e,{perm:s}=r,a=ha(s);return{x:()=>Te(n,a)}}},{kernelName:xc,gradFunc:(n,t,e)=>{const r=e,{axis:s}=r;return{value:()=>Cr(n,s)}}},QS,{kernelName:vc,gradFunc:n=>({x:()=>$e(n)})}];for(const n of tT)lk(n);it().prototype.abs=function(){return this.throwIfDisposed(),mn(this)},it().prototype.acos=function(){return this.throwIfDisposed(),T0(this)},it().prototype.acosh=function(){return this.throwIfDisposed(),C0(this)},it().prototype.add=function(n){return this.throwIfDisposed(),yt(this,n)},it().prototype.all=function(n,t){return this.throwIfDisposed(),Sd(this,n,t)},it().prototype.any=function(n,t){return this.throwIfDisposed(),Oc(this,n,t)},it().prototype.argMax=function(n){return this.throwIfDisposed(),Qi(this,n)},it().prototype.argMin=function(n){return this.throwIfDisposed(),$0(this,n)},it().prototype.asScalar=function(){return this.throwIfDisposed(),I(1===this.size,()=>"The array must have only 1 element."),P(this,[])},it().prototype.asType=function(n){return this.throwIfDisposed(),Dt(this,n)},it().prototype.as1D=function(){return this.throwIfDisposed(),P(this,[this.size])},it().prototype.as2D=function(n,t){return this.throwIfDisposed(),P(this,[n,t])},it().prototype.as3D=function(n,t,e){return this.throwIfDisposed(),P(this,[n,t,e])},it().prototype.as4D=function(n,t,e,r){return this.throwIfDisposed(),P(this,[n,t,e,r])},it().prototype.as5D=function(n,t,e,r,s){return this.throwIfDisposed(),P(this,[n,t,e,r,s])},it().prototype.asin=function(){return this.throwIfDisposed(),E0(this)},it().prototype.asinh=function(){return this.throwIfDisposed(),R0(this)},it().prototype.atan=function(){return this.throwIfDisposed(),A0(this)},it().prototype.atan2=function(n){return this.throwIfDisposed(),F0(this,n)},it().prototype.atanh=function(){return this.throwIfDisposed(),D0(this)},it().prototype.avgPool=function(n,t,e,r){return this.throwIfDisposed(),Lc(this,n,t,e,r)},it().prototype.batchToSpaceND=function(n,t){return this.throwIfDisposed(),zc(this,n,t)},it().prototype.batchNorm=function(n,t,e,r,s){return this.throwIfDisposed(),Ol(this,n,t,e,r,s)},it().prototype.broadcastTo=function(n){return this.throwIfDisposed(),no(this,n)},it().prototype.cast=function(n){return this.throwIfDisposed(),Dt(this,n)},it().prototype.ceil=function(){return this.throwIfDisposed(),P0(this)},it().prototype.clipByValue=function(n,t){return this.throwIfDisposed(),hr(this,n,t)},it().prototype.concat=function(n,t){return this.throwIfDisposed(),n instanceof Se&&(n=[n]),je([this,...n],t)},it().prototype.conv1d=function(n,t,e,r,s,a){return this.throwIfDisposed(),$d(this,n,t,e,r,s,a)},it().prototype.conv2dTranspose=function(n,t,e,r,s){return this.throwIfDisposed(),Rd(this,n,t,e,r,s)},it().prototype.conv2d=function(n,t,e,r,s,a){return this.throwIfDisposed(),ca(this,n,t,e,r,s,a)},it().prototype.cos=function(){return this.throwIfDisposed(),Bc(this)},it().prototype.cosh=function(){return this.throwIfDisposed(),Ad(this)},it().prototype.cumprod=function(n,t,e){return this.throwIfDisposed(),Wc(this,n,t,e)},it().prototype.cumsum=function(n,t,e){return this.throwIfDisposed(),Fd(this,n,t,e)},it().prototype.depthToSpace=function(n,t){return this.throwIfDisposed(),j0(this,n,t)},it().prototype.depthwiseConv2d=function(n,t,e,r,s,a){return this.throwIfDisposed(),Ml(this,n,t,e,r,s,a)},it().prototype.dilation2d=function(n,t,e,r,s){return this.throwIfDisposed(),q0(this,n,t,e,r,s)},it().prototype.divNoNan=function(n){return this.throwIfDisposed(),K0(this,n)},it().prototype.div=function(n){return this.throwIfDisposed(),Bt(this,n)},it().prototype.dot=function(n){return this.throwIfDisposed(),X0(this,n)},it().prototype.elu=function(){return this.throwIfDisposed(),Ll(this)},it().prototype.equal=function(n){return this.throwIfDisposed(),Yr(this,n)},it().prototype.erf=function(){return this.throwIfDisposed(),Y0(this)},it().prototype.euclideanNorm=function(n,t){return this.throwIfDisposed(),Q0(this,n,t)},it().prototype.exp=function(){return this.throwIfDisposed(),kr(this)},it().prototype.expandDims=function(n){return this.throwIfDisposed(),er(this,n)},it().prototype.expm1=function(){return this.throwIfDisposed(),ty(this)},it().prototype.fft=function(){return this.throwIfDisposed(),th(this)},it().prototype.flatten=function(){return this.throwIfDisposed(),P(this,[this.size])},it().prototype.floor=function(){return this.throwIfDisposed(),Pl(this)},it().prototype.floorDiv=function(n){return this.throwIfDisposed(),Dd(this,n)},it().prototype.gather=function(n,t){return this.throwIfDisposed(),Bl(this,n,t)},it().prototype.greaterEqual=function(n){return this.throwIfDisposed(),Za(this,n)},it().prototype.greater=function(n){return this.throwIfDisposed(),Ir(this,n)},it().prototype.ifft=function(){return this.throwIfDisposed(),jl(this)},it().prototype.irfft=function(){return this.throwIfDisposed(),Jd(this)},it().prototype.isFinite=function(){return this.throwIfDisposed(),ey(this)},it().prototype.isInf=function(){return this.throwIfDisposed(),ny(this)},it().prototype.isNaN=function(){return this.throwIfDisposed(),ry(this)},it().prototype.leakyRelu=function(n){return this.throwIfDisposed(),Gc(this,n)},it().prototype.lessEqual=function(n){return this.throwIfDisposed(),Ja(this,n)},it().prototype.less=function(n){return this.throwIfDisposed(),Md(this,n)},it().prototype.localResponseNormalization=function(n,t,e,r){return this.throwIfDisposed(),sy(this,n,t,e,r)},it().prototype.logSigmoid=function(){return this.throwIfDisposed(),ay(this)},it().prototype.logSoftmax=function(n){return this.throwIfDisposed(),Ld(this,n)},it().prototype.logSumExp=function(n,t){return this.throwIfDisposed(),zd(this,n,t)},it().prototype.log=function(){return this.throwIfDisposed(),Nr(this)},it().prototype.log1p=function(){return this.throwIfDisposed(),Hc(this)},it().prototype.logicalAnd=function(n){return this.throwIfDisposed(),hs(this,n)},it().prototype.logicalNot=function(){return this.throwIfDisposed(),jc(this)},it().prototype.logicalOr=function(n){return this.throwIfDisposed(),Pd(this,n)},it().prototype.logicalXor=function(n){return this.throwIfDisposed(),iy(this,n)},it().prototype.matMul=function(n,t,e){return this.throwIfDisposed(),Ie(this,n,t,e)},it().prototype.maxPool=function(n,t,e,r){return this.throwIfDisposed(),qc(this,n,t,e,r)},it().prototype.max=function(n,t){return this.throwIfDisposed(),Zr(this,n,t)},it().prototype.maximum=function(n){return this.throwIfDisposed(),Es(this,n)},it().prototype.mean=function(n,t){return this.throwIfDisposed(),rn(this,n,t)},it().prototype.min=function(n,t){return this.throwIfDisposed(),Vc(this,n,t)},it().prototype.minimum=function(n){return this.throwIfDisposed(),Wl(this,n)},it().prototype.mirrorPad=function(n,t){return this.throwIfDisposed(),uy(this,n,t)},it().prototype.mod=function(n){return this.throwIfDisposed(),cy(this,n)},it().prototype.mul=function(n){return this.throwIfDisposed(),M(this,n)},it().prototype.neg=function(){return this.throwIfDisposed(),Ke(this)},it().prototype.norm=function(n,t,e){return this.throwIfDisposed(),zl(this,n,t,e)},it().prototype.notEqual=function(n){return this.throwIfDisposed(),ao(this,n)},it().prototype.oneHot=function(n,t=1,e=0){return this.throwIfDisposed(),Wd(this,n,t,e)},it().prototype.onesLike=function(){return this.throwIfDisposed(),Tr(this)},it().prototype.pad=function(n,t){return this.throwIfDisposed(),da(this,n,t)},it().prototype.pool=function(n,t,e,r,s,a){return this.throwIfDisposed(),hy(this,n,t,e,r,s,a)},it().prototype.pow=function(n){return this.throwIfDisposed(),pa(this,n)},it().prototype.prelu=function(n){return this.throwIfDisposed(),Yc(this,n)},it().prototype.prod=function(n,t){return this.throwIfDisposed(),py(this,n,t)},it().prototype.reciprocal=function(){return this.throwIfDisposed(),dy(this)},it().prototype.relu=function(){return this.throwIfDisposed(),ps(this)},it().prototype.relu6=function(){return this.throwIfDisposed(),Gd(this)},it().prototype.reshapeAs=function(n){return this.throwIfDisposed(),P(this,n.shape)},it().prototype.reshape=function(n){return this.throwIfDisposed(),P(this,n)},it().prototype.resizeBilinear=function(n,t,e){return this.throwIfDisposed(),Ay(this,n,t,e)},it().prototype.resizeNearestNeighbor=function(n,t,e){return this.throwIfDisposed(),Fy(this,n,t,e)},it().prototype.reverse=function(n){return this.throwIfDisposed(),Or(this,n)},it().prototype.rfft=function(){return this.throwIfDisposed(),eh(this)},it().prototype.round=function(){return this.throwIfDisposed(),Hd(this)},it().prototype.rsqrt=function(){return this.throwIfDisposed(),jd(this)},it().prototype.selu=function(){return this.throwIfDisposed(),qd(this)},it().prototype.separableConv2d=function(n,t,e,r,s,a){return this.throwIfDisposed(),Kd(this,n,t,e,r,s,a)},it().prototype.sigmoid=function(){return this.throwIfDisposed(),Xr(this)},it().prototype.sign=function(){return this.throwIfDisposed(),fy(this)},it().prototype.sin=function(){return this.throwIfDisposed(),Xd(this)},it().prototype.sinh=function(){return this.throwIfDisposed(),Yd(this)},it().prototype.slice=function(n,t){return this.throwIfDisposed(),ne(this,n,t)},it().prototype.softmax=function(n){return this.throwIfDisposed(),Qc(this,n)},it().prototype.softplus=function(){return this.throwIfDisposed(),so(this)},it().prototype.spaceToBatchND=function(n,t){return this.throwIfDisposed(),Xc(this,n,t)},it().prototype.split=function(n,t){return this.throwIfDisposed(),pr(this,n,t)},it().prototype.sqrt=function(){return this.throwIfDisposed(),Pn(this)},it().prototype.square=function(){return this.throwIfDisposed(),Pe(this)},it().prototype.squaredDifference=function(n){return this.throwIfDisposed(),Qd(this,n)},it().prototype.squeeze=function(n){return this.throwIfDisposed(),dr(this,n)},it().prototype.stack=function(n,t){this.throwIfDisposed();const e=n instanceof Se?[this,n]:[this,...n];return Cr(e,t)},it().prototype.step=function(n){return this.throwIfDisposed(),oo(this,n)},it().prototype.stridedSlice=function(n,t,e,r,s,a,i,o){return this.throwIfDisposed(),my(this,n,t,e,r,s,a,i,o)},it().prototype.sub=function(n){return this.throwIfDisposed(),Ot(this,n)},it().prototype.sum=function(n,t){return this.throwIfDisposed(),Vt(this,n,t)},it().prototype.tan=function(){return this.throwIfDisposed(),gy(this)},it().prototype.tanh=function(){return this.throwIfDisposed(),eo(this)},it().prototype.tile=function(n){return this.throwIfDisposed(),_r(this,n)},it().prototype.toBool=function(){return this.throwIfDisposed(),Dt(this,"bool")},it().prototype.toFloat=function(){return this.throwIfDisposed(),Dt(this,"float32")},it().prototype.toInt=function(){return this.throwIfDisposed(),Dt(this,"int32")},it().prototype.topk=function(n,t){return this.throwIfDisposed(),yy(this,n,t)},it().prototype.transpose=function(n){return this.throwIfDisposed(),Te(this,n)},it().prototype.unique=function(n){return this.throwIfDisposed(),by(this,n)},it().prototype.unsortedSegmentSum=function(n,t){return this.throwIfDisposed(),ef(this,n,t)},it().prototype.unstack=function(n){return this.throwIfDisposed(),Jr(this,n)},it().prototype.where=function(n,t){return this.throwIfDisposed(),tr(n,this,t)},it().prototype.zerosLike=function(){return this.throwIfDisposed(),$e(this)};class fs extends Error{constructor(t){super(t),Object.setPrototypeOf(this,fs.prototype)}}class Mr extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Mr.prototype)}}class W extends Error{constructor(t){super(t),Object.setPrototypeOf(this,W.prototype)}}class fe extends Error{constructor(t){super(t),Object.setPrototypeOf(this,fe.prototype)}}class zf extends Error{constructor(t){super(t),Object.setPrototypeOf(this,zf.prototype)}}class f1{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const r=this.cache.keys().next().value;this.cache.delete(r)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const r=this.cache.keys().next().value;this.cache.delete(r)}this.maxEntries=t}}function ei(n,t){if(Array.isArray(n)){let e=[];for(let r=0;r<t;r++)e=e.concat(n);return e}{const e=new Array(t);return e.fill(n),e}}function ms(n,t){if(!n)throw new zf(t)}function m1(n,t){let e=0;for(const r of n)r===t&&e++;return e}function rr(n){return 1===n.length?n[0]:n}function qe(n){return Array.isArray(n)?n:[n]}function Ds(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function ni(n){return n.length<=1||-1===n.indexOf("_")?n:n.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let Lr={};function Pf(n){if(null==n)return null;const t={};return t.className=n.getClassName(),t.config=n.getConfig(),t}function Bf(n){if(null!=n&&"object"==typeof n)if(Array.isArray(n))n.forEach(t=>Bf(t));else{const t=Object.keys(n);for(const e of t){const r=n[e];null!=r&&"object"==typeof r&&(Array.isArray(r)||"ndarray"!==r.type||"number"!=typeof r.value?Bf(r):n[e]=r.value)}}}function Zl(n,t={},e={},r="object",s=!1){if("string"==typeof n){const a=n;let i;if(a in e)i=e[a];else if(a in Lr)i=Lr[a];else if(i=t[a],null==i)throw new W(`Unknown ${r}: ${n}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const a=n;if(null==a.className||null==a.config)throw new W(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,u;if(i in e?[o,u]=e[i]:i in Lr?[o,u]=Lr.className:i in t&&([o,u]=t[i]),null==o)throw new W(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const c={};for(const p of Object.keys(Lr))c[p]=Lr[p];for(const p of Object.keys(e))c[p]=e[p];a.config.customObjects=c;const l=Object.assign({},Lr);for(const p of Object.keys(e))Lr[p]=e[p];Bf(a.config);const h=u(o,a.config,e,s);return Lr=Object.assign({},l),h}{const c=Object.assign({},Lr);for(const h of Object.keys(e))Lr[h]=e[h];const l=new o(a.config);return Lr=Object.assign({},c),l}}}function ch(n,t){return-1*((e=n)<(r=t)?-1:e>r?1:0);var e,r}function fa(n){if(null==n)return n;const t=[];for(const e of n)-1===t.indexOf(e)&&t.push(e);return t}function eT(n){if(null==n)throw new W(`Invalid value in obj: ${JSON.stringify(n)}`);for(const t in n)if(n.hasOwnProperty(t))return!1;return!0}function ri(n,t,e){if(null!=e&&n.indexOf(e)<0)throw new W(`${e} is not a valid ${t}.  Valid values are ${n} or null/undefined.`)}function Wf(n,t,e=0,r=1/0){return ms(e>=0),ms(r>=e),Array.isArray(n)&&n.length>=e&&n.length<=r&&n.every(s=>typeof s===t)}function Tn(n,t){Array.isArray(n)?(I(n.length>0,()=>`${t} is unexpectedly an empty array.`),n.forEach((e,r)=>Tn(e,`element ${r+1} of ${t}`))):I(Number.isInteger(n)&&n>0,()=>`Expected ${t} to be a positive integer, but got ${g1(n)}.`)}function g1(n){return null===n?"null":Array.isArray(n)?"["+n.map(t=>g1(t)).join(",")+"]":"string"==typeof n?`"${n}"`:`${n}`}function y1(n){return"relu"===n?"relu":"linear"===n?"linear":"elu"===n?"elu":null}let nT=0;function b1(){return nT++}const hh={};function ph(n=""){return n in hh||(hh[n]=0),hh[n]+=1,n+hh[n].toString()}const rT=["channelsFirst","channelsLast"],sT=["nearest","bilinear"],aT=["valid","same","causal"],iT=["max","avg"],oT=["sum","mul","concat","ave"],co=new Map;function ln(n){ri(rT,"DataFormat",n)}function $r(n){ri(aT,"PaddingMode",n)}function x1(n){ri(iT,"PoolMode",n)}const Jl=[];function si(n,t){Jl.push(n);try{const e=t();return Jl.pop(),e}catch(e){throw Jl.pop(),e}}function v1(n){if(!I1(n))throw new Error("Not a valid tensor name: '"+n+"'");return(0===Jl.length?"":Jl.join("/")+"/")+n}function k1(n){if(!I1(n))throw new Error("Not a valid tensor name: '"+n+"'");co.has(n)||co.set(n,0);const t=co.get(n);if(co.set(n,co.get(n)+1),t>0){const e=`${n}_${t}`;return co.set(e,1),e}return n}const lT=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function I1(n){return!!n.match(lT)}function uT(n){return n===parseInt(n.toString(),10)}function ma(n,t,e){null==t&&(t=0),null==e&&(e=n.length);let r=1;for(let s=t;s<e;++s)r*=n[s];return r}function ho(n){if(0===n.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<n.length;e++){const r=n[e];r<t&&(t=r)}return t}function ga(n){if(0===n.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<n.length;e++){const r=n[e];r>t&&(t=r)}return t}function es(n,t){if(t<n)throw new W(`end (${t}) < begin (${n}) is forbidden.`);const e=[];for(let r=n;r<t;++r)e.push(r);return e}let Vf;function yn(){return null==Vf&&(Vf=L.backend.epsilon()),Vf}function Ql(n,t){return Dt(n,t)}function tu(n,t=-1){const e=n.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),P(n,e)}function ai(n,t,e){return K(()=>{switch(n.rank){case 1:return Zc(n,t,e);case 2:return Zd(n,[t,0],[e,n.shape[1]]);case 3:return Jc(n,[t,0,0],[e,n.shape[1],n.shape[2]]);case 4:return Hl(n,[t,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3]]);case 5:return ne(n,[t,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return ne(n,[t,0,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new W(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Uf(n,t,e){return K(()=>{switch(n.rank){case 1:return Zc(n,t,e);case 2:return Zd(n,[0,t],[n.shape[0],e]);case 3:return Jc(n,[0,0,t],[n.shape[0],n.shape[1],e]);case 4:return Hl(n,[0,0,0,t],[n.shape[0],n.shape[1],n.shape[2],e]);default:throw new W(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function dh(n,t,e,r){return K(()=>{switch(n.rank){case 1:return Zc(n,t,e);case 2:switch(r){case 1:return ai(n,t,e);case 2:return Uf(n,t,e);default:throw new W(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return ai(n,t,e);case 2:return Jc(n,[0,t,0],[n.shape[0],e,n.shape[2]]);case 3:return Uf(n,t,e);default:throw new W(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return ai(n,t,e);case 2:return Hl(n,[0,t,0,0],[n.shape[0],e,n.shape[2],n.shape[3]]);case 3:return Hl(n,[0,0,t,0],[n.shape[0],n.shape[1],e,n.shape[3]]);case 4:return Uf(n,t,e);default:throw new W(`The axis is not within the rank of the tensor ${r}`)}default:throw new W(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Gf(n,t=-1){let e;return t<0&&(e=n[0].rank,t=0!==e?e:0),t===n[0].rank&&(t=-1),je(n,t)}function N1(n,t){switch(n.rank){case 1:return B0([n,t]);case 2:return Pc([n,t],0);case 3:return W0([n,t],0);case 4:return V0([n,t],0);default:throw new W(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function Hf(n,t){if(Array.isArray(t)||(t=[t]),n.rank!==t.length)throw new W(`The length of input n (${t.length}) does not match the number of dimensions in input x (${n.rank})`);return _r(n,t)}function fh(n,t=0,e=1,r,s){return Ud(n,t,e,r,s)}function _s(n,t,e,r){if(n.rank<2||t.rank<2)throw new fe(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${t.shape}`);if(t.rank>=3&&n.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new fe(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${t.shape}`);if(2===n.rank&&2===t.rank)return af({a:n,b:t,transposeA:!1,transposeB:!1,bias:r?jf(n.rank,r,"channelsLast"):null,activation:e});{const s=n.shape.slice(),a=s.pop();n=P(n,[-1,a]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),c=[...i,o],l=Array.from({length:t.rank},(p,d)=>0===d?t.rank-2:d<=t.rank-2?d-1:d);t=P(Te(t,l),[u,-1]);const h=[...s,...c];return P(af({a:n,b:t,transposeA:!1,transposeB:!1,bias:r?jf(n.rank,r,"channelsLast"):null,activation:e}),h)}}function S1(n,t,e){return K(()=>(t=Array.isArray(t)?on(t,"int32"):Dt(t,"int32"),Bl(n,t,e)))}function eu(n){return M(n,n)}function jf(n,t,e){const r=t.shape;if(1!==t.rank&&t.rank!==n)throw new W(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${n}`);if(5===n){if("channelsFirst"===e)return P(t,1===r.length?[1,r[0],1,1,1]:[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===e)return P(t,1===r.length?[1,1,1,1,r[0]]:[1].concat(r))}else if(4===n){if("channelsFirst"===e)return P(t,1===r.length?[1,r[0],1,1]:[1,r[2],r[0],r[1]]);if("channelsLast"===e)return P(t,1===r.length?[1,1,1,r[0]]:[1].concat(r))}else if(3===n){if("channelsFirst"===e)return P(t,1===r.length?[1,r[0],1]:[1,r[1],r[0]]);if("channelsLast"===e)return P(t,1===r.length?[1,1,r[0]]:[1].concat(r))}else if(n<3)return t;throw new W(`Unsupported input rank by biasAdd: ${t.rank}`)}function ns(n,t,e){return K(()=>(null==e&&(e="channelsLast"),ln(e),yt(n,jf(n.rank,t,e))))}function T1(n,t,e,r){return K(()=>Iy(n,t,e,r))}function nu(n,t,e=!1){return e?n():t()}const cT=["fanIn","fanOut","fanAvg"],hT=["normal","uniform","truncatedNormal"];class zr extends Ji{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class C1 extends zr{apply(t,e){return gn(t,e)}}C1.className="Zeros",bt(C1);class qf extends zr{apply(t,e){return Sr(t,e)}}qf.className="Ones",bt(qf);class $1 extends zr{constructor(t){if(super(),"object"!=typeof t)throw new W(`Expected argument of type ConstantConfig but got ${t}`);if(void 0===t.value)throw new W(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return K(()=>M(Qt(this.value),Sr(t,e)))}getConfig(){return{value:this.value}}}$1.className="Constant",bt($1);class E1 extends zr{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return Vl(t,this.minval,this.maxval,e)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}E1.className="RandomUniform",bt(E1);class R1 extends zr{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new fe(`randomNormal does not support dType ${e}.`);return fh(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}R1.className="RandomNormal",bt(R1);class A1 extends zr{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if("float32"!==(e=e||"float32")&&"int32"!==e)throw new fe(`truncatedNormal does not support dType ${e}.`);return tf(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}A1.className="TruncatedNormal",bt(A1);class F1 extends zr{constructor(t){super(),this.gain=null!=t.gain?t.gain:1}apply(t,e){return K(()=>{if(2!==t.length||t[0]!==t[1])throw new W("Identity matrix initializer can only be used for 2D square matrices.");return M(this.gain,Od(t[0]))})}getConfig(){return{gain:this.gain}}}F1.className="Identity",bt(F1);class fr extends zr{constructor(t){if(super(),t.scale<0)throw new W(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale??1,this.mode=t.mode??"fanIn",ri(cT,"FanMode",this.mode),this.distribution=t.distribution??"normal",ri(hT,"Distribution",this.distribution),this.seed=t.seed}apply(t,e){const r=function(o,u="channelsLast"){let c,l;if(ln(u),2===o.length)c=o[0],l=o[1];else if(-1!==[3,4,5].indexOf(o.length)){if("channelsFirst"===u){const h=ma(o,2);c=o[1]*h,l=o[0]*h}else if("channelsLast"===u){const h=ma(o,0,o.length-2);c=o[o.length-2]*h,l=o[o.length-1]*h}}else{const h=ma(o);c=Math.sqrt(h),l=Math.sqrt(h)}return[c,l]}(t),s=r[0],a=r[1];let i=this.scale;if(i/="fanIn"===this.mode?Math.max(1,s):"fanOut"===this.mode?Math.max(1,a):Math.max(1,(s+a)/2),"normal"===this.distribution){const o=Math.sqrt(i);if("float32"!==(e=e||"float32")&&"int32"!==e)throw new fe(`${this.getClassName()} does not support dType ${e}.`);return tf(t,0,o,e,this.seed)}{const o=Math.sqrt(3*i);return Vl(t,-o,o,e)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}fr.className="VarianceScaling",bt(fr);class Kf extends fr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return fr.className}}Kf.className="GlorotUniform",bt(Kf);class Xf extends fr{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return fr.className}}Xf.className="GlorotNormal",bt(Xf);class Yf extends fr{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return fr.className}}Yf.className="HeNormal",bt(Yf);class Zf extends fr{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return fr.className}}Zf.className="HeUniform",bt(Zf);class Jf extends fr{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==t?null:t.seed})}getClassName(){return fr.className}}Jf.className="LeCunNormal",bt(Jf);class Qf extends fr{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==t?null:t.seed})}getClassName(){return fr.className}}Qf.className="LeCunNormal",bt(Qf);class D1 extends zr{constructor(t){if(super(),this.DEFAULT_GAIN=1,this.gain=t.gain??this.DEFAULT_GAIN,this.seed=t.seed,null!=this.seed)throw new fe("Random seed is not implemented for Orthogonal Initializer yet.")}apply(t,e){return K(()=>{if(t.length<2)throw new fe("Shape must be at least 2D.");t[0]*t[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${t[0]*t[1]}) elements: Slowness may result.`);const r=fh(t[0]>t[1]?[t[1],t[0]]:t,0,1,"float32");let s=_y.gramSchmidt(r);return t[0]>t[1]&&(s=Te(s)),M(this.gain,s)})}getConfig(){return{gain:this.gain,seed:this.seed}}}D1.className="Orthogonal",bt(D1);const _1={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function O1(n,t={}){return Zl(n,Fr.getMap().classNameMap,t,"initializer")}function en(n){return Pf(n)}function Xe(n){if("string"==typeof n){const t=n in _1?_1[n]:n;if("GlorotNormal"===t)return new Xf;if("GlorotUniform"===t)return new Kf;if("HeNormal"===t)return new Yf;if("HeUniform"===t)return new Zf;if("LeCunNormal"===t)return new Jf;if("LeCunUniform"===t)return new Qf;{const e={};return e.className=t,e.config={},O1(e)}}return n instanceof zr?n:O1(n)}function tm(n){return Array.isArray(n)&&Array.isArray(n[0])}function mh(n){return 0===n.length?[]:Array.isArray(n[0])?n:[n]}function me(n){let t;if(Array.isArray(n)){if(1!==n.length)throw new W(`Expected Tensor length to be 1; got ${n.length}`);t=n[0]}else t=n;return t}function Me(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(1===n.length)return n[0];throw new W(`Expected exactly 1 Shape; got ${n.length}`)}return n}function gh(n){let t=0;for(const e of n)t+=0===e.shape.length?1:e.shape.reduce((r,s)=>r*s);return t}const M1="Variable";class pT{constructor(t,e="float32",r=M1,s=!0,a=null){this.dtype=e??"float32",this.shape=t.shape,this.id=b1(),this.originalName=v1(r=r??M1),this.name=k1(this.originalName),this.trainable_=s,this.constraint=a,this.val=xy(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),function(e,r){if(e.shape.toString()!==r.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(r.shape))}(this.val,t),this.val.id!==t.id&&(this.val.assign(t),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function em(n){return n.map(t=>t.read())}function nm(n){n.forEach(t=>{t[0].write(t[1])})}class bn{constructor(t){this.dtype=t.dtype,this.shape=t.shape,this.ndim=null!=t.shape?t.shape.length:t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class gs{constructor(t,e,r,s,a,i,o){this.dtype=t,this.shape=e,this.sourceLayer=r,this.inputs=s,this.callArgs=a,this.outputTensorIndex=o,this.id=b1(),null!=i&&(this.originalName=v1(i),this.name=k1(this.originalName)),this.rank=e.length}}let dT=0;class yh{constructor(t,e){this.callArgs=e,this.id=dT++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const r of t.inboundLayers)r?.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)t.push(null!=e?e.name:null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let fT=0;class Ee extends Ji{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=fT++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const r=this.getClassName();e=Ds(r)+"_"+ph(r)}if(this.name=e,this.trainable_=null==t.trainable||t.trainable,null!=t.inputShape||null!=t.batchInputShape){let r;if(null!=t.batchInputShape)r=t.batchInputShape;else if(null!=t.inputShape){let a=null;null!=t.batchSize&&(a=t.batchSize),r=[a].concat(t.inputShape)}this.batchInputShape=r;let s=t.dtype;null==s&&(s=t.inputDType),null==s&&(s="float32"),this.dtype=s}this.initialWeights=null!=t.weights?t.weights:null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(0===this.inboundNodes.length)throw new Mr(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new W(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return rr(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return rr(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new fs(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new fs(`Layer ${this.name} is not connected, no input to return.`);return rr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new fs(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new fs(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return rr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){if(t=qe(t),null==this.inputSpec||0===this.inputSpec.length)return;const e=qe(this.inputSpec);if(t.length!==e.length)throw new W(`Layer ${this.name} expects ${e.length} inputs, but it received ${t.length} input tensors. Input received: ${t}`);for(let r=0;r<t.length;r++){const s=t[r],a=e[r];if(null==a)continue;const i=s.rank;if(null!=a.ndim&&i!==a.ndim)throw new W(`Input ${r} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${i}`);if(null!=a.maxNDim&&i>a.maxNDim)throw new W(`Input ${r} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${i}`);if(null!=a.minNDim&&i<a.minNDim)throw new W(`Input ${r} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${i}.`);if(null!=a.dtype&&s.dtype!==a.dtype)throw new W(`Input ${r} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${s.dtype}.`);if(a.axes){const o=s.shape;for(const u in a.axes){const c=Number(u),l=a.axes[u],h=c>=0?o[c]:o[o.length+c];if(null!=l&&-1===[l,null].indexOf(h))throw new W(`Input ${r} is incompatible with layer ${this.name}: expected axis ${c} of input shape to have value ${l} but got shape ${o}.`)}}if(null!=a.shape)for(let o=0;o<a.shape.length;++o){const u=a.shape[o],c=s.shape[o];if(null!=u&&null!=c&&u!==c)throw new W(`Input ${r} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${s.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){null!=this._callHook&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const r=qe(t);let s=!0;for(const i of r)if(!(i instanceof gs)){s=!1;break}let a=!0;for(const i of r)if(i instanceof gs){a=!1;break}if(s===a)throw new W("Arguments to apply() must be all SymbolicTensors or all Tensors");return si(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const i=[];for(const o of qe(t))i.push(o.shape);this.build(rr(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(t),a){let i=this.call(t,e);const o=qe(i),u=[];for(let c of o)-1!==r.indexOf(c)&&(c=c.clone()),u.push(c);if(i=rr(u),null!=this.activityRegularizer)throw new fe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}{const i=function(l){l=qe(l);const h=[];for(const p of l)h.push(p.shape);return rr(h)}(t),o=this.computeOutputShape(i);let u;const c="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(t)?i[0]:i),u=null!=o&&o.length>0&&Array.isArray(o[0])?o.map((l,h)=>new gs(c,l,this,qe(t),e,this.name,h)):new gs(c,o,this,qe(t),e,this.name),this.addInboundNode(t,u,null,null,i,o,e),this._refCount++,null!=this.activityRegularizer)throw new fe("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return u}})}warnOnIncompatibleInputShape(t){if(null!=this.batchInputShape)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((r,s)=>{null!=r&&null!=t[s]&&t[s]!==r&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new fs(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const r=JSON.stringify(e.outputShapes);-1===t.indexOf(r)&&t.push(r)}if(1===t.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new fs(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Mr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return gh(this.weights)}build(t){this.built=!0}getWeights(t=!1){return em(t?this.trainableWeights:this.weights)}setWeights(t){K(()=>{const e=this.weights;if(e.length!==t.length)throw new W(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(0===e.length)return;const r=[],s=em(e);for(let a=0;a<s.length;++a){const i=s[a],o=e[a],u=t[a];if(!he(i.shape,u.shape))throw new W(`Layer weight shape ${i.shape} not compatible with provided weight shape ${u.shape}`);r.push([o,u])}nm(r)})}addWeight(t,e,r,s,a,i,o,u){if(-1!==this._addedWeightNames.indexOf(t))throw new W(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),null==r&&(r="float32"),this.fastWeightInitDuringBuild&&(s=null!=u?u():Xe("zeros"));const c=s.apply(e,r),l=new pT(c,r,t,i,o);return c.dispose(),null!=a&&this.addLoss(()=>a.apply(l.read())),null==i&&(i=!0),i?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){null==t||Array.isArray(t)&&0===t.length||(t=qe(t),null!=this._losses&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(null!=e){if(!Array.isArray(e))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);e.forEach(r=>{if(null!=r)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return e}addInboundNode(t,e,r,s,a,i,o=null){const u=qe(t);e=qe(e),r=qe(r),s=qe(s),a=mh(a),i=mh(i);const c=[],l=[],h=[];for(const p of u)c.push(p.sourceLayer),l.push(p.nodeIndex),h.push(p.tensorIndex);new yh({outboundLayer:this,inboundLayers:c,nodeIndices:l,tensorIndices:h,inputTensors:u,outputTensors:e,inputMasks:r,outputMasks:s,inputShapes:a,outputShapes:i},o);for(let p=0;p<e.length;p++)e[p].sourceLayer=this,e[p].nodeIndex=this.inboundNodes.length-1,e[p].tensorIndex=p}getConfig(){const t={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(t.batchInputShape=this.batchInputShape),null!=this.dtype&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return 0==--this._refCount&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function L1(n,t,e){if((null==t||null!=e&&e>0)&&(t=n.sourceLayer,e=n.nodeIndex),0===t.inboundNodes.length)return[n];{const r=t.inboundNodes[e];if(0===r.inboundLayers.length)return r.inputTensors;{const s=[];for(let a=0;a<r.inboundLayers.length;a++){const i=L1(r.inputTensors[a],r.inboundLayers[a],r.nodeIndices[a]);for(const o of i)-1===s.indexOf(o)&&s.push(o)}return s}}}class ru extends Ee{constructor(t){if(super({dtype:t.dtype,name:null!=t.name?t.name:ph("input").toString()}),null==t.batchSize&&(t.batchSize=null),null==t.sparse&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,null!=t.inputShape&&null!=t.batchInputShape)throw new W("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(null==e){if(null==t.inputShape)throw new W("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(null!=t.batchSize)throw new W("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const r=t.dtype||"float32";this.batchInputShape=e,this.dtype=r,this.inputSpec=[{shape:e}];const s=new gs(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new yh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new W(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}ru.className="InputLayer",bt(ru);class ya{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof ya)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(null==t)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,r){if(null!=this.id2Value[t.id])throw new W(`Duplicate key: name=${t.name}, id=${t.id}`);return this.id2Value[t.id]=function(s,a){if(null==s.dtype||s.dtype===a.dtype)return a;try{return Dt(a,s.dtype)}catch{throw new W(`The dtype of the feed (${a.dtype}) can not be cast to the dtype of the key '${s.name}' (${s.dtype}).`)}}(t,e),this.name2Id[t.name]=t.id,null!=r&&(this.id2Mask[t.id]=r),this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return null!=this.id2Value[t.id]}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof gs){if(null==this.id2Value[t.id])throw new W(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}{const e=this.name2Id[t];if(null==e)throw new W(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof gs){if(null==this.id2Value[t.id])throw new W(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}{const e=this.name2Id[t];if(null==e)throw new W(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){null!=this.id2Mask&&ve(this.id2Mask)}}const bh=new f1,xh=new f1;function su(n,t,e,r){const s=null!=e&&e.training,a=Array.isArray(n),i=a?n:[n],o=i.map(f=>f.name),u=[],c=t.names();for(const f of o)-1!==c.indexOf(f)?u.push(t.getValue(f)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const l=o.join(",")+"|"+t.names().sort().join(",");let h,p=bh.get(l);if(null==p){const f=function(m,g){I(null!=m&&m.length>0,()=>"Expected at least one fetch, got none");let y=[],b={};if(1===m.length){const x=z1(m[0],g);y=x.sorted,b=x.recipientMap}else{const x=new Set;for(const w of m){const{sorted:k,recipientMap:N}=z1(w,g);for(const $ of k)x.has($.name)||(y.push($),x.add($.name));for(const $ in N)null==b[$]&&(b[$]=new Set),N[$].forEach(C=>b[$].add(C))}}return{sorted:y,recipientCounts:mT(b)}}(i,t);p=f.sorted,h=f.recipientCounts,bh.put(l,p),xh.put(l,h)}h={},s||Object.assign(h,xh.get(l));const d=new ya(t);for(let f=0;f<p.length;++f){if(null!=r){const R=Nd().numTensors;R>r.maxNumTensors&&(r.maxNumTensors=R),R<r.minNumTensors&&(r.minNumTensors=R)}const m=p[f],g=m.sourceLayer;if(g instanceof ru)continue;const y=[],b=[],x=[];let w=!1;for(const R of m.inputs){const A=d.getValue(R),_=d.getMask(R);y.push(A),b.push(_),null!=_&&(w=!0),s||(h[R.name]--,0!==h[R.name]||t.hasKey(R)||-1!==o.indexOf(R.name)||A.isDisposed||!0===R.sourceLayer.stateful||x.push(A))}w&&((e=e||{}).mask=b[0]);const k=qe(g.apply(y,e));let N=null;g.supportsMasking&&(N=g.computeMask(y,b));const $=gT(m),C=Array.isArray($)?$:[$];for(let R=0;R<C.length;++R){d.hasKey(C[R])||d.add(C[R],k[R],Array.isArray(N)?N[0]:N);const A=o.indexOf(C[R].name);-1!==A&&(u[A]=k[R])}s||ve(x)}return d.disposeMasks(),a?u:u[0]}function mT(n){const t={};for(const e in n)t[e]=n[e].size;return t}function z1(n,t){const e=new Set,r=[],s={};for(const o of t.names())e.add(o);const a=[],i=[];for(a.push(n);a.length>0;){const o=a[a.length-1];if(e.has(o.name)){a.pop();continue}const u=i[i.length-1]===a.length-1;if(0===o.inputs.length||u)a.pop(),r.push(o),e.add(o.name),u&&i.pop();else{i.push(a.length-1);for(const c of o.inputs)null==s[c.name]&&(s[c.name]=new Set),s[c.name].add(o.name),e.has(c.name)||a.push(c)}}return{sorted:r,recipientMap:s}}function gT(n){let t;if(1===n.sourceLayer.inboundNodes.length)t=n.sourceLayer.output;else{let e=null;for(let r=0;r<n.sourceLayer.inboundNodes.length;++r)for(const s of n.sourceLayer.inboundNodes[r].outputTensors)if(s.id===n.id){e=r;break}t=n.sourceLayer.getOutputAt(e)}return t}function rm(n,t){return K(()=>Pn(Vt(M(n,n),t,!0)))}Q().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,function(n){bh?.setMaxEntries(n),xh?.setMaxEntries(n)});class au extends Ji{getConfig(){return{}}}class P1 extends au{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return K(()=>{const e=rm(t,this.axis),r=hr(e,0,this.maxValue);return M(t,Bt(r,yt(yn(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}P1.className="MaxNorm",bt(P1);class B1 extends au{constructor(t){super(),this.defaultAxis=0,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return K(()=>Bt(t,yt(yn(),rm(t,this.axis))))}getConfig(){return{axis:this.axis}}}B1.className="UnitNorm",bt(B1);class W1 extends au{apply(t){return ps(t)}}W1.className="NonNeg",bt(W1);class V1 extends au{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=t.minValue?t.minValue:this.defaultMinValue,this.maxValue=null!=t.maxValue?t.maxValue:this.defaultMaxValue,this.rate=null!=t.rate?t.rate:this.defaultRate,this.axis=null!=t.axis?t.axis:this.defaultAxis}apply(t){return K(()=>{const e=rm(t,this.axis),r=yt(M(this.rate,hr(e,this.minValue,this.maxValue)),M(1-this.rate,e));return M(t,Bt(r,yt(yn(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}V1.className="MinMaxNorm",bt(V1);const U1={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function xn(n){return Pf(n)}function G1(n,t={}){return Zl(n,Fr.getMap().classNameMap,t,"constraint")}function wn(n){return null==n?null:"string"==typeof n?G1({className:n in U1?U1[n]:n,config:{}}):n instanceof au?n:G1(n)}async function ii(n){if(null==n)return;const t=[],e=[],r=[];for(const s in n){const a=n[s];if("number"!=typeof a){const i=a;t.push(i.data()),e.push(s),r.push(i)}}if(t.length>0){const s=await Promise.all(t);for(let a=0;a<s.length;++a)n[e[a]]=s[a][0];ve(r)}}function H1(n){if(null!=n)for(const t in n){const e=n[t];"number"!=typeof e&&e.dispose()}}var j1;!function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"}(j1||(j1={}));class iu{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class yT{constructor(t,e=10){null==t&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){null==e&&(e={});for(const r of this.callbacks)await r.onEpochBegin(t,e)}async onEpochEnd(t,e){null==e&&(e={});for(const r of this.callbacks)await r.onEpochEnd(t,e)}async onBatchBegin(t,e){null==e&&(e={});for(const r of this.callbacks)await r.onBatchBegin(t,e)}async onBatchEnd(t,e){null==e&&(e={});for(const r of this.callbacks)await r.onBatchEnd(t,e)}async onTrainBegin(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){null==t&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class bT extends iu{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){null==e&&(e={});const r=e.size??0;this.seen+=r;for(const s in e){const a=e[s];if("number"==typeof a)this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+a*r;else{let i;s in this.totals?i=this.totals[s]:this.totals[s]=0;const o=K(()=>yt(this.totals[s],M(a,r)));this.totals[s]=o,i?.dispose()}}}async onEpochEnd(t,e){if(null!=e)for(const r of this.params.metrics)null!=this.totals[r]&&("number"==typeof this.totals[r]?e[r]=this.totals[r]/this.seen:K(()=>{const s=M(Bt(1,this.seen),this.totals[r]);e[r]=s,this.totals[r].dispose(),An(e[r])}))}}class xT extends iu{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){null==e&&(e={}),this.epoch.push(t);for(const r in e)null==this.history[r]&&(this.history[r]=[]),this.history[r].push(e[r])}async syncData(){const t=[],e=[],r=[];for(const a in this.history){const i=this.history[a];for(let o=0;o<i.length;++o)"number"!=typeof i[o]&&(t.push(i[o].data()),e.push(a),r.push(o))}const s=await Promise.all(t);for(let a=0;a<s.length;++a)this.history[e[a]][r[a]].dispose(),this.history[e[a]][r[a]]=s[a][0]}}class wT extends iu{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||Oy,this.yieldEvery=e||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=t.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Ar(this.yieldEvery)&&(this.maybeWait=function(r,s,a){let i,o=null!=a?a():zn();return(...u)=>{const c=null!=a?a():zn();return c-o<s||(o=c,i=r(...u)),i}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,r){const s=[];null!=this.yield&&(await ii(r),s.push(this.yield(t,e,r))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(t,e){this.currentEpoch=t,null!=this.epochBegin&&(await ii(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const r=[];null!=this.epochEnd&&(await ii(e),r.push(this.epochEnd(t,e))),"epoch"===this.yieldEvery&&r.push(this.nextFrameFunc()),await Promise.all(r)}async onBatchBegin(t,e){null!=this.batchBegin&&(await ii(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const r=[];null!=this.batchEnd&&(await ii(e),r.push(this.batchEnd(t,e))),"batch"===this.yieldEvery?r.push(this.nextFrameFunc()):Ar(this.yieldEvery)&&r.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(r)}async onTrainBegin(t){null!=this.trainBegin&&(await ii(t),await this.trainBegin(t))}async onTrainEnd(t){null!=this.trainEnd&&(await ii(t),await this.trainEnd(t))}}function q1(n,t){return null==n&&(n={}),n instanceof iu?[n]:Array.isArray(n)&&n[0]instanceof iu?n:qe(n).map(e=>new wT(e,t))}class Pr{constructor(){}static registerCallbackConstructor(t,e){I(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),Pr.checkForDuplicate(e),null==Pr.constructors[t]&&(Pr.constructors[t]=[]),Pr.constructors[t].push(e)}static checkForDuplicate(t){for(const e in Pr.constructors)Pr.constructors[+e].forEach(r=>{if(r===t)throw new W("Duplicate callback constructor.")})}static clear(){Pr.constructors={}}static createCallbacks(t){const e=[];for(const r in Pr.constructors){const s=+r;t>=s&&e.push(...Pr.constructors[s])}return e.map(r=>new r)}}function K1(n,t,e,r,s,a,i,o,u){const c=new xT,l=[new bT,...Pr.createCallbacks(t)];null!=n&&l.push(...n),l.push(c);const h=new yT(l);return h.setParams({epochs:e,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:c}}function Os(n,t={},e=!1){return Zl(n,Fr.getMap().classNameMap,t,"layer",e)}function wh(n,t){return K(()=>{"float32"!==n.dtype&&(n=Dt(n,"float32"));const e=Vt(eu(n),t,!0),r=ro(e.shape,yn()),s=Pn(Es(e,r));return Bt(n,s)})}function vh(n,t){return K(()=>rn(eu(Ot(t,n)),-1))}function sm(n,t){return K(()=>rn(mn(Ot(t,n)),-1))}function am(n,t){return K(()=>{const e=Ot(n,t),r=hr(mn(n),yn(),Number.MAX_VALUE),s=mn(Bt(e,r));return M(100,rn(s,-1))})}function ou(n,t,e=!1){return K(()=>{if(e)t=Qc(t);else{const r=Vt(t,t.shape.length-1,!0);t=Bt(t,r)}return t=hr(t,yn(),1-yn()),Ke(Vt(M(Dt(n,"float32"),Nr(t)),t.shape.length-1))})}function kh(n,t,e=!1){return K(()=>{const r=Dt(Pl(function(a){const i=[ma(a.shape)];return P(a,i)}(n)),"int32"),s=(t=hr(t,yn(),1-yn())).shape;return ou(P(Wd(r,s[s.length-1]),s),t,e)})}function Ih(n,t){return K(()=>{let e;return e=hr(t,yn(),1-yn()),e=Nr(Bt(e,Ot(1,e))),rn(function(r,s){if(!he(r.shape,s.shape))throw new W(`logits and labels must have the same shape, but got shapes ${JSON.stringify(r.shape)} and ${JSON.stringify(s.shape)}`);return K(()=>{const a=ps(s),i=Ke(mn(s));return yt(Ot(a,M(s,r)),Hc(kr(i)))})}(n,e),-1)})}function X1(n,t){return K(()=>{const e=wh(n,-1),r=wh(t,-1),s=M(e,r);return Ke(Vt(s,-1))})}Pr.constructors={};const Nh={meanSquaredError:vh,meanAbsoluteError:sm,meanAbsolutePercentageError:am,meanSquaredLogarithmicError:function vT(n,t){return K(()=>{const e=hr(t,yn(),Number.MAX_VALUE),r=Nr(yt(1,e)),s=hr(n,yn(),Number.MAX_VALUE),a=Nr(yt(1,s));return rn(eu(Ot(r,a)),-1)})},squaredHinge:function(n,t){return K(()=>{const e=Es(0,Ot(1,M(n,t)));return rn(eu(e),-1)})},hinge:function(n,t){return K(()=>{const e=Es(0,Ot(1,M(n,t)));return rn(e,-1)})},categoricalHinge:function(n,t){return K(()=>{const e=Vt(M(n,t),-1),r=Zr(M(Ot(1,n),t),-1);return Es(0,yt(1,Ot(r,e)))})},logcosh:function(n,t){return K(()=>{const e=Math.log(2),r=Ot(t,n),s=Ot(yt(r,so(M(-2,r))),e);return rn(s,-1)})},categoricalCrossentropy:ou,sparseCategoricalCrossentropy:kh,binaryCrossentropy:Ih,kullbackLeiblerDivergence:function kT(n,t){return K(()=>{const e=hr(n,yn(),1),r=hr(t,yn(),1);return Vt(M(n,Nr(Bt(e,r))),-1)})},poisson:function(n,t){return K(()=>{const e=Nr(yt(yn(),t));return rn(Ot(t,M(n,e)),-1)})},cosineProximity:X1};function im(n){if("string"==typeof n){if(n in Nh)return Nh[n];let t=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new W(t)}return n}function Y1(n,t){return K(()=>{const e=M(.5,Tr(t)),r=Ql(Ir(t,e),n.dtype);return rn(Yr(n,r),-1)})}function Z1(n,t){return K(()=>Ql(Yr(Qi(n,-1),Qi(t,-1)),"float32"))}function NT(n,t){return Ih(n,t)}function ST(n,t){return n.rank===t.rank&&(n=dr(n,[n.rank-1])),(t=Qi(t,-1)).dtype!==n.dtype&&(t=Dt(t,n.dtype)),Dt(Yr(n,t),"float32")}const J1=ou,Q1=kh,Sh={binaryAccuracy:Y1,categoricalAccuracy:Z1,precision:function(n,t){return K(()=>{const e=function IT(n,t){return K(()=>Dt(Vt(hs(Yr(n,1),Yr(t,1))),"float32"))}(n,t),r=(a=n,i=t,K(()=>Dt(Vt(hs(Yr(a,0),Yr(i,1))),"float32"))),s=yt(e,r);var a,i;return Dt(tr(Ir(s,0),Bt(e,s),0),"float32")})},categoricalCrossentropy:J1,sparseCategoricalCrossentropy:Q1,mse:vh,MSE:vh,mae:sm,MAE:sm,mape:am,MAPE:am,cosine:X1};function TT(n){if("string"==typeof n&&n in Sh)return Sh[n];if("string"!=typeof n&&null!=n)return n;throw new W(`Unknown metric ${n}`)}function Th(n){if(ms(null!==n,`Unknown LossOrMetricFn ${n}`),"string"==typeof n)return n;{let t;for(const e of Object.keys(Nh))if(Nh[e]===n){t=e;break}if(void 0!==t)return t;for(const e of Object.keys(Sh))if(Sh[e]===n){t=e;break}return void 0!==t?t:n.name}}function tb(n,t,e=!1){if(null==n||"object"!=typeof n||Object.getPrototypeOf(n)!==Object.prototype||!om(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const r=JSON.stringify(n);r.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function om(n){if(null===n)return!0;if("object"==typeof n){if(Object.getPrototypeOf(n)===Object.prototype){const t=Object.keys(n);for(const e of t)if("string"!=typeof e||!om(n[e]))return!1;return!0}if(Array.isArray(n)){for(const t of n)if(!om(t))return!1;return!0}return!1}{const t=typeof n;return"string"===t||"number"===t||"boolean"===t}}function Ch(n,t,e=console.log){let r="";for(let s=0;s<n.length;++s)s>0&&(r=r.slice(0,r.length-1)+" "),r+=n[s],r=r.slice(0,t[s]),r+=" ".repeat(t[s]-r.length);e(r)}function ET(n,t,e){let r,s;try{s=n.inboundNodes.map(a=>JSON.stringify(a.inputShapes)).join(",")}catch{s="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}Ch([`${n.name} (${n.getClassName()})`,s,r,n.countParams().toString()],t,e)}function RT(n,t,e,r){let s,a;try{a=n.inboundNodes.map(l=>JSON.stringify(l.inputShapes)).join(",")}catch{a="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const i=[];for(const l of n.inboundNodes)if(!(null!=e&&e.length>0&&-1===e.indexOf(l)))for(let h=0;h<l.inboundLayers.length;++h)i.push(`${l.inboundLayers[h].name}[${l.nodeIndices[h]}][${l.tensorIndices[h]}]`);const o=n.name,u=n.getClassName(),c=0===i.length?"":i[0];Ch([`${o} (${u})`,a,s,n.countParams().toString(),c],t,r);for(let l=1;l<i.length;++l)Ch(["","","","",i[l]],t,r)}function eb(n,t,e){return("inboundNodes"===n||"outputLayers"===n||"inputLayers"===n)&&0===t&&"string"==typeof e}function lm(n,t){if(null===n)return null;if("string"==typeof n)return ni(n);if("number"==typeof n||"boolean"==typeof n)return n;if(n instanceof Array){const e=[],r=n.length;for(let s=0;s<r;++s){const a=n[s];eb(t,s,a)?e.push(a):e.push(lm(a,t))}return e}{const e={};for(const r of Object.keys(n)){const s=n[r];if("name"===r&&"string"==typeof s)e[r]=s;else{const a=ni(r);e[a]=lm(s,a)}}return e}}function um(n,t){if(null==n)return null;if("string"==typeof n)return Ds(n);if("number"==typeof n||"boolean"==typeof n)return n;if(n instanceof Array){const e=[],r=n.length;for(let s=0;s<r;++s){const a=n[s];eb(t,s,a)?e.push(a):e.push(um(a,t))}return e}{const e={};for(const r of Object.keys(n)){const s=n[r];e[Ds(r)]="name"!==r&&"className"!==r||"string"!=typeof s?um(s,r):s}return e}}class rs extends Ee{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,null==this.name){const b=this.getClassName().toLowerCase();this.name=ph(b)}if(this.supportsMasking=!1,this.trainable_=!0,this.inputs=Array.isArray(t.inputs)?t.inputs.slice():[t.inputs],this.outputs=Array.isArray(t.outputs)?t.outputs.slice():[t.outputs],fa(this.inputs).length!==this.inputs.length)throw new W(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(b=>b.name)}`);fa(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(b=>b.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const w=b.nodeIndex,k=b.tensorIndex;this.outputLayers.push(b.sourceLayer),this.outputLayersNodeIndices.push(w),this.outputLayersTensorIndices.push(k)}for(const b of this.inputs){const x=b.sourceLayer,w=b.nodeIndex,k=b.tensorIndex;ms(0===w,"input layer has >1 nodes"),ms(0===k,"input layer has >1 tensors"),this.inputLayers.push(x),this.inputLayersNodeIndices.push(w),this.inputLayersTensorIndices.push(k)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const x=this.inputLayers[b];if(!(x instanceof ru))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${b} (0-based) originates from layer type ${x.getClassName()}.`);this.inputNames.push(x.name),this.feedInputShapes.push(x.batchInputShape),this.feedInputNames.push(x.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map(b=>b.shape),this.internalOutputShapes=this.outputs.map(b=>b.shape);const e={},r={},s={},a={},i={},o=[],u=(b,x,w,k,N,$)=>{null!=k&&null!=N&&null!=$||(k=b.sourceLayer,N=b.nodeIndex,$=b.tensorIndex);const C=k.inboundNodes[N];if(-1!==w.indexOf(C))throw new Mr(`The tensor ${b.name} at layer "${k.name}" is part of a cycle.`);if(-1!==x.indexOf(C))return;this.containerNodes.add(rs.nodeKey(k,N)),k.id in i||(i[k.id]=Object.keys(i).length),-1===w.indexOf(C)&&w.push(C);const R=C.inboundLayers.length;for(let A=0;A<R;A++)u(C.inputTensors[A],x,w,C.inboundLayers[A],C.nodeIndices[A],C.tensorIndices[A]);for(x.push(C);w.indexOf(C)>=0;)w.splice(w.indexOf(C),1);o.push(C)},c=[],l=[];for(const b of this.outputs)u(b,c,l);const h=o.slice().reverse();for(const b of h){r[b.id]=b,b.id in e||(e[b.id]=0);let x=e[b.id];x=Math.max(x,s[b.outboundLayer.id]??0),s[b.outboundLayer.id]=x,a[b.outboundLayer.id]=b.outboundLayer,e[b.id]=x;for(let k=0;k<b.inboundLayers.length;k++){const C=b.inboundLayers[k].inboundNodes[b.nodeIndices[k]];e[C.id]=Math.max(x+1,e[C.id]??0),r[C.id]=C}}const p={};for(const b in e){const x=e[b];x in p||(p[x]=[]),p[x].push(r[b])}const d={};for(const b in s){const x=s[b];x in d||(d[x]=[]),d[x].push(a[b])}let f=Object.keys(d).map(b=>parseInt(b,10)).sort(ch);this.layers=[];for(const b of f){const x=d[b];x.sort((w,k)=>{const N=i[w.id],$=i[k.id];return N<$?-1:N>$?1:0});for(const w of x)w instanceof rs&&this.internalContainerRefs.push(w),this.layers.push(w)}this.layersByDepth=d,f=Object.keys(p).map(b=>parseInt(b,10)).sort(ch);const m=this.inputs.slice(),g=[];for(const b of f)for(const x of p[b]){const w=x.outboundLayer;if(null!=w){for(const k of x.inputTensors)if(-1===m.indexOf(k))throw new Mr(`Graph disconnected: cannot obtain value for tensor ${k} at layer "${w.name}". The following previous layers were accessed without issue: ${g}`);for(const k of x.outputTensors)m.push(k);g.push(w.name)}}this.nodesByDepth=p;const y=this.layers.map(b=>b.name);for(const b of y){const x=y.filter(w=>w===b).length;if(1!==x)throw new Mr(`The name "${b}" is used ${x} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(y))}this.outboundNodes=[],this.inboundNodes=[],new yh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(b=>null),outputMasks:this.outputs.map(b=>null),inputShapes:this.inputs.map(b=>b.shape),outputShapes:this.outputs.map(b=>b.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(r=>r.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new W("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const r of this.layers)e.push(...r.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const r={};let s=0;for(const i of this.layers)for(const o of i.weights){if(null!=r[o.originalName])throw new W(`Duplicate weight name: ${o.originalName}`);r[o.originalName]=o,s++}const a=[];for(const i in t){let o=i;if(null==r[i]){const u=i.split("/");o=u.slice(0,-2).concat([u[u.length-1]]).join("/")}if(null!=r[o])a.push([r[o],t[i]]);else if(e)throw new W(`Provided weight data has no target variable: ${i}`);delete r[o]}if(e){const i=[];for(const o in r)i.push(o);if(i.length>0)throw new W(`${i.length} of ${s} weights are not set: ${i}`)}nm(a)}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion="tfjs-layers 3.21.0",e.backend="TensorFlow.js",e}toJSON(t,e=!0){const r=um(this.updatedConfig());return e?JSON.stringify(r):r}call(t,e){return K(()=>{t=qe(t);const r=new ya;for(let s=0;s<this.inputs.length;++s)r.add(this.inputs[s],t[s]);return su(this.outputs,r,e)})}computeMask(t,e){return K(()=>{let r;return t=qe(t),r=null==e?ei(null,t.length):qe(e),this.runInternalGraph(t,r)[1]})}computeOutputShape(t){const e=mh(t);if(e.length!==this.inputLayers.length)throw new W(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const r={};for(let o=0;o<e.length;o++)r[this.inputLayers[o].name+"_0_0"]=e[o];const s=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(ch);if(s.length>1)for(const o of s){const u=this.nodesByDepth[o];for(const c of u){const l=c.outboundLayer;if(-1!==this.inputLayers.map(f=>f.id).indexOf(l.id))continue;const h=[];for(let f=0;f<c.inboundLayers.length;f++)h.push(r[`${c.inboundLayers[f].name}_${c.nodeIndices[f]}_${c.tensorIndices[f]}`]);const p=mh(l.computeOutputShape(rr(h))),d=l.inboundNodes.indexOf(c);for(let f=0;f<p.length;f++)r[`${l.name}_${d}_${f}`]=p[f]}}const a=[],i=[];for(let o=0;o<this.outputLayers.length;o++)i.push(`${this.outputLayers[o].name}_${this.outputLayersNodeIndices[o]}_${this.outputLayersTensorIndices[o]}`);for(let o=0;o<i.length;o++){const u=i[o];ms(u in r),a.push(r[u])}return rr(a)}runInternalGraph(t,e){null==e&&(e=ei(null,t.length));const r={};for(let u=0;u<this.inputs.length;++u)r[this.inputs[u].id]=[t[u],e[u]];const s=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(ch);for(const u of s){const c=this.nodesByDepth[u];for(const l of c){const h=l.outboundLayer,p=l.inputTensors,d=l.outputTensors,f=new Array;for(const m of p)m.id in r&&f.push(r[m.id]);if(f.length===p.length){let m,g,y,b,x={};if(null!=l.callArgs&&(x=l.callArgs),1===f.length){const[w,k]=f[0];null==x.mask&&(x.mask=k),y=qe(h.call(w,x)),b=qe(h.computeMask(w,k)),m=[w],g=[k]}else m=f.map(w=>w[0]),g=f.map(w=>w[1]),null==x.mask&&(x.mask=g),y=qe(h.call(m,x)),b=qe(h.computeMask(m,g));if(h.activityRegularizer)throw new fe("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let w=0;w<d.length;++w)r[d[w].id]=[y[w],b[w]]}}}const a=[],i=[],o=[];for(const u of this.outputs){ms(u.id in r,`Could not compute output ${u.name} : ${u.id}`);const[c,l]=r[u.id];o.push(c.shape),a.push(c),i.push(l)}return[a,i,o]}buildNodeConversionMap(t){const e={};let r;for(const s of this.layers){r=s instanceof rs?1:0;for(let a=0;a<s.inboundNodes.length;a++){const i=rs.nodeKey(s,a);this.containerNodes.has(i)&&(e[i]=r,r+=1)}}return e}getLayer(t,e){if(null!=e){if(this.layers.length<=e)throw new W(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}if(null==t)throw new W("Provide either a layer name or layer index");for(const r of this.layers)if(r.name===t)return r;throw new W(`No such layer: ${t}`)}calculateLosses(){return K(()=>{const t=[];for(const e of this.layers)for(let r=0;r<e.inboundNodes.length;++r){const s=rs.nodeKey(e,r);this.containerNodes.has(s)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),r=[];for(const i of this.layers){const o=i.getClassName(),u=i.getConfig(),c=[];for(let h=0;h<i.inboundNodes.length;h++){const p=i.inboundNodes[h],d=rs.nodeKey(i,h);let f={};if(this.containerNodes.has(d)){if(p.callArgs)try{JSON.stringify(p.callArgs),f=p.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${p.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(p.inboundLayers.length>0){const m=[];for(let g=0;g<p.inboundLayers.length;g++){const y=p.inboundLayers[g],x=p.tensorIndices[g];let w=e[rs.nodeKey(y,p.nodeIndices[g])];null==w&&(w=0),m.push([y.name,w,x,f])}c.push(m)}}}const l={};l.name=i.name,l.className=o,l.config=u,l.inboundNodes=c,r.push(l)}t.layers=r;const s=[];for(let i=0;i<this.inputLayers.length;i++){const o=this.inputLayers[i],c=rs.nodeKey(o,this.inputLayersNodeIndices[i]);if(!this.containerNodes.has(c))continue;let l=e[c];null==l&&(l=0),s.push([o.name,l,this.inputLayersTensorIndices[i]])}t.inputLayers=s;const a=[];for(let i=0;i<this.outputLayers.length;i++){const o=this.outputLayers[i],c=rs.nodeKey(o,this.outputLayersNodeIndices[i]);if(!this.containerNodes.has(c))continue;let l=e[c];null==l&&(l=0),a.push([o.name,l,this.outputLayersTensorIndices[i]])}return t.outputLayers=a,t}static fromConfig(t,e,r={},s=!1){const a={},i={};function o(g,y){g.name in i?i[g.name].push(y):i[g.name]=[y]}function u(g,y){const b=[];let x;for(const w of y){const k=w[0],N=w[1],$=w[2];if(x=w[3]??{},!(k in a))return void o(g,y);const C=a[k];if(C.inboundNodes.length<=N)return void o(g,y);b.push(C.inboundNodes[N].outputTensors[$])}b.length>0&&g.apply(rr(b),x)}function c(g){const y=g.name,b=Os(g,null!=e.customObjects?e.customObjects:{});b.setFastWeightInitDuringBuild(s),a[y]=b,g.inboundNodes.forEach(x=>{if(!(x instanceof Array))throw new W(`Corrupted configuration, expected array for nodeData: ${x}`);o(b,x)})}const l=e.name,h=e.layers;for(const g of h)c(g);for(;!eT(i);)for(const g of h){const y=a[g.name];if(y.name in i){const b=i[y.name];delete i[y.name];for(const x of b)u(y,x)}}const p=[],d=[],f=e.inputLayers;for(const g of f){const y=g[0],b=g[1],x=g[2];ms(y in a),p.push(a[y].inboundNodes[b].outputTensors[x])}const m=e.outputLayers;for(const g of m){const y=g[0],b=g[1],x=g[2];ms(y in a),d.push(a[y].inboundNodes[b].outputTensors[x])}return new t({inputs:p,outputs:d,name:l})}get stateful(){if(this._stateful)throw new W("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){K(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}function rb(n,t){return function AT(n,t,e){const r=t.length;if(null==n||Array.isArray(n)&&0===n.length)return t.map(s=>null);if(1===r)return Array.isArray(n)&&1===n.length?n:"object"==typeof n&&t[0]in n?[n[t[0]]]:[n];if(Array.isArray(n)){if(n.length!==r)throw new Error(`Provided ${e} is an array of ${n.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return n}if("object"==typeof n&&Object.keys(n).length>0&&"object"==typeof n[Object.keys(n)[0]]){const s=[];return t.forEach(a=>{s.push(a in n?n[a]:null)}),s}throw new Error(`The model has multiple (${r}) outputs, so ${e} must be either an array with ${r} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(n)}`)}(n,t,"classWeight")}async function sb(n,t,e,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=e){const s=K(()=>{if(1===n.shape.length)return Ss(n);if(2===n.shape.length){if(n.shape[1]>1)return Qi(n,1);if(1===n.shape[1])return P(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),a=Array.from(await s.data());ve(s);const i=[];return a.forEach(o=>{if(null==e[o])throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);i.push(e[o])}),on(i,"float32")}return null}function FT(n,t){return M(n,t)}function ab(n,t){let e,r;e=t.xs,r=t.ys,I(null!=e&&null!=r,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const a=ib("input",n.inputNames,e),i=ib("output",n.outputNames,r),o=a[0].shape[0];I(a.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),I(i.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let u=0;u<a.length;u++)I(a[u].shape[0]===o,()=>`Batch size mismatch: input ${n.inputNames[u]} has ${a[u].shape[0]}; expected  ${o} based on input ${n.inputNames[0]}.`);for(let u=0;u<i.length;u++)I(i[u].shape[0]===o,()=>`Batch size mismatch: output ${n.outputNames[u]} has ${i[u].shape[0]}; expected  ${o} based on input ${n.inputNames[0]}.`);return{xs:a,ys:i}}function ib(n,t,e){if(e instanceof Se)return[e];if(Array.isArray(e))return I(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${n} keys ${t}.`),e;{const r=[];for(const s of t){if(null==e[s])throw new W(`The feature data generated by the dataset lacks the required ${n} key '${s}'.`);r.push(e[s])}return r}}function ob(n){return"function"==typeof n.iterator}function cm(n){I(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function lu(n,t,e){return null==n?[null]:Array.isArray(n)?n.map(r=>ai(r,t,e-t)):ai(n,t,e-t)}function hm(n,t){return K(()=>null==n?null:Array.isArray(n)?n.map(e=>hm(e,t)):S1(n,"int32"===t.dtype?t:Dt(t,"int32")))}function pm(n,t){const e=[];let r=0,s=null;for(;r<n;)s=r+t,s>=n&&(s=n),e.push([r,s]),r=s;return e}function lb(n){const t=[];n instanceof Se&&(n=[n]);for(let e=0;e<n.length;++e){const r=n[e];if(1===r.rank)t.push(tu(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function ss(n,t){if(null==n)return;const e=[];if(t instanceof Se)e.push(t.id);else if(Array.isArray(t))t.forEach(s=>e.push(s.id));else if(null!=t)for(const s in t)e.push(t[s].id);const r=[];if(n instanceof Se)-1===e.indexOf(n.id)&&r.push(n);else if(Array.isArray(n))n.forEach(s=>{-1===e.indexOf(s.id)&&r.push(s)});else if(null!=n)for(const s in n){const a=n[s];-1===e.indexOf(a.id)&&r.push(a)}r.forEach(s=>{s.isDisposed||s.dispose()})}function dm(n){return Array.isArray(n)}function ub(n){return!(n instanceof Se||dm(n))}function cb(n,t,e,r=!0,s=""){if(null==t||0===t.length){if(null!=n){let i=!1;if(dm(n)&&n.length>0)i=!0;else if(ub(n)){for(const o in n)if(n.hasOwnProperty(o)){i=!0;break}}else i=!0;if(i)throw new W(`Error when checking model ${s} expected no data, but got ${n}`)}return[]}if(null==n)return t.map(i=>null);let a;if(ub(n)){a=[];for(const i of t){if(null==n[i])throw new W(`No data provided for "${i}". Need data for each key in: ${t}`);a.push(n[i])}}else if(dm(n)){if(n.length!==t.length)throw new W(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);a=n}else{if(t.length>1)throw new W(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);a=[n]}if(a=lb(a),null!=e)for(let i=0;i<t.length;++i){if(null==e[i])continue;const o=a[i];if(o.shape.length!==e[i].length)throw new W(`Error when checking ${s}: expected ${t[i]} to have ${e[i].length} dimension(s). but got array with shape ${o.shape}`);for(let u=0;u<e[i].length;++u){if(0===u&&!r)continue;const c=o.shape[u],l=e[i][u];if(null!=l&&l>=0&&c!==l)throw new W(`${s} expected a batch of elements where each example has shape [${e[i].slice(1,e[i].length)}] (i.e.,tensor shape [*,${e[i].slice(1,e[i].length)}]) but the ${s} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return a}function hb(n,t,e,r=!0,s=""){let a;if(Array.isArray(n)){if(n.length!==t.length)throw new W(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${n.length} Tensors(s).`);a=n}else{if(t.length>1)throw new W(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);a=[n]}if(null!=e)for(let i=0;i<t.length;++i){if(null==e[i])continue;const o=a[i];if(o.shape.length!==e[i].length)throw new W(`Error when checking ${s}: expected ${t[i]} to have ${e[i].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let u=0;u<e[i].length;++u){if(0===u&&!r)continue;const c=o.shape[u],l=e[i][u];if(null!=l&&l!==c)throw new W(`Error when checking ${s}: expected ${t[i]} to have shape ${JSON.stringify(e[i])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}class po extends rs{constructor(t){super(t),this.isTraining=!1}summary(t,e,r=console.log){if(!this.built)throw new W("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function $T(n,t,e,r=console.log){const s=function(l){let h=!0;const p=[],d=[];for(const f in l.nodesByDepth)p.push(l.nodesByDepth[f]);for(const f of p){if(f.length>1||1===f.length&&f[0].inboundLayers.length>1){h=!1;break}d.push(...f)}if(h)for(const f of l.layers){let m=!1;for(const g of f.inboundNodes)if(-1!==d.indexOf(g)){if(m){h=!1;break}m=!0}if(!h)break}return h}(n),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(s?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(l=>Math.floor(t*l))),!s){a.push("Receives inputs"),i=[];for(const l in n.nodesByDepth)i.push(...n.nodesByDepth[l])}r("_".repeat(t)),Ch(a,e,r),r("=".repeat(t));const o=n.layers;for(let l=0;l<o.length;++l)s?ET(o[l],e,r):RT(o[l],e,i,r),r((l===o.length-1?"=":"_").repeat(t));n.checkTrainableWeightsConsistency();const u=function(l){let h;return h=gh(null!=l.collectedTrainableWeights?l.collectedTrainableWeights:l.trainableWeights),h}(n),c=gh(n.nonTrainableWeights);r(`Total params: ${u+c}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${c}`),r("_".repeat(t))}(this,t,e,r)}compile(t){if(null==t.loss&&(t.loss=[]),this.loss=t.loss,"string"==typeof t.optimizer)this.optimizer_=function(i){const o={Adagrad:()=>uo.adagrad(.01),Adadelta:()=>uo.adadelta(1,.95,yn()),Adam:()=>uo.adam(.001,.9,.999,yn()),Adamax:()=>uo.adamax(.002,.9,.999,yn(),0),RMSProp:()=>uo.rmsprop(.001,.9,0,yn()),SGD:()=>uo.sgd(.01)};if(o.adagrad=o.Adagrad,o.adadelta=o.Adadelta,o.adam=o.Adam,o.adamax=o.Adamax,o.rmsprop=o.RMSProp,o.sgd=o.SGD,i in o)return o[i]();throw new W(`Unknown Optimizer ${i}`)}(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof oa))throw new W("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(Array.isArray(t.loss)||"string"==typeof t.loss||"function"==typeof t.loss)if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new W(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(o=>im(o))}else{const i=im(t.loss);this.outputs.forEach(o=>{e.push(i)})}else{t.loss=t.loss;for(const i in t.loss)if(-1===this.outputNames.indexOf(i))throw new W(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)null==t.loss[i]&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),e.push(im(t.loss[i]))}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const o=this.internalOutputShapes[i];this.feedOutputNames.push(this.outputNames[i]),this.feedOutputShapes.push(o),this.feedLossFns.push(this.lossFunctions[i])}const r=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],si("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(-1!==r.indexOf(i))continue;const o=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([o,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const s=function(i,o){if(null==i||Array.isArray(i)&&0===i.length)return o.map(c=>[]);let u;if("string"==typeof i||"function"==typeof i)u=[i];else{if(!Array.isArray(i)&&"object"!=typeof i)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${i}`);u=i}if(Array.isArray(u))return o.map(c=>u);{const c=[];for(const l of o){let h=u.hasOwnProperty(l)?u[l]:[];Array.isArray(h)||(h=[h]),c.push(h)}return c}}(t.metrics,this.outputNames),a=(i,o,u)=>{this.outputNames.length>1&&(o=this.outputNames[i]+"_"+o),this.metricsNames.push(o),this.metricsTensors.push([u,i])};si("metric",()=>{for(let i=0;i<this.outputs.length;++i)-1===r.indexOf(i)&&(o=>{let u,c,l;for(const h of o){if("string"==typeof h&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(h)){const d=this.internalOutputShapes[i];let f;1===d[d.length-1]||this.lossFunctions[i]===Ih?-1!==["accuracy","acc"].indexOf(h)?c=Y1:-1!==["crossentropy","ce"].indexOf(h)&&(c=NT):this.lossFunctions[i]===kh?-1!==["accuracy","acc"].indexOf(h)?c=ST:-1!==["crossentropy","ce"].indexOf(h)&&(c=Q1):-1!==["accuracy","acc"].indexOf(h)?c=Z1:-1!==["crossentropy","ce"].indexOf(h)&&(c=J1),-1!==["accuracy","acc"].indexOf(h)?f="acc":-1!==["crossentropy","ce"].indexOf(h)&&(f="ce"),l=c,u=""+f}else l=TT(h),u=""+Th(h);let p;si(u,()=>{p=l}),a(i,u,p)}})(s[i])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,r={}){const s=r.batchSize??32;cm(s);const a=this.standardizeUserDataXY(t,e,!0,s);try{const i=a[0].concat(a[1]);return this.makeTestFunction(),rr(this.testLoop(this.testFunction,i,s,r.verbose,r.steps))}finally{ss(a[0],t),ss(a[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),async function(r,s,a){const i=null!=(a=a||{}).batches,o=r.testFunction;let u=[];if(a.verbose>0)throw new fe("Verbose mode is not implemented yet.");I(!i||a.batches>0&&Number.isInteger(a.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(a.batches)}`);const c="function"==typeof s.next?s:await s.iterator();let l=0,h=0;for(;!i||h<a.batches;){const p=await c.next();if(u=K(()=>{if(p.value){const{xs:d,ys:f}=ab(r,p.value),m=d.concat(f),g=K(()=>o(m));if(ve(m),0===h)for(let b=0;b<g.length;++b)u.push(Qt(0));const y=m[0].shape[0];for(let b=0;b<g.length;++b){const x=g[b],w=u[b];u[b]=K(()=>yt(u[b],M(y,x))),h>0&&ve(w)}ve(g),l+=y,++h}return u}),p.done){i&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${a.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let p=0;p<u.length;++p){const d=u[p];u[p]=Bt(u[p],l),ve(d)}return rr(u)}(this,t,e)}checkNumSamples(t,e,r,s="steps"){let a;if(null!=r){if(a=null,null!=e)throw new W(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else{if(null==t)throw new W(`Either the input data should have a defined shape, or ${s} shoud be specified.`);a=Array.isArray(t)?t[0].shape[0]:t.shape[0]}return a}execute(t,e){if(Array.isArray(e)&&0===e.length)throw new W("`outputs` is an empty Array, which is not allowed.");const r=Array.isArray(e),a=this.retrieveSymbolicTensors(r?e:[e]),i=new ya;if(t instanceof Se&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new W(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)i.add(this.inputs[u],t[u])}else for(const u of this.inputs){const c=t[u.name];if(null==c)throw new W(`No value is provided for the model's input ${u.name}`);i.add(u,c)}const o=su(a,i);return r?o:o[0]}retrieveSymbolicTensors(t){const e=ei(null,t.length);let r=t.length;for(const s of this.layers){const a=Array.isArray(s.output)?s.output:[s.output],i=a.map(o=>o.name);for(let o=0;o<t.length;++o){const u=i.indexOf(t[o]);if(-1!==u&&(e[o]=a[u],r--),0===r)break}if(0===r)break}if(r>0){const s=[];throw e.forEach((a,i)=>{null==a&&s.push(t[i])}),new W(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(s)}`)}return e}predictLoop(t,e=32,r=!1){return K(()=>{const s=this.checkNumSamples(t);if(r)throw new fe("Verbose predictLoop() is not implemented yet.");const a=pm(s,e),i=this.outputs.map(o=>[]);for(let o=0;o<a.length;++o)K(()=>{const l=lu(t,a[o][0],a[o][1]),h=[];if(Array.isArray(l))for(let d=0;d<l.length;++d)h.push({key:this.inputs[d],value:l[d]});else h.push({key:this.inputs[0],value:l});const p=new ya(h);return su(this.outputs,p)}).forEach((u,c)=>i[c].push(u));return rr(i.map(o=>je(o,0)))})}predict(t,e={}){const r=lb(t);hb(r,this.inputNames,this.feedInputShapes,!1);try{const s=e.batchSize??32;return cm(s),this.predictLoop(r,s)}finally{ss(r,t)}}predictOnBatch(t){hb(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,r=!0,s){if(null==this.optimizer_)throw new Mr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let i=0;i<this.feedOutputShapes.length;++i){const o=this.feedOutputShapes[i];a.push(this.feedLossFns[i]===kh?o.slice(0,o.length-1).concat([1]):o)}if(function(i,o,u){const c=fa(i.map(h=>h.shape[0]));c.sort();const l=fa(o.map(h=>h.shape[0]));if(l.sort(),c.length>1)throw new W(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(i.map(h=>h.shape))}`);if(l.length>1)throw new W(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(o.map(h=>h.shape))}`);if(c.length>0&&l.length>0&&!he(c,l))throw new W(`Input Tensors should have the same number of samples as target Tensors. Found ${c[0]} input sample(s) and ${l[0]} target sample(s).`)}(t=cb(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=cb(e,this.feedOutputNames,a,!1,"target")),function(i,o,u){const c=[vh,Ih,ou];for(let l=0;l<i.length;++l){const h=i[l],p=o[l],d=u[l];if(null!=p){if(p===ou&&1===h.shape[h.shape.length-1])throw new W(`You are passing a target array of shape ${h.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==c.indexOf(p)){const f=h.shape.slice(1),m=d.slice(1);for(let g=0;g<f.length;++g){const y=f[g],b=m[g];if(null!=b&&y!==b)throw new W(`A target Tensor with shape ${h.shape} was passed for an output of shape ${d}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&t[0].shape[0]%s!=0)throw new W(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,r,s,a=!0,i){const[o,u]=this.standardizeUserDataXY(t,e,a,i);if(null!=r)throw new Error("sample weight is not supported yet.");let c=null;if(null!=s){const l=rb(s,this.outputNames);c=[];for(let h=0;h<l.length;++h)c.push(await sb(u[h],null,l[h]))}return[o,u,c]}testLoop(t,e,r,s=0,a){return K(()=>{const i=this.checkNumSamples(e,r,a,"steps"),o=[];if(s>0)throw new fe("Verbose mode is not implemented yet.");if(null!=a)throw new fe("steps mode in testLoop() is not implemented yet");{const u=pm(i,r),c=on(es(0,i));for(let l=0;l<u.length;++l){const h=u[l][0],p=u[l][1],d=ai(c,h,p-h),f=hm(e,d),m=t(f);if(0===l)for(let g=0;g<m.length;++g)o.push(Qt(0));for(let g=0;g<m.length;++g)o[g]=yt(o[g],M(p-h,m[g]))}for(let l=0;l<o.length;++l)o[l]=Bt(o[l],i)}return o})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let r=0;r<t.length;++r){const s=t[r];let a=s;m1(t,s)>1&&(a+=`_${m1(t.slice(0,r),s)}`),e.push(a)}return e}makeTrainFunction(){return t=>{const e=[],r=t.slice(0,this.inputs.length),s=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],o=this.collectedTrainableWeights.map(u=>u.read());return[this.optimizer_.minimize(()=>{const u=[];for(let p=0;p<this.inputs.length;++p)u.push({key:this.inputs[p],value:r[p]});const c=new ya(u),l=su(this.outputs,c,{training:!0});let h;for(let p=0;p<this.lossFunctions.length;++p){let d=(0,this.lossFunctions[p])(s[p],l[p]);null!=a[p]&&(d=FT(d,a[p]));const f=rn(d);e.push(f),h=0===p?d:yt(h,d)}for(let p=0;p<this.metricsTensors.length;++p){let d;if(this.outputs.length>1&&p<this.outputs.length)d=e[p];else{const m=this.metricsTensors[p][1];d=rn((0,this.metricsTensors[p][0])(s[m],l[m]))}An(d),i.push(d)}return h=rn(h),this.calculateLosses().forEach(p=>{h=yt(h,p)}),h},!0,o)].concat(i)}}makeTestFunction(){this.testFunction=t=>K(()=>{const e=[];let r;const s=t.slice(0,this.inputs.length),a=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let c=0;c<this.inputs.length;++c)i.push({key:this.inputs[c],value:s[c]});const o=new ya(i),u=su(this.outputs,o);for(let c=0;c<this.lossFunctions.length;++c){const h=rn((0,this.lossFunctions[c])(a[c],u[c]));r=0===c?h:yt(r,h),e.push(r)}for(let c=0;c<this.metricsTensors.length;++c){const h=this.metricsTensors[c][1],p=rn((0,this.metricsTensors[c][0])(a[h],u[h]));e.push(p)}return e})}async fit(t,e,r={}){return async function _T(n,t,e,r={}){if(n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,a,i,o,u,c,l,h,p;n.isTraining=!0;try{const d=r.batchSize??32;cm(d);const f=!1,m=await n.standardizeUserData(t,e,r.sampleWeight,r.classWeight,f,d);s=m[0],a=m[1],p=m[2];let g,y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2!==r.validationData.length)throw 3===r.validationData.length?new fe("validationData including sample weights is not supported yet."):new W(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);u=r.validationData[0],c=r.validationData[1];const R=!0,A=await n.standardizeUserData(u,c,null,null,R,d);l=A[0],h=A[1],g=l.concat(h)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){y=!0;const R=Math.floor(s[0].shape[0]*(1-r.validationSplit)),A=s[0].shape[0];l=lu(s,R,A),i=s,s=lu(s,0,R),h=lu(a,R,A),o=a,a=lu(a,0,R),g=l.concat(h)}else null!=r.validationSteps&&(y=!0);const b=s.concat(a).concat(p);n.checkTrainableWeightsConsistency();const x=n.makeTrainFunction(),w=n.getDedupedMetricsNames();let k,N;y?(n.makeTestFunction(),k=n.testFunction,N=w.slice().concat(w.map(R=>"val_"+R))):(k=null,g=[],N=w.slice());const $=q1(r.callbacks,r.yieldEvery);return await async function(R,A,_,z,V,X,J,Y,et,rt,at,dt,pt,ft,gt){null==V&&(V=32),null==X&&(X=1),null==at&&(at=!0),null==pt&&(pt=0);let St=!1;null!=et&&null!=rt&&(St=!0);const Ct=R.checkNumSamples(_,V,null,"steps_per_epoch");let At;null!=Ct&&(At=es(0,Ct)),null==J&&(J=1);const{callbackList:Ft,history:Jt}=K1(Y,J,X,pt,Ct,null,V,St,dt);Ft.setModel(R),R.history=Jt,await Ft.onTrainBegin(),R.stopTraining_=!1;for(let Zt=pt;Zt<X;++Zt){await Ft.onEpochBegin(Zt);const re={};{if("batch"===at)throw new fe("batch shuffling is not implemneted yet");at&&oe(At);const Gt=on(At),ue=pm(Ct,V);for(let se=0;se<ue.length;++se){const pe={};if(await Ft.onBatchBegin(se,pe),K(()=>{const ce=ue[se][0],ye=ue[se][1],Ce=ai(Gt,ce,ye-ce);pe.batch=se,pe.size=ye-ce;const un=hm(_,Ce),Bn=A(un);for(let Ze=0;Ze<z.length;++Ze){const br=Bn[Ze];pe[z[Ze]]=br,An(br)}if(se===ue.length-1&&St){const Ze=R.testLoop(et,rt,V);for(let ze=0;ze<z.length;++ze){const br=z[ze],Ln=Ze[ze];An(Ln),re["val_"+br]=Ln}}}),await Ft.onBatchEnd(se,pe),H1(pe),R.stopTraining_)break}Gt.dispose()}if(await Ft.onEpochEnd(Zt,re),R.stopTraining_)break}return await Ft.onTrainEnd(),await R.history.syncData(),R.history}(n,x,b,w,d,r.epochs,r.verbose,$,k,g,r.shuffle,N,r.initialEpoch)}finally{n.isTraining=!1,ss(s,t),ss(a,e),ss(i,t),ss(o,e),ss(l,u),ss(h,c),null!=p&&ve(p)}}(this,t,e,r)}async fitDataset(t,e){return async function DT(n,t,e){const r=null!=e.batchesPerEpoch;if(I(null!=n.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),I(null!=e,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),I(null!=e.epochs&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),I(!r||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),I(null==e.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const s=null!=e.validationData;let a,i;if(s)if(ob(e.validationData))I(null==e.validationBatches||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const g=function(y){if(3===y.length)throw new fe("Validation with sample weights is not implemented yet.");return{xs:y[0],ys:y[1]}}(e.validationData);a=g.xs,i=g.ys}const o=n.makeTrainFunction(),u=n.getDedupedMetricsNames();let c;c=s?u.slice().concat(u.map(g=>"val_"+g)):u.slice();const l=q1(e.callbacks,e.yieldEvery),h=e.verbose??1,{callbackList:p,history:d}=K1(l,h,e.epochs,null,null,function(g,y){let b=null;return null!=y.batchesPerEpoch?b=y.batchesPerEpoch:Number.isFinite(g.size)&&(b=g.size),b}(t,e),null,s,c);p.setModel(n),n.history=d,await p.onTrainBegin(),n.stopTraining_=!1;let f=e.initialEpoch??0,m=await t.iterator();for(;f<e.epochs;){const g={};await p.onEpochBegin(f);let y=0,b=0;for(r||(m=await t.iterator());!r||y<e.batchesPerEpoch;){const x=await m.next();if(r&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+e.batchesPerEpoch*e.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=x.value){const{xs:w,ys:k}=ab(n,x.value),N={};N.batch=b,N.size=w[0].shape[0],await p.onBatchBegin(b,N);const $=[];if(null!=e.classWeight){const A=rb(e.classWeight,n.outputNames);for(let _=0;_<A.length;++_)$.push(await sb(k[_],null,A[_]))}const C=w.concat(k).concat($),R=o(C);ve(C);for(let A=0;A<u.length;++A){const z=R[A];N[u[A]]=z,An(z)}await p.onBatchEnd(b,N),H1(N),b++,y++}if(r?y>=e.batchesPerEpoch:x.done){if(s){let w;w=ob(e.validationData)?qe(await n.evaluateDataset(e.validationData,{batches:e.validationBatches})):qe(n.evaluate(a,i,{batchSize:e.validationBatchSize??32,verbose:0}));for(let k=0;k<n.metricsNames.length;++k)g[`val_${n.metricsNames[k]}`]=w[k]}break}if(n.stopTraining_)break}if(await p.onEpochEnd(f,g),f++,n.stopTraining_)break}return await p.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}(this,t,e)}async trainOnBatch(t,e){const r=await this.standardizeUserData(t,e),s=r[0],a=r[1],i=this.makeTrainFunction()(s.concat(a)),o=[];for(const u of i){const c=await u.data();o.push(c[0])}return ve(i),ss(r[0],t),ss(r[1],e),rr(o)}getNamedWeights(t){const e=[],r=null!=t&&t.trainableOnly,s=r?this.trainableWeights:this.weights,a=this.getWeights(r);for(let i=0;i<s.length;++i)r&&!s[i].trainable||e.push({name:s[i].originalName,tensor:a[i]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(0===t.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const e=Nd().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-Nd().numTensors}return t}getLossIdentifiers(){let t;if("string"==typeof this.loss)t=Ds(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>Ds(e))}else{const e=Object.keys(this.loss);t={};const r=this.loss;for(const s of e){if("string"!=typeof r[s])throw new Error("Serialization of non-string loss is not supported.");t[s]=Ds(r[s])}}return t}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Ds(Th(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>Ds(Th(t)));{const t={};for(const e in this.metrics)t[e]=Ds(Th(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(null!=t.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=t.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=t.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const e=Os(lm(t.optimizer_config));let r,s;if("string"==typeof t.loss)r=ni(t.loss);else if(Array.isArray(t.loss))r=t.loss.map(a=>ni(a));else if(null!=t.loss){r={};for(const a in t.loss)r[a]=ni(t.loss[a])}if(Array.isArray(t.metrics))s=t.metrics.map(a=>ni(a));else if(null!=t.metrics){s={};for(const a in t.metrics)s[a]=ni(t.metrics[a])}this.compile({loss:r,metrics:s,optimizer:e})}async save(t,e){if("string"==typeof t){const a=Jg(t);if(0===a.length)throw new W(`Cannot find any save handlers for URL '${t}'`);if(a.length>1)throw new W(`Found more than one (${a.length}) save handlers for URL '${t}'`);t=a[0]}if(null==t.save)throw new W("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await ld(this.getNamedWeights(e)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.21.0",convertedBy:null};if(null!=e&&e.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const a="optimizer",{data:i,specs:o}=await ld(await this.optimizer.getWeights(),a);r.specs.push(...o),r.data=Fc([r.data,i])}return null!=this.userDefinedMetadata&&(tb(this.userDefinedMetadata,this.name,!0),s.userDefinedMetadata=this.userDefinedMetadata),s.weightData=r.data,s.weightSpecs=r.specs,t.save(s)}setUserDefinedMetadata(t){tb(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}po.className="Model",bt(po);class pb extends po{}pb.className="Functional",bt(pb);class uu extends po{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=null!=t.name?t.name:ph("sequential_"),null!=t.layers)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new W(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof uu||t instanceof po;let r;if(e){if(r=t,1!==r.outputs.length)throw new W("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==r.inputs.length)throw new W("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===t.inboundNodes.length){if(null==t.batchInputShape)throw new W("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const s=function(a){if(null==a.batchShape&&null==a.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=a.batchShape&&null!=a.shape)throw new W("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let i=a.batchShape;null!=a.shape&&null==i&&(i=[null].concat(a.shape));let o=a.dtype;return null==o&&(o="float32"),new ru({batchInputShape:i,name:a.name,dtype:o,sparse:a.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(s)}if(e)this.outputs=r.outputs,this.inputs=r.inputs;else{if(1!==t.inboundNodes.length)throw new W(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(1!==t.inboundNodes[0].outputTensors.length)throw new W("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=L1(this.outputs[0])}this.inboundNodes=[],new yh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:ei(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(s=>s.shape),outputShapes:this.outputs[0].shape})}else{const s=t.apply(this.outputs[0]);if(Array.isArray(s))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[s],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return null==this.model&&this.build(),this.model.call(t,e)}build(t){if(Me(t),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new po({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,r=console.log){this.built||this.build(),super.summary(t,e,r)}setWeights(t){null==this.model&&this.build(),this.model.setWeights(t)}evaluate(t,e,r={}){if(!this.built)throw new Mr("The model needs to be compiled before being used.");return this.model.evaluate(t,e,r)}async evaluateDataset(t,e){if(!this.built)throw new Mr("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return null==this.model&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return null==this.model&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,r={}){if(!this.built)throw new Mr("The model needs to be compiled before being used.");return this.model.fit(t,e,r)}async fitDataset(t,e){if(!this.built)throw new Mr("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,r={},s=!1){let a,i={};if(e instanceof Array){if(null==e[0].className||"Merge"===e[0].className)throw new W("Legacy serialization format not supported yet.");a=e}else I(null!=e.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=e.layers,delete e.layers,i=e;const o=new t(i);if(!(o instanceof uu))throw new fe(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const u of a){const c=Os(u,void 0,s);s&&c.setFastWeightInitDuringBuild(!0),o.add(c)}return o}set stopTraining(t){if(null==this.model)throw new W("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(null==this.model)throw new W("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const r={};r.className=e.getClassName(),r.config=e.getConfig(),t.push(r)}return{name:this.name,layers:t}}}uu.className="Sequential",bt(uu);class sr extends Ji{getConfig(){return{}}}class db extends sr{apply(t,e=1){return function(r,s=1){if(1!==s)throw new fe(`Support for alpha values other than 1 (${s}) is not implemented yet.`);return Ll(r)}(t,e)}}db.className="elu",bt(db);class fb extends sr{apply(t){return qd(t)}}fb.className="selu",bt(fb);class mb extends sr{apply(t){return ps(t)}}mb.className="relu",bt(mb);class gb extends sr{apply(t){return K(()=>Wl(6,ps(t)))}}gb.className="relu6",bt(gb);class yb extends sr{apply(t){return t}}yb.className="linear",bt(yb);class bb extends sr{apply(t){return Xr(t)}}bb.className="sigmoid",bt(bb);class xb extends sr{apply(t){return e=t,K(()=>{const r=yt(.5,M(.2,e));return hr(r,0,1)});var e}}xb.className="hardSigmoid",bt(xb);class wb extends sr{apply(t){return so(t)}}wb.className="softplus",bt(wb);class vb extends sr{apply(t){return e=t,K(()=>Bt(e,yt(mn(e),1)));var e}}vb.className="softsign",bt(vb);class kb extends sr{apply(t){return eo(t)}}kb.className="tanh",bt(kb);class fm extends sr{apply(t,e=-1){return Qc(t,e)}}fm.className="softmax",bt(fm);class Ib extends sr{apply(t,e=-1){return Ld(t,e)}}Ib.className="logSoftmax",bt(Ib);class Nb extends sr{apply(t,e=1){return K(()=>M(Xr(M(t,e)),t))}}Nb.className="swish",bt(Nb);class Sb extends sr{apply(t){return K(()=>M(t,eo(so(t))))}}function ba(n){return n.getClassName()}function mm(n,t={}){return Zl(n,Fr.getMap().classNameMap,t,"activation")}function xa(n){if(null==n)return mm({className:"linear",config:{}});if("string"==typeof n){const t={};return t.className=n,t.config={},mm(t)}return n instanceof sr?n:mm(n)}Sb.className="mish",bt(Sb);class Tb extends Ji{}class Cb extends Tb{constructor(t){super(),function OT(n){if(null!=n&&"object"!=typeof n)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}(t),this.l1=null==t||null==t.l1?.01:t.l1,this.l2=null==t||null==t.l2?.01:t.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(t){return K(()=>{let e=gn([1]);return this.hasL1&&(e=yt(e,Vt(M(this.l1,mn(t))))),this.hasL2&&(e=yt(e,Vt(M(this.l2,eu(t))))),P(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}Cb.className="L1L2",bt(Cb);const $b={l1l2:"L1L2"};function Be(n){return Pf(n)}function Eb(n,t={}){return Zl(n,Fr.getMap().classNameMap,t,"regularizer")}function Ye(n){return null==n?null:"string"==typeof n?Eb({className:n in $b?$b[n]:n,config:{}}):n instanceof Tb?n:Eb(n)}class Rb extends Ee{constructor(t){super(t??{}),this.supportsMasking=!0,null!=t&&(this.maxValue=t.maxValue)}call(t,e){t=me(t);let r=ps(t);return null!=this.maxValue&&(r=hr(r,0,this.maxValue)),r}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}Rb.className="ReLU",bt(Rb);class Ab extends Ee{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,null==t&&(t={}),this.alpha=t.alpha??this.DEFAULT_ALPHA}call(t,e){const r=me(t);return Gc(r,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Ab.className="LeakyReLU",bt(Ab);class Fb extends Ee{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==t&&(t={}),this.supportsMasking=!0,this.alphaInitializer=Xe(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ye(t.alphaRegularizer),this.alphaConstraint=wn(t.alphaConstraint),null==t.sharedAxes)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else{if("number"!=typeof t.sharedAxes)throw new W(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`);this.sharedAxes=[t.sharedAxes]}}build(t){const e=(t=Me(t)).slice(1);if(null!=this.sharedAxes)for(const s of this.sharedAxes)e[s-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const r={};if(null!=this.sharedAxes)for(let s=1;s<t.length;++s)r[s]=t[s];this.inputSpec=[new bn({ndim:t.length,axes:r})],this.built=!0}call(t,e){return t=me(t),Yc(t,this.alpha.read())}getConfig(){const t={alphaInitializer:en(this.alphaInitializer),alphaRegularizer:Be(this.alphaRegularizer),alphaConstraint:xn(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}Fb.className="PReLU",bt(Fb);class Db extends Ee{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA=1,null==t&&(t={}),null!=t.alpha&&t.alpha!==this.DEFAULT_ALPHA)throw new fe(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha??this.DEFAULT_ALPHA}call(t,e){const r=me(t);return Ll(r)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}Db.className="ELU",bt(Db);class _b extends Ee{constructor(t){super(t??{}),this.DEFAULT_THETA=1,null==t&&(t={}),this.theta=t.theta??this.DEFAULT_THETA}call(t,e){const r=me(t);return M(r,Dt(Ir(r,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}_b.className="ThresholdedReLU",bt(_b);class Ob extends Ee{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,null==t&&(t={}),this.softmax=(new fm).apply,this.axis=t.axis??this.DEFAULT_AXIS}call(t,e){const r=me(t);return this.softmax(r,this.axis)}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function fo(n,t,e){if("number"==typeof n)return ei(n,t);if(n.length!==t)throw new W(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${n.length} elements.`);for(let r=0;r<t;++r){const s=n[r];if(!uT(s))throw new W(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(n)} including a non-integer number ${s}`)}return n}function as(n,t,e,r,s=1){if(null==n)return n;let a;return a="same"===e?n:n-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function ys(n,t,e,r){if(null==n)return null;if("valid"===r)n=n*t+ga([e-t,0]);else{if("same"!==r)throw new W(`Unsupport padding mode: ${r}.`);n*=t}return n}function gm(n,t){return K(()=>(ln(t),"channelsFirst"===t?Te(n,[0,2,3,1]):n))}function Mb(n,t){return K(()=>(ln(t),"channelsFirst"===t?Te(n,[0,2,3,4,1]):n))}function Lb(n,t,e,r=[1,1],s="valid",a,i,o=null){return K(()=>{if(null==a&&(a="channelsLast"),ln(a),3!==n.rank&&4!==n.rank)throw new W(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(3!==t.rank&&4!==t.rank)throw new W(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let u=gm(n,a);if("causal"===s)throw new fe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Sy({x:u,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:e,activation:o}),"channelsFirst"===a&&(u=Te(u,[0,3,1,2])),u})}Ob.className="Softmax",bt(Ob);class $h extends Ee{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",$h.verifyArgs(e),this.rank=t,Tn(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new fe(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=fo(e.kernelSize,t,"kernelSize"),this.strides=fo(e.strides??1,t,"strides"),this.padding=e.padding??"valid",$r(this.padding),this.dataFormat=e.dataFormat??"channelsLast",ln(this.dataFormat),this.activation=xa(e.activation),this.useBias=null==e.useBias||e.useBias,this.biasInitializer=Xe(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=wn(e.biasConstraint),this.biasRegularizer=Ye(e.biasRegularizer),this.activityRegularizer=Ye(e.activityRegularizer),this.dilationRate=fo(e.dilationRate??1,t,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new W(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new W(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new W(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(t){if(ms("kernelSize"in t,"required key 'kernelSize' not in config"),"number"!=typeof t.kernelSize&&!Wf(t.kernelSize,"number",1,3))throw new W(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ba(this.activation),useBias:this.useBias,biasInitializer:en(this.biasInitializer),biasRegularizer:Be(this.biasRegularizer),activityRegularizer:Be(this.activityRegularizer),biasConstraint:xn(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class mo extends $h{constructor(t,e){super(t,e),this.kernel=null,mo.verifyArgs(e),this.filters=e.filters,Tn(this.filters,"filters"),this.kernelInitializer=Xe(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=wn(e.kernelConstraint),this.kernelRegularizer=Ye(e.kernelRegularizer)}build(t){t=Me(t);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new W(`The channel dimension of the input should be defined. Found ${t[e]}`);const r=t[e],s=this.kernelSize.concat([r,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:r}}],this.built=!0}call(t,e){return K(()=>{let r;t=me(t);const s=null==this.bias?null:this.bias.read(),a=y1(this.activation.getClassName());if(null!=a&&2===this.rank)r=Lb(t,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)r=function MT(n,t,e,r=1,s="valid",a,i=1){return K(()=>{if(null==a&&(a="channelsLast"),ln(a),3!==n.shape.length)throw new W(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(3!==t.shape.length)throw new W(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=e&&1!==e.shape.length)throw new W(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(n=Te(n,[0,2,1])),"causal"===s)throw new fe("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=$d(n,t,r,"same"===s?"same":"valid","NWC",i);return null!=e&&(o=ns(o,e)),o})}(t,this.kernel.read(),s,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)r=Lb(t,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new fe("convolutions greater than 3D are not implemented yet.");r=function LT(n,t,e,r=[1,1,1],s="valid",a,i){return K(()=>{if(null==a&&(a="channelsLast"),ln(a),4!==n.rank&&5!==n.rank)throw new W(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(4!==t.rank&&5!==t.rank)throw new W(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let o=Mb(n,a);if("causal"===s)throw new fe("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=U0(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=e&&(o=ns(o,e)),"channelsFirst"===a&&(o=Te(o,[0,4,1,2,3])),o})}(t,this.kernel.read(),s,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(r=this.activation.apply(r))}return r})}computeOutputShape(t){t=Me(t);const e=[],r="channelsLast"===this.dataFormat?t.slice(1,t.length-1):t.slice(2);for(let a=0;a<r.length;++a){const i=as(r[a],this.kernelSize[a],this.padding,this.strides[a],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[a]);e.push(i)}let s=[t[0]];return"channelsLast"===this.dataFormat?(s=s.concat(e),s.push(this.filters)):(s.push(this.filters),s=s.concat(e)),s}getConfig(){const t={filters:this.filters,kernelInitializer:en(this.kernelInitializer),kernelRegularizer:Be(this.kernelRegularizer),kernelConstraint:xn(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||"number"!=typeof t.filters||t.filters<1)throw new W(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class cu extends mo{constructor(t){super(2,t),cu.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Wf(t.kernelSize,"number",1,2))throw new W(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}cu.className="Conv2D",bt(cu);class hu extends mo{constructor(t){super(3,t),hu.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&(!Array.isArray(t.kernelSize)||1!==t.kernelSize.length&&3!==t.kernelSize.length))throw new W(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}hu.className="Conv3D",bt(hu);class zb extends cu{constructor(t){if(super(t),this.inputSpec=[new bn({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new W(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(4!==(t=Me(t)).length)throw new W("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new W("The channel dimension of the inputs should be defined. Found `None`.");const r=t[e],s=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new bn({ndim:4,axes:{[e]:r}})],this.built=!0}call(t,e){return K(()=>{let r=me(t);if(4!==r.shape.length)throw new W(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const s=r.shape;let i,o;"channelsFirst"===this.dataFormat?(i=2,o=3):(i=1,o=2);const c=s[o],h=this.kernelSize[1],d=this.strides[1],f=[s[0],ys(s[i],this.strides[0],this.kernelSize[0],this.padding),ys(c,d,h,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(r=Te(r,[0,2,3,1]));let m=Rd(r,this.kernel.read(),f,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(m=Te(m,[0,3,1,2])),null!=this.bias&&(m=ns(m,this.bias.read(),this.dataFormat)),null!=this.activation&&(m=this.activation.apply(m)),m})}computeOutputShape(t){const e=(t=Me(t)).slice();let r,s,a;"channelsFirst"===this.dataFormat?(r=1,s=2,a=3):(r=3,s=1,a=2);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.strides[0],c=this.strides[1];return e[r]=this.filters,e[s]=ys(e[s],u,i,this.padding),e[a]=ys(e[a],c,o,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}zb.className="Conv2DTranspose",bt(zb);class Pb extends hu{constructor(t){if(super(t),this.inputSpec=[new bn({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new W(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(5!==(t=Me(t)).length)throw new W("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e])throw new W("The channel dimension of the inputs should be defined. Found `None`.");const r=t[e],s=this.kernelSize.concat([this.filters,r]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new bn({ndim:5,axes:{[e]:r}})],this.built=!0}call(t,e){return K(()=>{let r=me(t);if(5!==r.shape.length)throw new W(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${r.shape.length}`);const s=r.shape;let i,o,u;"channelsFirst"===this.dataFormat?(u=2,i=3,o=4):(u=1,i=2,o=3);const l=s[i],h=s[o],d=this.kernelSize[1],f=this.kernelSize[2],g=this.strides[1],y=this.strides[2],b=[s[0],ys(s[u],this.strides[0],this.kernelSize[0],this.padding),ys(l,g,d,this.padding),ys(h,y,f,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(r=Te(r,[0,2,3,4,1]));let x=H0(r,this.kernel.read(),b,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(x=Te(x,[0,4,1,2,3])),null!==this.bias&&(x=ns(x,this.bias.read(),this.dataFormat)),null!==this.activation&&(x=this.activation.apply(x)),x})}computeOutputShape(t){const e=(t=Me(t)).slice();let r,s,a,i;"channelsFirst"===this.dataFormat?(r=1,s=2,a=3,i=4):(r=4,s=1,a=2,i=3);const o=this.kernelSize[0],u=this.kernelSize[1],c=this.kernelSize[2],l=this.strides[0],h=this.strides[1],p=this.strides[2];return e[r]=this.filters,e[s]=ys(e[s],l,o,this.padding),e[a]=ys(e[a],h,u,this.padding),e[i]=ys(e[i],p,c,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}Pb.className="Conv3DTranspose",bt(Pb);class Bb extends mo{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==e.filters)throw new W("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=e.kernelInitializer||null!=e.kernelRegularizer||null!=e.kernelConstraint)throw new W("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=e.padding&&"same"!==e.padding&&"valid"!==e.padding)throw new W(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier??1,this.depthwiseInitializer=Xe(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ye(e.depthwiseRegularizer),this.depthwiseConstraint=wn(e.depthwiseConstraint),this.pointwiseInitializer=Xe(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ye(e.pointwiseRegularizer),this.pointwiseConstraint=wn(e.pointwiseConstraint)}build(t){if((t=Me(t)).length<this.rank+2)throw new W(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[e]||t[e]<0)throw new W(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const r=t[e],s=this.kernelSize.concat([r,this.depthMultiplier]),a=[];for(let o=0;o<this.rank;++o)a.push(1);a.push(r*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):null,this.inputSpec=[new bn({ndim:this.rank+2,axes:{[e]:r}})],this.built=!0}call(t,e){return K(()=>{let r;if(t=me(t),1===this.rank)throw new fe("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(t=Te(t,[0,2,3,1])),r=Kd(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(r=ns(r,this.bias.read(),this.dataFormat)),null!=this.activation&&(r=this.activation.apply(r)),"channelsFirst"===this.dataFormat&&(r=Te(r,[0,3,1,2])),r})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=en(this.depthwiseInitializer),t.pointwiseInitializer=en(this.pointwiseInitializer),t.depthwiseRegularizer=Be(this.depthwiseRegularizer),t.pointwiseRegularizer=Be(this.pointwiseRegularizer),t.depthwiseConstraint=xn(this.depthwiseConstraint),t.pointwiseConstraint=xn(this.pointwiseConstraint),t}}Bb.className="SeparableConv";class Wb extends Bb{constructor(t){super(2,t)}}Wb.className="SeparableConv2D",bt(Wb);class Eh extends mo{constructor(t){super(1,t),Eh.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if("number"!=typeof t.kernelSize&&!Wf(t.kernelSize,"number",1,1))throw new W(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}Eh.className="Conv1D",bt(Eh);class Vb extends Ee{constructor(t){super(t),this.cropping="number"==typeof t.cropping?[[t.cropping,t.cropping],[t.cropping,t.cropping]]:"number"==typeof t.cropping[0]?[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:t.cropping,this.dataFormat=void 0===t.dataFormat?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return K(()=>{if(t=me(t),"channelsLast"===this.dataFormat){const r=dh(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return dh(r,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const r=dh(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return dh(r,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}Vb.className="Cropping2D",bt(Vb);class Ub extends Ee{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size??this.DEFAULT_SIZE,this.dataFormat=t.dataFormat??"channelsLast",ln(this.dataFormat),this.interpolation=t.interpolation??"nearest",ri(sT,"InterpolationFormat",this.interpolation)}computeOutputShape(t){return"channelsFirst"===this.dataFormat?[t[0],t[1],null==t[2]?null:this.size[0]*t[2],null==t[3]?null:this.size[1]*t[3]]:[t[0],null==t[1]?null:this.size[0]*t[1],null==t[2]?null:this.size[1]*t[2],t[3]]}call(t,e){return K(()=>{let r=me(t);const s=r.shape;if("channelsFirst"===this.dataFormat){r=Te(r,[0,2,3,1]);const a=this.size[0]*s[2],i=this.size[1]*s[3],o="nearest"===this.interpolation?Qr.resizeNearestNeighbor(r,[a,i]):Qr.resizeBilinear(r,[a,i]);return Te(o,[0,3,1,2])}{const a=this.size[0]*s[1],i=this.size[1]*s[2];return"nearest"===this.interpolation?Qr.resizeNearestNeighbor(r,[a,i]):Qr.resizeBilinear(r,[a,i])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}Ub.className="UpSampling2D",bt(Ub);class Gb extends $h{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier??1,this.depthwiseInitializer=Xe(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=wn(t.depthwiseConstraint),this.depthwiseRegularizer=Ye(t.depthwiseRegularizer)}build(t){if((t=Me(t)).length<4)throw new W(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e="channelsFirst"===this.dataFormat?1:3;if(null==t[e]||t[e]<0)throw new W(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const r=t[e];this.depthwiseKernel=this.addWeight("depthwise_kernel",[this.kernelSize[0],this.kernelSize[1],r,this.depthMultiplier],null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[r*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(t,e){return K(()=>{let r=function(s,a,i=[1,1],o="valid",u,c){return K(()=>{null==u&&(u="channelsLast"),ln(u);let l=gm(s,u);if(4!==s.rank)throw new W(`Input for depthwiseConv2d is required to be 4-D, but is instead ${s.rank}-D`);if(4!==a.rank)throw new W(`depthwiseKernel is required to be 4-D, but is instead ${a.rank}-D`);return l=Ml(l,a,i,"same"===o?"same":"valid","NHWC",c),"channelsFirst"===u&&(l=Te(l,[0,3,1,2])),l})}(t=me(t),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(r=ns(r,this.bias.read(),this.dataFormat)),null!=this.activation&&(r=this.activation.apply(r)),r})}computeOutputShape(t){t=Me(t);const r="channelsFirst"===this.dataFormat?t[3]:t[2],s="channelsFirst"===this.dataFormat?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,a=as("channelsFirst"===this.dataFormat?t[2]:t[1],this.kernelSize[0],this.padding,this.strides[0]),i=as(r,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[t[0],s,a,i]:[t[0],a,i,s]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=en(this.depthwiseInitializer),t.depthwiseRegularizer=Be(this.depthwiseRegularizer),t.depthwiseConstraint=xn(this.depthwiseRegularizer),t}}function Hb(n,t,e,r){if(Array.isArray(n)){if(null!=t||null!=e)throw new W("When inputs is an array, neither initialState or constants should be provided");null!=r&&(e=n.slice(n.length-r,n.length),n=n.slice(0,n.length-r)),n.length>1&&(t=n.slice(1,n.length)),n=n[0]}function s(a){return null==a||Array.isArray(a)?a:[a]}return{inputs:n,initialState:t=s(t),constants:e=s(e)}}function jb(n,t,e,r=!1,s,a,i=!1,o=!1){return K(()=>{const u=t.shape.length;if(u<3)throw new W(`Input should be at least 3D, but is ${u}D.`);const c=[1,0].concat(es(2,u));if(t=Te(t,c),null!=a)throw new fe("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=Dt(Dt(s,"bool"),"float32")).rank===u-1&&(s=er(s,-1)),s=Te(s,c)),r&&(t=Or(t,0),null!=s&&(s=Or(s,0)));const l=[];let h,p=e;const d=t.shape[0],f=Jr(t);let m,g;null!=s&&(m=Jr(s));for(let y=0;y<d;++y){const b=f[y],x=K(()=>n(b,p));if(null==s)h=x[0],p=x[1];else{const w=K(()=>{const k=m[y],N=Ot(Tr(k),k);return{output:yt(M(x[0],k),M(p[0],N)),newStates:p.map(($,C)=>yt(M(x[1][C],k),M($,N)))}});h=w.output,p=w.newStates}o&&l.push(h)}return o&&(g=Cr(l,1)),[h,g,p]})}Gb.className="DepthwiseConv2D",bt(Gb);class wa extends Ee{constructor(t){let e;if(super(t),null==t.cell)throw new W("cell property is missing for the constructor of RNN.");if(e=Array.isArray(t.cell)?new xm({cells:t.cell}):t.cell,null==e.stateSize)throw new W("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=null!=t.returnSequences&&t.returnSequences,this.returnState=null!=t.returnState&&t.returnState,this.goBackwards=null!=t.goBackwards&&t.goBackwards,this._stateful=null!=t.stateful&&t.stateful,this.unroll=null!=t.unroll&&t.unroll,this.supportsMasking=!0,this.inputSpec=[new bn({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return this.states_??es(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(t=>null)}setStates(t){this.states_=t}computeOutputShape(t){tm(t)&&(t=t[0]);let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const r=e[0];let s;if(s=this.returnSequences?[t[0],t[1],r]:[t[0],r],this.returnState){const a=[];for(const i of e)a.push([t[0],i]);return[s].concat(a)}return s}computeMask(t,e){return K(()=>{Array.isArray(e)&&(e=e[0]);const r=this.returnSequences?e:null;if(this.returnState){const s=this.states.map(a=>null);return[r].concat(s)}return r})}get states(){if(null==this.states_){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let r=0;r<t;++r)e.push(null);return e}return this.states_}set states(t){this.states_=t}build(t){if(null!=this.numConstants)throw new fe("Constants support is not implemented in RNN yet.");tm(t)&&(t=t[0]);const e=this.stateful?t[0]:null,r=t.slice(2);this.inputSpec[0]=new bn({shape:[e,null,...r]});const s=[t[0]].concat(t.slice(2));let a;if(this.cell.build(s),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!he(this.stateSpec.map(i=>i.shape[i.shape.length-1]),a))throw new W(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(i=>new bn({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){K(()=>{if(!this.stateful)throw new fs("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape[0];if(null==r)throw new W("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>gn([r,s])):[gn([r,this.cell.stateSize])];else if(null==t)ve(this.states_),null!=this.keptStates&&(ve(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(s=>gn([r,s])):this.states_[0]=gn([r,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new W(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);!0===e?this.keptStates.push(this.states_.slice()):ve(this.states_);for(let s=0;s<this.states_.length;++s){const a=t[s],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[s]:this.cell.stateSize,o=[r,i];if(!he(a.shape,o))throw new W(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${a.shape}`);this.states_[s]=a}}this.states_=this.states_.map(s=>An(s.clone()))})}apply(t,e){let r=null==e?null:e.initialState,s=null==e?null:e.constants;null==e&&(e={});const a=Hb(t,r,s,this.numConstants);t=a.inputs,r=a.initialState,s=a.constants;let i=[],o=[];if(null!=r){e.initialState=r,i=i.concat(r),this.stateSpec=[];for(const u of r)this.stateSpec.push(new bn({shape:u.shape}));o=o.concat(this.stateSpec)}if(null!=s&&(e.constants=s,i=i.concat(s),this.numConstants=s.length),i[0]instanceof gs){const u=[t].concat(i),c=this.inputSpec.concat(o),l=this.inputSpec;this.inputSpec=c;const h=super.apply(u,e);return this.inputSpec=l,h}return super.apply(t,e)}call(t,e){return K(()=>{const r=null==e?null:e.mask,s=null==e?null:e.training;let a=null==e?null:e.initialState;t=me(t),null==a&&(a=this.stateful?this.states_:this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==i)throw new W(`RNN Layer has ${i} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const o={training:s},u=jb((d,f)=>{const m=this.cell.call([d].concat(f),o);return[m[0],m.slice(1)]},t,a,this.goBackwards,r,null,this.unroll,this.returnSequences),c=u[0],l=u[1],h=u[2];this.stateful&&this.resetStates(h,s);const p=this.returnSequences?l:c;return this.returnState?[p].concat(h):p})}getInitialState(t){return K(()=>{let e=gn(t.shape);return e=Vt(e,[1,2]),e=tu(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(r=>r>1?Hf(e,[1,r]):e):this.cell.stateSize>1?[Hf(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(e.numConstants=this.numConstants);const r=this.cell.getConfig();return this.getClassName()===wa.className&&(e.cell={className:this.cell.getClassName(),config:r}),Object.assign({},r,t,e)}static fromConfig(t,e,r={}){const s=Os(e.cell,r);return new t(Object.assign(e,{cell:s}))}}wa.className="RNN",bt(wa);class Rh extends Ee{}class ym extends Rh{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Tn(this.units,"units"),this.activation=xa(t.activation??this.DEFAULT_ACTIVATION),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Xe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Xe(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Xe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ye(t.kernelRegularizer),this.recurrentRegularizer=Ye(t.recurrentRegularizer),this.biasRegularizer=Ye(t.biasRegularizer),this.kernelConstraint=wn(t.kernelConstraint),this.recurrentConstraint=wn(t.recurrentConstraint),this.biasConstraint=wn(t.biasConstraint),this.dropout=ho([1,ga([0,t.dropout??0])]),this.recurrentDropout=ho([1,ga([0,t.recurrentDropout??0])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=Me(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(t,e){return K(()=>{if(2!==t.length)throw new W(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let r=t[1];t=t[0];const s=null!=e.training&&e.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=va({ones:()=>Tr(t),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=va({ones:()=>Tr(r),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=this.recurrentDropoutMask;a=_s(null!=i?M(t,i):t,this.kernel.read()),null!=this.bias&&(a=ns(a,this.bias.read())),null!=o&&(r=M(r,o));let u=yt(a,_s(r,this.recurrentKernel.read()));return null!=this.activation&&(u=this.activation.apply(u)),[u,u]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:ba(this.activation),useBias:this.useBias,kernelInitializer:en(this.kernelInitializer),recurrentInitializer:en(this.recurrentInitializer),biasInitializer:en(this.biasInitializer),kernelRegularizer:Be(this.kernelRegularizer),recurrentRegularizer:Be(this.recurrentRegularizer),biasRegularizer:Be(this.biasRegularizer),activityRegularizer:Be(this.activityRegularizer),kernelConstraint:xn(this.kernelConstraint),recurrentConstraint:xn(this.recurrentConstraint),biasConstraint:xn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},t,e)}}ym.className="SimpleRNNCell",bt(ym);class qb extends wa{constructor(t){t.cell=new ym(t),super(t)}call(t,e){return K(()=>(null!=this.cell.dropoutMask&&(ve(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ve(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(t,{mask:null==e?null:e.mask,training:null==e?null:e.training,initialState:null==e?null:e.initialState})))}static fromConfig(t,e){return new t(e)}}qb.className="SimpleRNN",bt(qb);class bm extends Rh{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new W("GRUCell does not support reset_after parameter set to true.");this.units=t.units,Tn(this.units,"units"),this.activation=xa(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=xa(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Xe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Xe(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Xe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ye(t.kernelRegularizer),this.recurrentRegularizer=Ye(t.recurrentRegularizer),this.biasRegularizer=Ye(t.biasRegularizer),this.kernelConstraint=wn(t.kernelConstraint),this.recurrentConstraint=wn(t.recurrentConstraint),this.biasConstraint=wn(t.biasConstraint),this.dropout=ho([1,ga([0,t.dropout??0])]),this.recurrentDropout=ho([1,ga([0,t.recurrentDropout??0])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){const e=(t=Me(t))[t.length-1];this.kernel=this.addWeight("kernel",[e,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(t,e){return K(()=>{if(2!==t.length)throw new W(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const r=null!=e.training&&e.training;let s=t[1];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=va({ones:()=>Tr(t),rate:this.dropout,training:r,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=va({ones:()=>Tr(s),rate:this.recurrentDropout,training:r,count:3,dropoutFunc:this.dropoutFunc}));const i=this.recurrentDropoutMask;let o,u,c;0<this.dropout&&this.dropout<1&&(t=M(t,this.dropoutMask[0]));let l=_s(t,this.kernel.read());this.useBias&&(l=ns(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=M(s,i[0]));const h=this.recurrentKernel.read(),[p,d]=pr(h,[2*this.units,this.units],h.rank-1),f=_s(s,p),[m,g,y]=pr(l,3,l.rank-1),[b,x]=pr(f,2,f.rank-1);o=this.recurrentActivation.apply(yt(m,b)),u=this.recurrentActivation.apply(yt(g,x));const w=_s(M(u,s),d);c=this.activation.apply(yt(y,w));const k=yt(M(o,s),M(yt(1,Ke(o)),c));return[k,k]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:ba(this.activation),recurrentActivation:ba(this.recurrentActivation),useBias:this.useBias,kernelInitializer:en(this.kernelInitializer),recurrentInitializer:en(this.recurrentInitializer),biasInitializer:en(this.biasInitializer),kernelRegularizer:Be(this.kernelRegularizer),recurrentRegularizer:Be(this.recurrentRegularizer),biasRegularizer:Be(this.biasRegularizer),activityRegularizer:Be(this.activityRegularizer),kernelConstraint:xn(this.kernelConstraint),recurrentConstraint:xn(this.recurrentConstraint),biasConstraint:xn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},t,e)}}bm.className="GRUCell",bt(bm);class Kb extends wa{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new bm(t),super(t)}call(t,e){return K(()=>(null!=this.cell.dropoutMask&&(ve(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ve(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(t,{mask:null==e?null:e.mask,training:null==e?null:e.training,initialState:null==e?null:e.initialState})))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Kb.className="GRU",bt(Kb);class Ah extends Rh{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,Tn(this.units,"units"),this.activation=xa(void 0===t.activation?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=xa(void 0===t.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=null==t.useBias||t.useBias,this.kernelInitializer=Xe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Xe(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Xe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Ye(t.kernelRegularizer),this.recurrentRegularizer=Ye(t.recurrentRegularizer),this.biasRegularizer=Ye(t.biasRegularizer),this.kernelConstraint=wn(t.kernelConstraint),this.recurrentConstraint=wn(t.recurrentConstraint),this.biasConstraint=wn(t.biasConstraint),this.dropout=ho([1,ga([0,t.dropout??0])]),this.recurrentDropout=ho([1,ga([0,t.recurrentDropout??0])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;const r=(t=Me(t))[t.length-1];let s;if(this.kernel=this.addWeight("kernel",[r,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const a=this.biasInitializer,i=this.units;s=new((e=class extends zr{apply(o,u){const c=a.apply([i]),l=(new qf).apply([i]),h=a.apply([2*i]);return N1(N1(c,l),h)}}).className="CustomInit",e)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return K(()=>{const r=null!=e.training&&e.training;if(3!==t.length)throw new W(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let s=t[1];const a=t[2];t=t[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=va({ones:()=>Tr(t),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=va({ones:()=>Tr(s),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));const o=this.recurrentDropoutMask;let u,c,l,h;0<this.dropout&&this.dropout<1&&(t=M(t,this.dropoutMask[0]));let p=_s(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=M(s,o[0])),p=yt(p,_s(s,this.recurrentKernel.read())),this.useBias&&(p=ns(p,this.bias.read()));const[d,f,m,g]=pr(p,4,p.rank-1);u=this.recurrentActivation.apply(d),c=this.recurrentActivation.apply(f),l=yt(M(c,a),M(u,this.activation.apply(m))),h=this.recurrentActivation.apply(g);const y=M(h,this.activation.apply(l));return[y,y,l]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:ba(this.activation),recurrentActivation:ba(this.recurrentActivation),useBias:this.useBias,kernelInitializer:en(this.kernelInitializer),recurrentInitializer:en(this.recurrentInitializer),biasInitializer:en(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Be(this.kernelRegularizer),recurrentRegularizer:Be(this.recurrentRegularizer),biasRegularizer:Be(this.biasRegularizer),activityRegularizer:Be(this.activityRegularizer),kernelConstraint:xn(this.kernelConstraint),recurrentConstraint:xn(this.recurrentConstraint),biasConstraint:xn(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},t,e)}}Ah.className="LSTMCell",bt(Ah);class Xb extends wa{constructor(t){0===t.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new Ah(t),super(t)}call(t,e){return K(()=>(null!=this.cell.dropoutMask&&(ve(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ve(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(t,{mask:null==e?null:e.mask,training:null==e?null:e.training,initialState:null==e?null:e.initialState})))}static fromConfig(t,e){return 0===e.implmentation&&(e.implementation=1),new t(e)}}Xb.className="LSTM",bt(Xb);class xm extends Rh{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return K(()=>{let r=t.slice(1);const s=[];for(const o of this.cells.slice().reverse())Array.isArray(o.stateSize)?s.push(r.splice(0,o.stateSize.length)):s.push(r.splice(0,1));s.reverse();const a=[];let i;for(let o=0;o<this.cells.length;++o){const u=this.cells[o];r=s[o],i=0===o?[t[0]].concat(r):[i[0]].concat(r),i=u.call(i,e),a.push(i.slice(1))}r=[];for(const o of a.slice().reverse())r.push(...o);return[i[0]].concat(r)})}build(t){let e;tm(t)&&(t=t[0]),this.cells.forEach((r,s)=>{si(`RNNCell_${s}`,()=>{r.build(t),e=Array.isArray(r.stateSize)?r.stateSize[0]:r.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e={cells:this.cells.map(r=>({className:r.getClassName(),config:r.getConfig()}))};return Object.assign({},t,e)}static fromConfig(t,e,r={}){const s=[];for(const a of e.cells)s.push(Os(a,r));return new t({cells:s})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const r of this.cells)e.push(...r.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return em(t)}setWeights(t){const e=[];for(const r of this.cells){const a=t.splice(r.weights.length);for(let i=0;i<r.weights.length;++i)e.push([r.weights[i],a[i]])}nm(e)}}function va(n){const{ones:t,rate:e,training:r=!1,count:s=1,dropoutFunc:a}=n,i=()=>null!=a?a(t(),e):T1(t(),e),o=()=>nu(i,t,r);return!s||s<=1?An(o().clone()):Array(s).fill(void 0).map(o).map(u=>An(u.clone()))}var Br,Bx;xm.className="StackedRNNCells",bt(xm);class Yb extends wa{constructor(t){if(t.unroll)throw new fe("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new fe("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new bn({ndim:5})]}call(t,e){return K(()=>{if(null!=this.cell.dropoutMask&&(ve(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ve(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new W("ConvRNN2D cell does not support constants");return super.call(t,{mask:null==e?null:e.mask,training:null==e?null:e.training,initialState:null==e?null:e.initialState})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return K(()=>{const{stateSize:e}=this.cell,s=this.computeSingleOutputShape(t.shape),a=gn([s[0],...s.slice(2)]);return Array.isArray(e)?Array(e.length).fill(a):[a]})}resetStates(t,e=!1){K(()=>{if(!this.stateful)throw new fs("Cannot call resetStates() on an RNN Layer that is not stateful.");const r=this.inputSpec[0].shape,s=this.computeSingleOutputShape(r),a=[s[0],...s.slice(2)];if(null==r[0])throw new W("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(()=>gn(a)):[gn(a)];else if(null==t)ve(this.states_),null!=this.keptStates&&(ve(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>gn(a)):this.states_[0]=gn(a);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new W(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):ve(this.states_);for(let i=0;i<this.states_.length;++i){const o=t[i],u=a;if(!he(o.shape,u))throw new W(`State ${i} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${o.shape}`);this.states_[i]=o}}this.states_=this.states_.map(i=>An(i.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:r,kernelSize:s,padding:a,strides:i,dilationRate:o}=this.cell,u="channelsFirst"===e,l=t[u?4:3],h=as(t[u?3:2],s[0],a,i[0],o[0]),p=as(l,s[1],a,i[1],o[1]);return[...t.slice(0,2),...u?[r,h,p]:[h,p,r]]}}Yb.className="ConvRNN2D";class wm extends Ah{constructor(t){const{filters:e,kernelSize:r,strides:s,padding:a,dataFormat:i,dilationRate:o}=t;super(Object.assign({},t,{units:e})),this.filters=e,Tn(this.filters,"filters"),this.kernelSize=fo(r,2,"kernelSize"),this.kernelSize.forEach(u=>Tn(u,"kernelSize")),this.strides=fo(s||1,2,"strides"),this.strides.forEach(u=>Tn(u,"strides")),this.padding=a||"valid",$r(this.padding),this.dataFormat=i||"channelsLast",ln(this.dataFormat),this.dilationRate=fo(o||1,2,"dilationRate"),this.dilationRate.forEach(u=>Tn(u,"dilationRate"))}build(t){var e;t=Me(t);const r="channelsFirst"===this.dataFormat?1:t.length-1;if(null==t[r])throw new W(`The channel dimension of the input should be defined. Found ${t[r]}`);const a=this.kernelSize.concat([t[r],4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let o;if(this.unitForgetBias){const u=this.biasInitializer,c=this.filters;o=new((e=class extends zr{apply(l,h){return Gf([u.apply([c]),Sr([c]),u.apply([2*c])])}}).className="CustomInit",e)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,o,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return K(()=>{if(3!==t.length)throw new W(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const r=e.training||!1,s=t[0],a=t[1],i=t[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=va({ones:()=>Tr(s),rate:this.dropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,u=(rt,at,dt)=>at&&at[dt]?M(at[dt],rt):rt;let c=u(s,o,0),l=u(s,o,1),h=u(s,o,2),p=u(s,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=va({ones:()=>Tr(a),rate:this.recurrentDropout,training:r,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let f=u(a,d,0),m=u(a,d,1),g=u(a,d,2),y=u(a,d,3);const[b,x,w,k]=pr(this.kernel.read(),4,3),[N,$,C,R]=this.useBias?pr(this.bias.read(),4):[null,null,null,null];c=this.inputConv(c,b,N,this.padding),l=this.inputConv(l,x,$,this.padding),h=this.inputConv(h,w,C,this.padding),p=this.inputConv(p,k,R,this.padding);const[A,_,z,V]=pr(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,A),m=this.recurrentConv(m,_),g=this.recurrentConv(g,z),y=this.recurrentConv(y,V);const X=this.recurrentActivation.apply(yt(c,f)),J=this.recurrentActivation.apply(yt(l,m)),Y=yt(M(J,i),M(X,this.activation.apply(yt(h,g)))),et=M(this.recurrentActivation.apply(yt(p,y)),this.activation.apply(Y));return[et,et,Y]})}getConfig(){const r=function(n,t){var e={};for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&t.indexOf(r)<0&&(e[r]=n[r]);if(null!=n&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(n);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(n,r[s])&&(e[r[s]]=n[r[s]])}return e}(super.getConfig(),["units"]);return Object.assign({},r,{filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides})}inputConv(t,e,r,s){const a=ca(t,e,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return r?ns(a,r,this.dataFormat):a}recurrentConv(t,e){return ca(t,e,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}wm.className="ConvLSTM2DCell",bt(wm);class Zb extends Yb{constructor(t){const e=new wm(t);super(Object.assign({},t,{cell:e}))}static fromConfig(t,e){return new t(e)}}Zb.className="ConvLSTM2D",bt(Zb);class vm extends Ee{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(null==this.noiseShape)return this.noiseShape;const e=t.shape,r=[];for(let s=0;s<this.noiseShape.length;++s)r.push(this.noiseShape[s]??e[s]);return r}call(t,e){return K(()=>{this.invokeCallHook(t,e);const r=me(t);if(0<this.rate&&this.rate<1){const s=null!=e.training&&e.training,a=this.getNoiseShape(r);return nu(()=>T1(r,this.rate,a,this.seed),()=>r,s)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}vm.className="Dropout",bt(vm);class Jb extends vm{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}Jb.className="SpatialDropout1D",bt(Jb);class Qb extends Ee{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==t.batchInputShape&&null==t.inputShape&&null!=t.inputDim){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,Tn(this.units,"units"),this.activation=xa(t.activation),null!=t.useBias&&(this.useBias=t.useBias),this.kernelInitializer=Xe(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Xe(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=wn(t.kernelConstraint),this.biasConstraint=wn(t.biasConstraint),this.kernelRegularizer=Ye(t.kernelRegularizer),this.biasRegularizer=Ye(t.biasRegularizer),this.activityRegularizer=Ye(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){const e=(t=Me(t))[t.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){const e=(t=Me(t)).slice();return e[e.length-1]=this.units,e}call(t,e){return K(()=>{this.invokeCallHook(t,e);const r=me(t),s=y1(this.activation.getClassName());let a;return null!=s?a=_s(r,this.kernel.read(),s,this.bias?this.bias.read():null):(a=_s(r,this.kernel.read()),null!=this.bias&&(a=ns(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a})}getConfig(){const t={units:this.units,activation:ba(this.activation),useBias:this.useBias,kernelInitializer:en(this.kernelInitializer),biasInitializer:en(this.biasInitializer),kernelRegularizer:Be(this.kernelRegularizer),biasRegularizer:Be(this.biasRegularizer),activityRegularizer:Be(this.activityRegularizer),kernelConstraint:xn(this.kernelConstraint),biasConstraint:xn(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}Qb.className="Dense",bt(Qb);class tx extends Ee{constructor(t){super(t=t||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=Me(t);for(const e of t.slice(1))if(null==e)throw new W(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],ma(t,1)]}call(t,e){return K(()=>{this.invokeCallHook(t,e);let r=me(t);if("channelsFirst"===this.dataFormat&&r.rank>1){const s=[0];for(let a=2;a<r.rank;++a)s.push(a);s.push(1),r=Te(r,s)}return function(s){if(s.rank<=1)throw new W(`batchFlatten requires a minimum rank of 2. Got rank: ${s.rank}.`);const a=[s.shape[0],ma(s.shape,1)];return P(s,a)}(r)})}getConfig(){const t={};null!=this.dataFormat&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}tx.className="Flatten",bt(tx);class ex extends Ee{constructor(t){super(t),this.supportsMasking=!0,this.activation=xa(t.activation)}call(t,e){return K(()=>{this.invokeCallHook(t,e);const r=me(t);return this.activation.apply(r)})}getConfig(){const t={activation:ba(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}ex.className="Activation",bt(ex);class nx extends Ee{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return K(()=>{return r=t=me(t),s=this.n,K(()=>{if(2!==r.shape.length)throw new W(`repeat() expects a rank-2 tensor, but received a rank-${r.shape.length} tensor.`);return Hf(tu(r,1),[1,s,1])});var r,s})}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}nx.className="RepeatVector",bt(nx);class rx extends Ee{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||null==t}fixUnknownDimension(t,e){const r="Total size of new array must be unchanged.",s=e.slice();let a=1,i=null;for(let u=0;u<s.length;++u){const c=s[u];if(this.isUnknown(c)){if(null!==i)throw new W("Can only specifiy one unknown dimension.");i=u}else a*=c}const o=ma(t);if(null!==i){if(0===a||o%a!=0)throw new W(r);s[i]=o/a}else if(o!==a)throw new W(r);return s}computeOutputShape(t){let e=!1;for(let r=0;r<t.length;++r)if(this.isUnknown(t[r])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return K(()=>{this.invokeCallHook(t,e);const r=me(t),s=r.shape,a=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return P(r,a)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}rx.className="Reshape",bt(rx);class sx extends Ee{constructor(t){if(super(t),null==t.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=es(1,t.dims.length+1);if(!he(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new bn({ndim:this.dims.length+1})]}computeOutputShape(t){const e=(t=Me(t)).slice();return this.dims.forEach((r,s)=>{e[s+1]=t[r]}),e}call(t,e){return Te(me(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}sx.className="Permute",bt(sx);class ax extends Ee{constructor(t){super(t??{}),this.supportsMasking=!0,this.maskValue=null!=t?t.maskValue??0:0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const r=me(t);return Oc(ao(r,this.maskValue),-1)}call(t,e){return K(()=>{this.invokeCallHook(t,e);const r=me(t),s=Oc(ao(r,this.maskValue),-1,!0);return M(r,Dt(s,r.dtype))})}}ax.className="Masking",bt(ax);class ix extends Ee{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==t.batchInputShape&&null==t.inputShape){let e=null;null!=t.batchSize&&(e=t.batchSize),this.batchInputShape=null==t.inputLength?[e,null]:[e].concat(qe(t.inputLength))}this.inputDim=t.inputDim,Tn(this.inputDim,"inputDim"),this.outputDim=t.outputDim,Tn(this.outputDim,"outputDim"),this.embeddingsInitializer=Xe(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ye(t.embeddingsRegularizer),this.activityRegularizer=Ye(t.activityRegularizer),this.embeddingsConstraint=wn(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return K(()=>this.maskZero?(t=me(t),ao(t,$e(t))):null)}computeOutputShape(t){if(t=Me(t),null==this.inputLength)return[...t,this.outputDim];const e=qe(this.inputLength);if(e.length!==t.length-1)throw new W(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let r=0;for(let s=0;s<e.length;++s){const a=e[s],i=t[s+1];if(null!=a&&null!=i&&a!==i)throw new W(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);null==a&&(e[r]=i),r++}}return[t[0],...e,this.outputDim]}call(t,e){return K(()=>{this.invokeCallHook(t,e);let r=me(t);"int32"!==r.dtype&&(r=Ql(r,"int32"));const s=S1(this.embeddings.read(),P(r,[r.size]));return P(s,Me(this.computeOutputShape(r.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:en(this.embeddingsInitializer),embeddingsRegularizer:Be(this.embeddingsRegularizer),activityRegularizer:Be(this.activityRegularizer),embeddingsConstraint:xn(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}ix.className="Embedding",bt(ix);class oi extends Ee{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new fe}computeElementwiseOpOutputShape(t,e){if(null==t||null==e)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(0===e.length)return t;const r=t.slice(0,t.length-e.length);for(let s=0;s<e.length;++s){const a=t[t.length-e.length+s],i=e[s];if(null==a||null==i||a<0||i<0)r.push(null);else if(1===a)r.push(i);else if(1===i)r.push(a);else{if(a!==i)throw new W("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));r.push(a)}}return r}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[Me(t)]),t.length<2)throw new W(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const a of t)null!=a&&null!==a[0]&&e.push(a[0]);if(e=fa(e),e.length>1)throw new W(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let r=null==t[0]?null:t[0].slice(1);for(let a=1;a<t.length;++a){const i=null==t[a]?null:t[a].slice(1);r=this.computeElementwiseOpOutputShape(r,i)}const s=t.map(a=>a.length);this.reshapeRequired=-1!==t.indexOf(null)||1!==fa(s).length}call(t,e){return K(()=>{if(this.reshapeRequired){const r=[],s=t.map(a=>a.rank);if(-1===s.indexOf(null)){const a=ga(s);for(let i of t){const o=i.rank;for(let u=0;u<a-o;++u)i=tu(i,1);r.push(i)}return this.mergeFunction(r)}{let a=!1;for(const u of t){const c=u.rank;if(null==c){const l=u.shape,h=l[0],p=l.slice(1).concat([h]);let d=P(u,[h].concat(ma(l.slice(1))));d=Te(d,[1,0]),d=P(d,p),r.push(d),a=!0}else if(c>1){const l=es(1,c).concat([0]);r.push(Te(u,l)),a=!0}else r.push(u)}let i=this.mergeFunction(r);const o=i.rank;if(a)if(null==o){const u=i.shape,c=u[u.length-1],l=[c].concat(u.slice(0,u.length-1));i=P(Te(P(i,[-1,c]),[1,0]),l)}else if(o>1){const u=[o-1].concat(es(0,o-1));i=Te(i,u)}return i}}return this.mergeFunction(t)})}computeOutputShape(t){let e;e=null==t[0]?null:t[0].slice(1);for(let s=1;s<t.length;++s){const a=null==t[s]?null:t[s].slice(1);e=this.computeElementwiseOpOutputShape(e,a)}let r=[];for(const s of t)null!=s&&null!==s[0]&&r.push(s[0]);return r=fa(r),e=1===r.length?r.concat(e):[null].concat(e),e}computeMask(t,e){return K(()=>{if(null==e)return null;if(!Array.isArray(e))throw new W("`mask` should be an Array");if(!Array.isArray(t))throw new W("`inputs` should be an Array");if(e.length!==t.length)throw new W(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(s=>null==s))return null;let r=(e=e.map(s=>null==s?s:er(s,0)))[0];for(let s=1;s<e.length-1;++s)r=hs(r,e[s]);return r})}}class ox extends oi{constructor(t){super(t)}mergeFunction(t){return K(()=>{let e=t[0].clone();for(let r=1;r<t.length;++r)e=yt(e,t[r]);return e})}}ox.className="Add",bt(ox);class lx extends oi{constructor(t){super(t)}mergeFunction(t){return K(()=>{let e=t[0].clone();for(let r=1;r<t.length;++r)e=M(e,t[r]);return e})}}lx.className="Multiply",bt(lx);class ux extends oi{constructor(t){super(t)}mergeFunction(t){return K(()=>{let e=t[0].clone();for(let r=1;r<t.length;++r)e=yt(e,t[r]);return M(1/t.length,e)})}}ux.className="Average",bt(ux);class cx extends oi{constructor(t){super(t)}mergeFunction(t){return K(()=>{let e=t[0];for(let r=1;r<t.length;++r)e=Es(e,t[r]);return e})}}cx.className="Maximum",bt(cx);class hx extends oi{constructor(t){super(t)}mergeFunction(t){return K(()=>{let e=t[0];for(let r=1;r<t.length;++r)e=Wl(e,t[r]);return e})}}hx.className="Minimum",bt(hx);class px extends oi{constructor(t){super(t),this.DEFAULT_AXIS=-1,null==t&&(t={}),this.axis=t.axis??this.DEFAULT_AXIS,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!Array.isArray(t)||!Array.isArray(t[0])||1===t.length)throw new W("A `Concatenate` layer should be called on a list of at least 2 inputs");let e=!0;for(const s of t)if(null!=s){e=!1;break}if(e)return;const r=[];for(let s=0;s<t.length;++s){const a=t[s].slice();a.splice(this.axis,1);let i=!1;for(const o of r)if(he(o,a)){i=!0;break}i||r.push(a)}if(r.length>1)throw new W("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return K(()=>Gf(t,this.axis))}computeOutputShape(t){if(!Array.isArray(t)||!Array.isArray(t[0]))throw new W("A `Concatenate` layer should be called on a list of inputs.");const e=t,r=e[0].slice(),s=this.axis<0?r.length+this.axis:this.axis;for(const a of e.slice(1)){if(null==r[s]||null==a[s]){r[s]=null;break}r[s]+=a[s]}return r}computeMask(t,e){if(null==e)return null;if(!Array.isArray(e))throw new W("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new W("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new W(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return K(()=>{let r=!0;if(e.forEach(i=>{null==i||(r=!1)}),r)return null;const s=[];for(let i=0;i<t.length;++i)s.push(null==e[i]?Dt(Tr(t[i]),"bool"):e[i].rank<t[i].rank?er(e[i],-1):e[i]);const a=je(s,this.axis);return Sd(a,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}function pu(n,t){for(;n<0;)n+=t;return n}px.className="Concatenate",bt(px);class dx extends oi{constructor(t){super(t),this.axes=t.axes,this.normalize=null!=t.normalize&&t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){I(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],r=t[1];if(e.length>3||r.length>3)throw new fe("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(e,r);if(e[s[0]]!==r[s[1]])throw new W(`Dimension incompatibility: ${e[s[0]]} !== ${r[s[1]]}`)}mergeFunction(t){if(2!==t.length)throw new W(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e,r=t[0],s=t[1];return e=Array.isArray(this.axes)?this.axes.map((a,i)=>pu(a,t[i].shape.length)):[pu(this.axes,r.shape.length),pu(this.axes,s.shape.length)],this.normalize&&(r=wh(r,e[0]),s=wh(s,e[1])),function(a,i,o){if(a.shape.length>3||i.shape.length>3)throw new fe("batchDot is not implemented for tensors of 4D or higher rank yet");if(I(a.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${a.shape.length}`),I(a.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${i.shape.length}`),"number"==typeof o&&(o=[o,o]),"complex64"===a.dtype||"complex64"===i.dtype)throw new fe("batchDot is not implemented for complex64-type Tensors yet.");const u=a.shape.length,c=i.shape.length;null==o&&(o=[u-1,c-2]);const l=o;return K(()=>{let h,p;if(u>c){h=u-c;const d=[];for(let f=0;f<h;++f)d.push(1);i=P(i,i.shape.concat(d))}else if(c>u){h=c-u;const d=[];for(let f=0;f<h;++f)d.push(1);a=P(a,a.shape.concat(d))}else h=0;if(p=2===a.shape.length&&2===i.shape.length?l[0]===l[1]?Vt(M(a,i),l[0]):Vt(M(Te(a,[1,0]),i),l[1]):Ie(a,i,l[0]!==a.shape.length-1,l[1]===i.shape.length-1),h>0){let d;d=u>c?u+c-3:u-1;const f=[];for(let m=d;m<d+h;++m)f.push(m);p=dr(p,f)}return 1===p.shape.length&&(p=er(p,1)),p})}(r,s,e)}interpretAxes(t,e){let r;return r=Array.isArray(this.axes)?this.axes:[pu(this.axes,t.length),pu(this.axes,e.length)],r}computeOutputShape(t){I(Array.isArray(t)&&2===t.length&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),r=t[1].slice();if(e.length>3||r.length>3)throw new fe("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(e,r);e.splice(s[0],1),r.splice(s[1],1),r.splice(0,1);const a=e.concat(r);return 1===a.length&&a.push(1),a}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}dx.className="Dot",bt(dx);class fx extends Ee{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return K(()=>{this.invokeCallHook(t,e);const r=me(t);return nu(()=>yt(fh(r.shape,0,this.stddev),r),()=>r,e.training||!1)})}}fx.className="GaussianNoise",bt(fx);class mx extends Ee{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return K(()=>{this.invokeCallHook(t,e);const r=me(t);return this.rate>0&&this.rate<1?nu(()=>{const s=Math.sqrt(this.rate/(1-this.rate));return M(r,fh(r.shape,1,s))},()=>r,e.training||!1):r})}}mx.className="GaussianDropout",bt(mx);class gx extends Ee{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||me(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return K(()=>{if(this.rate<1&&this.rate>0){const r=this._getNoiseShape(t);return nu(()=>{const a=me(t),i=-1.7580993408473766;let o=Za(Vl(r),this.rate);o=Ql(o,"float32");const u=((1-this.rate)*(1+this.rate*i**2))**-.5,c=-u*i*this.rate,l=yt(M(a,o),M(yt(o,-1),i));return yt(M(l,u),c)},()=>me(t),e.training||!1)}return t})}}function du(n,t,e,r,s,a=.001){let i;if(2===n.rank)i=O0(n,t,e,r,s,a);else if(3===n.rank)i=M0(n,t,e,r,s,a);else{if(4!==n.rank)throw new fe(`batchNormalization is not implemented for array of rank ${n.rank} yet`);i=L0(n,t,e,r,s,a)}return i}gx.className="AlphaDropout",bt(gx);class yx extends Ee{constructor(t){null==t&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis??-1,this.momentum=t.momentum??.99,this.epsilon=t.epsilon??.001,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Xe(t.betaInitializer||"zeros"),this.gammaInitializer=Xe(t.gammaInitializer||"ones"),this.movingMeanInitializer=Xe(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Xe(t.movingVarianceInitializer||"ones"),this.betaConstraint=wn(t.betaConstraint),this.gammaConstraint=wn(t.gammaConstraint),this.betaRegularizer=Ye(t.betaRegularizer),this.gammaRegularizer=Ye(t.gammaRegularizer)}build(t){t=Me(t);const e=this.axis>=0?this.axis:this.axis+t.length,r=t[e];if(null==r)throw new W(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new bn({ndim:t.length,axes:{[e]:r}})];const s=[r];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return K(()=>{const r=null!=e.training&&e.training,s=me(t),a=s.shape,i=a.length,o=es(0,i),u=this.axis>=0?this.axis:this.axis+i;o.splice(u,1);const c=ei(1,i);c[u]=a[u];const l=o.slice();l.sort();const h=!he(l,es(0,i).slice(0,i-1));if(!r)return(()=>{if(h){const g=P(this.movingMean.read(),c),y=P(this.movingVariance.read(),c),b=this.center?P(this.beta.read(),c):null,x=this.scale?P(this.gamma.read(),c):null;return du(s,g,y,b,x,this.epsilon)}return du(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[p,d,f]=function PT(n,t,e,r,s=.001){return he(r.slice().sort(),es(0,n.rank-1))?function(a,i,o,u,c=.001){return K(()=>{const l=Kc(a,u),h=l.mean,p=l.variance;return[du(a,h,p,o,i,c),h,p]})}(n,t,e,r,s):function(a,i,o,u,c=.001){return K(()=>{const l=Kc(a,u),h=l.mean,p=l.variance,d=[];for(const b of es(0,a.rank))-1!==u.indexOf(b)?d.push(1):d.push(a.shape[b]);const f=P(h,d),m=P(p,d),g=null==i?null:P(i,d),y=null==o?null:P(o,d);return[du(a,f,m,y,g,c),h,p]})}(n,t,e,r,s)}(s,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(g,y,b)=>{K(()=>{const x=1-b,w=g.read(),k=M(Ot(w,y),x);g.write(Ot(w,k))})};return m(this.movingMean,d,this.momentum),m(this.movingVariance,f,this.momentum),p})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:en(this.betaInitializer),gammaInitializer:en(this.gammaInitializer),movingMeanInitializer:en(this.movingMeanInitializer),movingVarianceInitializer:en(this.movingVarianceInitializer),betaRegularizer:Be(this.betaRegularizer),gammaRegularizer:Be(this.gammaRegularizer),betaConstraint:xn(this.betaConstraint),gammaConstraint:xn(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}yx.className="BatchNormalization",bt(yx);class bx extends Ee{constructor(t){if(null==t&&(t={}),super(t),this.axis=t.axis??-1,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=t.epsilon??.001,this.center=null==t.center||t.center,this.scale=null==t.scale||t.scale,this.betaInitializer=Xe(t.betaInitializer||"zeros"),this.gammaInitializer=Xe(t.gammaInitializer||"ones"),this.betaRegularizer=Ye(t.betaRegularizer),this.gammaRegularizer=Ye(t.gammaRegularizer),this.supportsMasking=!0}build(t){const e=(t=Me(t)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let s=0;s<this.axis.length;++s)this.axis[s]<0&&(this.axis[s]+=e);for(const s of this.axis)if(s<0||s>=e)throw new Error(`Invalid axis: ${s}`);if(this.axis.length!==fa(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const r=this.axis.map(s=>t[s]);this.gamma=this.scale?this.addWeight("gamma",r,"float32",this.gammaInitializer,this.gammaRegularizer,!0):null,this.beta=this.center?this.addWeight("beta",r,"float32",this.betaInitializer,this.betaRegularizer,!0):null,this.built=!0}call(t,e){const r=me(t),s=r.shape,a=s.length;return K(()=>{let{mean:i,variance:o}=Kc(r,this.axis,!0);const u=ei(1,a);for(const f of this.axis)u[f]=s[f];const c=f=>null!=f&&f.shape.length!==a?P(f,u):f;let l=this.scale?c(this.gamma.read()):null,h=this.center?c(this.beta.read()):null;const p=[],d=[];for(let f=0;f<a;++f)-1!==this.axis.indexOf(f)?(p.push(s[f]),d.push(1)):(p.push(1),d.push(s[f]));return i=_r(i,p),o=_r(o,p),null!=l&&(l=_r(l,d)),null!=h&&(h=_r(h,d)),du(r,i,o,h,l,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:en(this.betaInitializer),gammaInitializer:en(this.gammaInitializer),betaRegularizer:Be(this.betaRegularizer),gammaRegularizer:Be(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}bx.className="LayerNormalization",bt(bx);class xx extends Ee{constructor(t){if(null==t&&(t={}),super(t),this.dataFormat=t.dataFormat??"channelsLast",null==t.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof t.padding)this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,2!==t.padding.length)throw new W(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,r;if("number"==typeof t.padding[0])e=[t.padding[0],t.padding[0]],r=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,2!==t.padding[0].length)throw new W(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],2!==t.padding[1].length)throw new W(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);r=t.padding[1]}this.padding=[e,r]}this.inputSpec=[new bn({ndim:4})]}computeOutputShape(t){let e,r;return t=Me(t),"channelsFirst"===this.dataFormat?(e=null!=t[2]&&t[2]>=0?t[2]+this.padding[0][0]+this.padding[0][1]:null,r=null!=t[3]&&t[3]>=0?t[3]+this.padding[1][0]+this.padding[1][1]:null,[t[0],t[1],e,r]):(e=null!=t[1]&&t[1]>=0?t[1]+this.padding[0][0]+this.padding[0][1]:null,r=null!=t[2]&&t[2]>=0?t[2]+this.padding[1][0]+this.padding[1][1]:null,[t[0],e,r,t[3]])}call(t,e){return K(()=>{return r=me(t),s=this.padding,a=this.dataFormat,K(()=>{if(4!==r.rank)throw new W(`temporalPadding expects input tensor to be 4-D, but received a ${r.rank}-D tensor.`);if(null==s&&(s=[[1,1],[1,1]]),2!==s.length||2!==s[0].length||2!==s[1].length)throw new W("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==a&&(a="channelsLast"),"channelsLast"!==a&&"channelsFirst"!==a)throw new W(`Unknown data format: ${a}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let i;return i="channelsFirst"===a?[[0,0],[0,0],s[0],s[1]]:[[0,0],s[0],s[1],[0,0]],da(r,i)});var r,s,a})}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}function Fh(n,t,e,r,s,a){return K(()=>{let i;ln(s),x1(a),$r(r),null==e&&(e=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),n=gm(n,s);const o="same"===r?"same":"valid";return i="max"===a?qc(n,t,e,o):Lc(n,t,e,o),"channelsFirst"===s&&(i=Te(i,[0,3,1,2])),i})}function wx(n,t,e,r,s,a){return K(()=>{let i;ln(s),x1(a),$r(r),null==e&&(e=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),n=Mb(n,s);const o="same"===r?"same":"valid";return i="max"===a?ly(n,t,e,o):_0(n,t,e,o),"channelsFirst"===s&&(i=Te(i,[0,4,1,2,3])),i})}xx.className="ZeroPadding2D",bt(xx);class vx extends Ee{constructor(t){if(null==t.poolSize&&(t.poolSize=2),super(t),"number"==typeof t.poolSize)this.poolSize=[t.poolSize];else{if(!Array.isArray(t.poolSize)||1!==t.poolSize.length||"number"!=typeof t.poolSize[0])throw new W(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);this.poolSize=t.poolSize}if(Tn(this.poolSize,"poolSize"),null==t.strides)this.strides=this.poolSize;else if("number"==typeof t.strides)this.strides=[t.strides];else{if(!Array.isArray(t.strides)||1!==t.strides.length||"number"!=typeof t.strides[0])throw new W(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);this.strides=t.strides}Tn(this.strides,"strides"),this.padding=t.padding??"valid",$r(this.padding),this.inputSpec=[new bn({ndim:3})]}computeOutputShape(t){const e=as((t=Me(t))[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return K(()=>{this.invokeCallHook(t,e),t=tu(me(t),2);const r=this.poolingFunction(me(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return dr(r,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class kx extends vx{constructor(t){super(t)}poolingFunction(t,e,r,s,a){return ln(a),$r(s),Fh(t,e,r,s,a,"max")}}kx.className="MaxPooling1D",bt(kx);class Ix extends vx{constructor(t){super(t)}poolingFunction(t,e,r,s,a){return ln(a),$r(s),Fh(t,e,r,s,a,"avg")}}Ix.className="AveragePooling1D",bt(Ix);class Nx extends Ee{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(2!==t.strides.length)throw new W(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];Tn(this.poolSize,"poolSize"),Tn(this.strides,"strides"),this.padding=t.padding??"valid",this.dataFormat=t.dataFormat??"channelsLast",ln(this.dataFormat),$r(this.padding),this.inputSpec=[new bn({ndim:4})]}computeOutputShape(t){t=Me(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],r="channelsFirst"===this.dataFormat?t[3]:t[2];return e=as(e,this.poolSize[0],this.padding,this.strides[0]),r=as(r,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,r]:[t[0],e,r,t[3]]}call(t,e){return K(()=>(this.invokeCallHook(t,e),this.poolingFunction(me(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class Sx extends Nx{constructor(t){super(t)}poolingFunction(t,e,r,s,a){return ln(a),$r(s),Fh(t,e,r,s,a,"max")}}Sx.className="MaxPooling2D",bt(Sx);class Tx extends Nx{constructor(t){super(t)}poolingFunction(t,e,r,s,a){return ln(a),$r(s),Fh(t,e,r,s,a,"avg")}}Tx.className="AveragePooling2D",bt(Tx);class Cx extends Ee{constructor(t){if(null==t.poolSize&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],null==t.strides)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(3!==t.strides.length)throw new W(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];Tn(this.poolSize,"poolSize"),Tn(this.strides,"strides"),this.padding=t.padding??"valid",this.dataFormat=t.dataFormat??"channelsLast",ln(this.dataFormat),$r(this.padding),this.inputSpec=[new bn({ndim:5})]}computeOutputShape(t){t=Me(t);let e="channelsFirst"===this.dataFormat?t[2]:t[1],r="channelsFirst"===this.dataFormat?t[3]:t[2],s="channelsFirst"===this.dataFormat?t[4]:t[3];return e=as(e,this.poolSize[0],this.padding,this.strides[0]),r=as(r,this.poolSize[1],this.padding,this.strides[1]),s=as(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[t[0],t[1],e,r,s]:[t[0],e,r,s,t[4]]}call(t,e){return K(()=>(this.invokeCallHook(t,e),this.poolingFunction(me(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class $x extends Cx{constructor(t){super(t)}poolingFunction(t,e,r,s,a){return ln(a),$r(s),wx(t,e,r,s,a,"max")}}$x.className="MaxPooling3D",bt($x);class Ex extends Cx{constructor(t){super(t)}poolingFunction(t,e,r,s,a){return ln(a),$r(s),wx(t,e,r,s,a,"avg")}}Ex.className="AveragePooling3D",bt(Ex);class Rx extends Ee{constructor(t){super(t),this.inputSpec=[new bn({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new fe}}class Ax extends Rx{constructor(t){super(t||{})}call(t,e){return K(()=>{const r=me(t);return rn(r,1)})}}Ax.className="GlobalAveragePooling1D",bt(Ax);class Fx extends Rx{constructor(t){super(t||{})}call(t,e){return K(()=>{const r=me(t);return Zr(r,1)})}}Fx.className="GlobalMaxPooling1D",bt(Fx);class Dx extends Ee{constructor(t){super(t),this.dataFormat=t.dataFormat??"channelsLast",ln(this.dataFormat),this.inputSpec=[new bn({ndim:4})]}computeOutputShape(t){return"channelsLast"===this.dataFormat?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new fe}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class _x extends Dx{call(t,e){return K(()=>{const r=me(t);return rn(r,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}_x.className="GlobalAveragePooling2D",bt(_x);class Ox extends Dx{call(t,e){return K(()=>{const r=me(t);return Zr(r,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}Ox.className="GlobalMaxPooling2D",bt(Ox);class Mx extends Ee{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(t){null!=this.layer&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,r={}){const s=Os(e.layer,r);delete e.layer;const a={layer:s};return Object.assign(a,e),new t(a)}}class Lx extends Mx{constructor(t){super(t),this.supportsMasking=!0}build(t){if((t=Me(t)).length<3)throw new W(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){const e=[(t=Me(t))[0]].concat(t.slice(2)),r=this.layer.computeOutputShape(e);return[r[0],t[1]].concat(r.slice(1))}call(t,e){return K(()=>jb((r,s)=>[me(this.layer.call(r,e)),[]],t=me(t),[],!1,null,null,!1,!0)[1])}}Lx.className="TimeDistributed",bt(Lx);class zx extends Mx{constructor(t){super(t);const e=t.layer.getConfig(),r={};r.className=t.layer.getClassName(),r.config=e,this.forwardLayer=Os(r),e.goBackwards=!0!==e.goBackwards;const s={};if(s.className=t.layer.getClassName(),s.config=e,this.backwardLayer=Os(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===t.mergeMode?"concat":t.mergeMode,ri(oT,"BidirectionalMergeMode",this.mergeMode),t.weights)throw new fe("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,null!=this.forwardLayer&&(this.forwardLayer.trainable=t),null!=this.backwardLayer&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const r=Math.floor(t.length/2);this.forwardLayer.setWeights(t.slice(0,r)),this.backwardLayer.setWeights(t.slice(r))}computeOutputShape(t){let e,r,s,a=this.forwardLayer.computeOutputShape(t);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState&&(s=a.slice(1)),e=a[0],"concat"===this.mergeMode?(e[e.length-1]*=2,r=[e]):r=null==this.mergeMode?[e,e.slice()]:[e],this.returnState?null==this.mergeMode?r.concat(s).concat(s.slice()):[e].concat(s).concat(s.slice()):rr(r)}apply(t,e){let r=null==e?null:e.initialState,s=null==e?null:e.constants;null==e&&(e={});const a=Hb(t,r,s,this.numConstants);if(t=a.inputs,r=a.initialState,s=a.constants,Array.isArray(t)&&(r=t.slice(1),t=t[0]),(null==r||0===r.length)&&null==s)return super.apply(t,e);const i=[],o=[];if(null!=r){const c=r.length;if(c%2>0)throw new W("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=r,i.push(...r);const l=r.map(h=>new bn({shape:h.shape}));this.forwardLayer.stateSpec=l.slice(0,c/2),this.backwardLayer.stateSpec=l.slice(c/2),o.push(...l)}if(null!=s)throw new fe("Support for constants in Bidirectional layers is not implemented yet.");const u=i[0]instanceof gs;for(const c of i)if(c instanceof gs!==u)throw new W("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){const c=[t].concat(i),l=this.inputSpec.concat(o),h=this.inputSpec;this.inputSpec=l;const p=super.apply(c,e);return this.inputSpec=h,p}return super.apply(t,e)}call(t,e){return K(()=>{const r=e.initialState;let s,a,i,o;if(null==r)s=this.forwardLayer.call(t,e),a=this.backwardLayer.call(t,e);else{const u=r.slice(0,r.length/2),c=r.slice(r.length/2);s=this.forwardLayer.call(t,Object.assign(e,{initialState:u})),a=this.backwardLayer.call(t,Object.assign(e,{initialState:c}))}return this.returnState&&(Array.isArray(s)&&(i=s.slice(1).concat(a.slice(1))),s=s[0],a=a[0]),this.returnSequences&&(a=Or(a,1)),"concat"===this.mergeMode?o=Gf([s,a]):"sum"===this.mergeMode?o=yt(s,a):"ave"===this.mergeMode?o=M(.5,yt(s,a)):"mul"===this.mergeMode?o=M(s,a):null==this.mergeMode&&(o=[s,a]),this.returnState?null==this.mergeMode?o.concat(i):[o].concat(i):o})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){si(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),si(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){let r;if(Array.isArray(e)&&(e=e[0]),r=this.returnSequences?null==this.mergeMode?[e,e]:e:null==this.mergeMode?[null,null]:null,this.returnState){const s=this.forwardLayer.states.map(a=>null);return Array.isArray(r)?r.concat(s).concat(s):[r].concat(s).concat(s)}return r}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(t),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const r=Os(e.layer);if(delete e.layer,null!=e.numConstants)throw new fe("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=e;return s.layer=r,new t(s)}}zx.className="Bidirectional",bt(zx);class Px extends Ee{constructor(t){super(t),this.scale=t.scale,this.offset=t.offset?t.offset:0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return K(()=>("float32"!==(t=me(t)).dtype&&(t=Ql(t,"float32")),yt(M(t,this.scale),this.offset)))}}Px.className="Rescaling",bt(Px),Q().registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")}),function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"}(Br||(Br={})),function(n){let t;var e;(e=t=n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(Bx||(Bx={}));const BT={};function Wx(n){return BT[n]}function v(n,t,e,r,s){const a=t.inputParams[n];if(a&&void 0!==a.inputIndexStart){const o=a.inputIndexStart,u=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?o+1:a.inputIndexEnd;if("tensor"===a.type)return Hn(t.inputNames[a.inputIndexStart],e,r,s);if("tensors"===a.type)return t.inputNames.slice(o,u).map(h=>Hn(h,e,r,s));const c=Hn(t.inputNames.slice(o)[0],e,r,s),l=c.dataSync();return"number"===a.type?l[0]:Wn(c.shape,l)}const i=t.attrParams[n];return i&&i.value}function Hn(n,t,e,r){const[s,a]=mr(n);if(null!=r){const o=r.getHashTableHandleByName(s);if(null!=o)return o}const i=e.currentContextIds.find(o=>!!t[Dh(s,o)]);return void 0!==i?t[Dh(s,i)][a]:void 0}function bs(n,t){const[e,r,s]=mr(n);return[Dh(e,t&&t.currentContextId),r,s]}function Dh(n,t){return t?`${n}-${t}`:n}function mr(n){const t=n.split(":");if(1===t.length)return[n,0,void 0];const r=3===t.length?t[1]:void 0;return[t[0],Number(t[t.length-1]),r]}function _h(n,t,e){let r=v("pad",n,t,e);if("explicit"===r){r=v("explicitPaddings",n,t,e);const s=[[0,0],[0,0],[0,0],[0,0]];for(let a=0;a<4;a++)s[a][0]=r[2*a],s[a][1]=r[2*a+1];return s}return r}function ka(n){return n.kept?n:Ss(n)}const WT=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],VT=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],UT=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],GT=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],HT=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],jT=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],qT=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],KT=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],XT=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],YT=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],ZT=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],JT=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],QT=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],tC=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],eC=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],nC=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],rC=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],sC=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],aC=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class Vx{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[Xt,le,ee,$t,Yt,wt,U,B,st,ct,H,mt,tt,Et,kt,zt,ie,ut,vt].map(e=>e.json));this.opMappers=t.reduce((e,r)=>(e[r.tfOpName]=r,e),{})}transformGraph(t,e={}){const s=[],a=[],i=[],o=t.node.reduce((m,g)=>(m[g.name]=this.mapNode(g),g.op.startsWith("Placeholder")?s.push(m[g.name]):"Const"===g.op?a.push(m[g.name]):null!=g.input&&0!==g.input.length||i.push(m[g.name]),m),{});let u=[];const c=[];let l={},h={};null!=e&&(l=this.mapSignatureEntries(e.inputs),h=this.mapSignatureEntries(e.outputs));const p=Object.keys(o);p.forEach(m=>{const g=o[m];g.inputNames.forEach((y,b)=>{const[x,,w]=bs(y),k=o[x];if(null!=k.outputs){const N=k.outputs.indexOf(w);-1!==N&&(g.inputNames[b]=`${x}:${N}`)}g.inputs.push(k),k.children.push(g)})}),0===Object.keys(h).length?p.forEach(m=>{const g=o[m];0===g.children.length&&c.push(g)}):Object.keys(h).forEach(m=>{const[g]=bs(m),y=o[g];null!=y&&(y.signatureKey=h[m],c.push(y))}),Object.keys(l).length>0?Object.keys(l).forEach(m=>{const[g]=bs(m),y=o[g];y&&(y.signatureKey=l[m],u.push(y))}):u=s;let d={};null!=t.library&&null!=t.library.function&&(d=t.library.function.reduce((m,g)=>(m[g.signature.name]=this.mapFunction(g),m),{}));const f={nodes:o,inputs:u,outputs:c,weights:a,placeholders:s,signature:e,functions:d};return i.length>0&&(f.initNodes=i),f}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,r)=>(e[t[r].name]=r,e),{})}mapNode(t){const e=Wx(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const r={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(s=>s.startsWith("^")?s.slice(1):s),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return null!=e.inputs&&(r.inputParams=e.inputs.reduce((s,a)=>(s[a.name]={type:a.type,inputIndexStart:a.start,inputIndexEnd:a.end},s),{})),null!=e.attrs&&(r.attrParams=e.attrs.reduce((s,a)=>{const i=a.type;let o;switch(a.type){case"string":o=km(t.attr,a.tfName,a.defaultValue),void 0===o&&a.tfDeprecatedName&&(o=km(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"string[]":o=Rm(t.attr,a.tfName,a.defaultValue),void 0===o&&a.tfDeprecatedName&&(o=Rm(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"number":o=Nm(t.attr,a.tfName,a.defaultValue||0),void 0===o&&a.tfDeprecatedName&&(o=Nm(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"number[]":o=Em(t.attr,a.tfName,a.defaultValue),void 0===o&&a.tfDeprecatedName&&(o=Em(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool":o=Im(t.attr,a.tfName,a.defaultValue),void 0===o&&a.tfDeprecatedName&&(o=Im(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool[]":o=Fm(t.attr,a.tfName,a.defaultValue),void 0===o&&a.tfDeprecatedName&&(o=Fm(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape":o=$m(t.attr,a.tfName,a.defaultValue),void 0===o&&a.tfDeprecatedName&&(o=$m(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape[]":o=Am(t.attr,a.tfName,a.defaultValue),void 0===o&&a.tfDeprecatedName&&(o=Am(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype":o=Tm(t.attr,a.tfName,a.defaultValue),void 0===o&&a.tfDeprecatedName&&(o=Tm(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype[]":o=Cm(t.attr,a.tfName,a.defaultValue),void 0===o&&a.tfDeprecatedName&&(o=Cm(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"func":o=Gx(t.attr,a.tfName,a.defaultValue),void 0===o&&a.tfDeprecatedName&&(o=Gx(t.attr,a.tfDeprecatedName,a.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${a.type} for op: ${t.op}`)}return s[a.name]={value:o,type:i},s},{})),r}mapFunction(t){const e=t.nodeDef,r=[];let s={};null!=e&&(s=e.reduce((c,l)=>(c[l.name]=this.mapNode(l),"Const"===l.op&&r.push(c[l.name]),c),{}));const a=[],i=[];t.signature.inputArg.forEach(c=>{const[l]=bs(c.name),h={name:l,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Sm(c.type),type:"dtype"}},children:[]};h.signatureKey=c.name,a.push(h),s[l]=h}),Object.keys(s).forEach(c=>{const l=s[c];l.inputNames.forEach((h,p)=>{const[d,,f]=bs(h),m=s[d];if(null!=m.outputs){const g=m.outputs.indexOf(f);-1!==g&&(l.inputNames[p]=`${d}:${g}`)}l.inputs.push(m),m.children.push(l)})});const o=t.ret;t.signature.outputArg.forEach(c=>{const[l,h]=bs(o[c.name]),p=s[l];null!=p&&(p.defaultOutput=h,i.push(p))});const u=this.mapArgsToSignature(t);return{nodes:s,inputs:a,outputs:i,weights:r,placeholders:[],signature:u}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((e,r)=>(e[r.name]=this.mapArgToTensorInfo(r),e),{}),outputs:t.signature.outputArg.reduce((e,r)=>(e[r.name]=this.mapArgToTensorInfo(r,t.ret),e),{})}}mapArgToTensorInfo(t,e){let r=t.name;return null!=e&&(r=e[r]),{name:r,dtype:t.type}}}function Ux(n,t){const e=Array.isArray(n)?String.fromCharCode.apply(null,n):function(r){const s=Q().global;if(void 0!==s.atob)return s.atob(r);if(typeof Buffer<"u")return new Buffer(r,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(n);return t?e:e.toLowerCase()}function km(n,t,e,r=!1){const s=n[t];return null!=s?Ux(s.s,r):e}function Im(n,t,e){const r=n[t];return r?r.b:e}function Nm(n,t,e){const r=n[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:e;return"number"==typeof s?s:parseInt(s,10)}function Sm(n){switch("string"==typeof n&&(n=Br[n]),n){case Br.DT_FLOAT:case Br.DT_HALF:return"float32";case Br.DT_INT32:case Br.DT_INT64:case Br.DT_INT8:case Br.DT_UINT8:return"int32";case Br.DT_BOOL:return"bool";case Br.DT_DOUBLE:return"float32";case Br.DT_STRING:return"string";default:return null}}function Gx(n,t,e){const r=n[t];return r&&r.func?r.func.name:e}function Tm(n,t,e){const r=n[t];return r&&r.type?Sm(r.type):e}function Cm(n,t,e){const r=n[t];return r&&r.list&&r.list.type?r.list.type.map(s=>Sm(s)):e}function Hx(n){if(!n.unknownRank)return null!=n.dim?n.dim.map(t=>"number"==typeof t.size?t.size:parseInt(t.size,10)):[]}function $m(n,t,e){const r=n[t];return r&&r.shape?Hx(r.shape):e}function Em(n,t,e){const r=n[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(s=>"number"==typeof s?s:parseInt(s,10)):e}function Rm(n,t,e,r=!1){const s=n[t];return s&&s.list&&s.list.s?s.list.s.map(a=>Ux(a,r)):e}function Am(n,t,e){const r=n[t];return r&&r.list&&r.list.shape?r.list.shape.map(s=>Hx(s)):e}function Fm(n,t,e){const r=n[t];return r&&r.list&&r.list.b?r.list.b:e}class iC{constructor(t,e,r){this.node=t,this.tensorMap=e,this.context=r,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(s=>this.getInput(s)),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce((s,a)=>(s[a]=this.getAttr(a),s),{}))}getInput(t){return Hn(t,this.tensorMap,this.context)}getAttr(t,e){const r=this.node.rawAttrs[t];if(null!=r.tensor)return Hn(t,this.tensorMap,this.context);if(null!=r.i||null!=r.f)return Nm(this.node.rawAttrs,t,e);if(null!=r.s)return km(this.node.rawAttrs,t,e);if(null!=r.b)return Im(this.node.rawAttrs,t,e);if(null!=r.shape)return $m(this.node.rawAttrs,t,e);if(null!=r.type)return Tm(this.node.rawAttrs,t,e);if(null!=r.list){if(null!=r.list.i||null!=r.list.f)return Em(this.node.rawAttrs,t,e);if(null!=r.list.s)return Rm(this.node.rawAttrs,t,e);if(null!=r.list.shape)return Am(this.node.rawAttrs,t,e);if(null!=r.list.b)return Fm(this.node.rawAttrs,t,e);if(null!=r.list.type)return Cm(this.node.rawAttrs,t,e)}return e}}function Wr(n,t,e=""){if("number"!=typeof n&&"number"!=typeof t){I(n.length===t.length,()=>e+` Shapes ${n} and ${t} must match`);for(let r=0;r<n.length;r++){const s=n[r],a=t[r];I(s<0||a<0||s===a,()=>e+` Shapes ${n} and ${t} must match`)}}}function jx(n){return"number"!=typeof n&&!n.some(t=>t<0)}function fu(n,t,e){let r=Dm(n,e);const s=!jx(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach(a=>{r=Dm(a.shape,r)}),!jx(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Dm(n,t){if("number"==typeof n)return t;if("number"==typeof t)return n;if(n.length!==t.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${t}`);const e=[];for(let r=0;r<n.length;++r){const s=n[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${n} vs. ${t}`);e[r]=s>=0?s:a}return e}class oC{constructor(t,e,r,s,a,i,o){this.name=t,this.dtype=e,this.maxSize=r,this.elementShape=s,this.identicalElementShapes=a,this.dynamicSize=i,this.clearAfterRead=o,this.tensors=[],this.closed_=!1,this.idTensor=Qt(0),An(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(e=>this.read(e))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const r=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),Wr(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),r.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(r.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);r.tensor=e,An(e),r.written=!0,this.tensors[t]=r}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((r,s)=>this.write(r,e[s]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let s=0;s<this.size();s++)t.push(s)}if(0===t.length)return Kr([],[0].concat(this.elementShape));const r=this.readMany(t);return Wr(this.elementShape,r[0].shape,"TensorArray shape mismatch: "),Cr(r,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return Kr([],[0].concat(this.elementShape));const e=[];for(let s=0;s<this.size();s++)e.push(s);const r=this.readMany(e);return Wr(this.elementShape,r[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${r[0].shape})`),je(r,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const r=Math.max(...t);if(!this.dynamicSize&&r>=this.maxSize)throw new Error(`Max index must be < array size (${r}  vs. ${this.maxSize})`);this.writeMany(t,Jr(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let r=0;const s=t.map(u=>(r+=u,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===r?0:e.size/r,i=[];K(()=>{e=P(e,[1,r,a]);for(let u=0;u<t.length;++u)i[u]=P(ne(e,[0,0===u?0:s[u-1],0],[1,t[u],a]),this.elementShape);return i});const o=[];for(let u=0;u<t.length;u++)o[u]=u;this.writeMany(o,i)}}class li{constructor(t,e,r,s=-1){this.tensors=t,this.elementShape=e,this.elementDtype=r,t?.forEach(a=>{if(r!==a.dtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${a.dtype}`);Wr(e,a.shape,"TensorList shape mismatch: "),An(a)}),this.idTensor=Qt(0),this.maxNumElements=s,An(this.idTensor)}get id(){return this.idTensor.id}copy(){return new li([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{null!=t&&t.has(e.id)||e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,r=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==r&&this.tensors.length!==r)throw new Error(`Operation expected a list with ${r} elements but got a list with ${this.tensors.length} elements.`);Wr(t,this.elementShape,"TensorList shape mismatch: ");const s=fu(this.elementShape,this.tensors,t);return K(()=>{const a=this.tensors.map(i=>P(i,s));return Cr(a,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const r=fu(this.elementShape,this.tensors,t),s=this.tensors.pop();return s.kept=!1,Wr(s.shape,t,"TensorList shape mismatch: "),P(s,r)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(Wr(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");An(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);const e=new li([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let r=0;r<Math.min(this.tensors.length,t);++r)e.tensors[r]=this.tensors[r];return e}getItem(t,e,r){if(r!==this.elementDtype)throw new Error(`Invalid data types; op elements ${r}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);Wr(this.tensors[t].shape,e,"TensorList shape mismatch: ");const s=fu(this.elementShape,this.tensors,e);return P(this.tensors[t],s)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);Wr(this.elementShape,e.shape,"TensorList shape mismatch: "),An(e),null!=this.tensors[t]&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,r){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);Wr(this.elementShape,r,"TensorList shape mismatch: "),t=t.slice(0,this.size());const s=fu(this.elementShape,this.tensors,r);return 0===t.length?Kr([],[0].concat(s)):K(()=>{const a=t.map(i=>P(this.tensors[i],s));return Cr(a,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);Wr(this.elementShape,e,"TensorList shape mismatch: ");const r=fu(this.elementShape,this.tensors,e);return 0===this.size()?Kr([],[0].concat(r)):K(()=>{const s=this.tensors.map(a=>P(a,r));return je(s,0)})}}function qx(n,t,e){const[r,s]=v("fusedOps",n,t,e),a="biasadd"===r,i=!a,o="prelu"===s,u="fusedbatchnorm"===r,c=v("numArgs",n,t,e);if(a){if(o&&2!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&1!==c)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const l=v("strides",n,t,e),h=_h(n,t,e),p=v("dataFormat",n,t,e).toUpperCase(),d=v("dilations",n,t,e);let[f,m]=v("args",n,t,e);return i&&(m=f,f=void 0),{stride:l,pad:h,dataFormat:p,dilations:d,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:v("leakyreluAlpha",n,t,e)}}function _m(n,t,e){return{boxes:v("boxes",n,t,e),scores:v("scores",n,t,e),maxOutputSize:v("maxOutputSize",n,t,e),iouThreshold:v("iouThreshold",n,t,e),scoreThreshold:v("scoreThreshold",n,t,e),softNmsSigma:v("softNmsSigma",n,t,e)}}class uC{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=Qt(0),this.tensorMap=new Map,An(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Qt(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);const r=await t.data();return this.tensorMap.forEach(s=>s.dispose()),this.tensorMap.clear(),K(()=>{const s=Jr(e),a=r.length,i=s.length;I(a===i,()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${i} elements.`);for(let o=0;o<a;o++){const u=r[o],c=s[o];An(c),this.tensorMap.set(u,c)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);const r=await t.data();return K(()=>{const s=[];for(let a=0;a<r.length;a++){const o=this.findWithDefault(r[a],e);s.push(o)}return Cr(s)})}findWithDefault(t,e){return this.tensorMap.get(t)??e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}function Kx(n,t,e,r,s=K){const a=((i,o,u)=>{switch(i.category){case"arithmetic":return s(()=>((l,h,p,d=q)=>{switch(l.op){case"BiasAdd":case"AddV2":case"Add":return[d.add(v("a",l,h,p),v("b",l,h,p))];case"AddN":return[d.addN(v("tensors",l,h,p))];case"FloorMod":case"Mod":return[d.mod(v("a",l,h,p),v("b",l,h,p))];case"Mul":return[d.mul(v("a",l,h,p),v("b",l,h,p))];case"RealDiv":case"Div":return[d.div(v("a",l,h,p),v("b",l,h,p))];case"DivNoNan":return[d.divNoNan(v("a",l,h,p),v("b",l,h,p))];case"FloorDiv":return[d.floorDiv(v("a",l,h,p),v("b",l,h,p))];case"Sub":return[d.sub(v("a",l,h,p),v("b",l,h,p))];case"Minimum":return[d.minimum(v("a",l,h,p),v("b",l,h,p))];case"Maximum":return[d.maximum(v("a",l,h,p),v("b",l,h,p))];case"Pow":return[d.pow(v("a",l,h,p),v("b",l,h,p))];case"SquaredDifference":return[d.squaredDifference(v("a",l,h,p),v("b",l,h,p))];default:throw TypeError(`Node type ${l.op} is not implemented`)}})(i,o,u));case"basic_math":return s(()=>((l,h,p,d=q)=>{switch(l.op){case"Abs":case"ComplexAbs":return[d.abs(v("x",l,h,p))];case"Acos":return[d.acos(v("x",l,h,p))];case"Acosh":return[d.acosh(v("x",l,h,p))];case"Asin":return[d.asin(v("x",l,h,p))];case"Asinh":return[d.asinh(v("x",l,h,p))];case"Atan":return[d.atan(v("x",l,h,p))];case"Atan2":return[d.atan2(v("x",l,h,p),v("y",l,h,p))];case"Atanh":return[d.atanh(v("x",l,h,p))];case"Ceil":return[d.ceil(v("x",l,h,p))];case"Complex":return[d.complex(v("real",l,h,p),v("imag",l,h,p))];case"Cos":return[d.cos(v("x",l,h,p))];case"Cosh":return[d.cosh(v("x",l,h,p))];case"Elu":return[d.elu(v("x",l,h,p))];case"Erf":return[d.erf(v("x",l,h,p))];case"Exp":return[d.exp(v("x",l,h,p))];case"Expm1":return[d.expm1(v("x",l,h,p))];case"Floor":return[d.floor(v("x",l,h,p))];case"Log":return[d.log(v("x",l,h,p))];case"Log1p":return[d.log1p(v("x",l,h,p))];case"Imag":return[d.imag(v("x",l,h,p))];case"Neg":return[d.neg(v("x",l,h,p))];case"Reciprocal":return[d.reciprocal(v("x",l,h,p))];case"Real":return[d.real(v("x",l,h,p))];case"Relu":return[d.relu(v("x",l,h,p))];case"Round":return[d.round(v("x",l,h,p))];case"Selu":return[d.selu(v("x",l,h,p))];case"Sigmoid":return[d.sigmoid(v("x",l,h,p))];case"Sin":return[d.sin(v("x",l,h,p))];case"Sign":return[d.sign(v("x",l,h,p))];case"Sinh":return[d.sinh(v("x",l,h,p))];case"Softplus":return[d.softplus(v("x",l,h,p))];case"Sqrt":return[d.sqrt(v("x",l,h,p))];case"Square":return[d.square(v("x",l,h,p))];case"Tanh":return[d.tanh(v("x",l,h,p))];case"Tan":return[d.tan(v("x",l,h,p))];case"ClipByValue":return[d.clipByValue(v("x",l,h,p),v("clipValueMin",l,h,p),v("clipValueMax",l,h,p))];case"Relu6":return[d.relu6(v("x",l,h,p))];case"Rsqrt":return[d.rsqrt(Hn(l.inputNames[0],h,p))];case"Prod":return[d.prod(v("x",l,h,p),v("axes",l,h,p))];case"LeakyRelu":return[d.leakyRelu(v("x",l,h,p),v("alpha",l,h,p))];case"Prelu":return[d.prelu(v("x",l,h,p),v("alpha",l,h,p))];case"IsNan":return[d.isNaN(Hn(l.inputNames[0],h,p))];default:throw TypeError(`Node type ${l.op} is not implemented`)}})(i,o,u));case"control":return(async(n,t,e)=>{switch(n.op){case"If":case"StatelessIf":{const r=v("thenBranch",n,t,e),s=v("elseBranch",n,t,e),a=v("cond",n,t,e),i=v("args",n,t,e);return(await a.data())[0]?e.functionMap[r].executeFunctionAsync(i,e.tensorArrayMap,e.tensorListMap):e.functionMap[s].executeFunctionAsync(i,e.tensorArrayMap,e.tensorListMap)}case"While":case"StatelessWhile":{const r=v("body",n,t,e),s=v("cond",n,t,e),a=v("args",n,t,e),i=await e.functionMap[s].executeFunctionAsync(a,e.tensorArrayMap,e.tensorListMap),o=a.map(l=>l.id);let u=await i[0].data();i.forEach(l=>{l.kept||-1!==o.indexOf(l.id)||l.dispose()});let c=a;for(;u[0];){const l=c;c=await e.functionMap[r].executeFunctionAsync(c,e.tensorArrayMap,e.tensorListMap);const h=c.map(d=>d.id);l.forEach(d=>{d.kept||-1!==o.indexOf(d.id)||-1!==h.indexOf(d.id)||d.dispose()});const p=await e.functionMap[s].executeFunctionAsync(c,e.tensorArrayMap,e.tensorListMap);u=await p[0].data(),p.forEach(d=>{d.kept||-1!==o.indexOf(d.id)||-1!==h.indexOf(d.id)||d.dispose()})}return c}case"LoopCond":return[ka(v("pred",n,t,e))];case"Switch":{const r=v("pred",n,t,e);let s=v("data",n,t,e);return s.kept||(s=ka(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=n.inputNames.find(s=>void 0!==Hn(s,t,e));return r?[ka(Hn(r,t,e))]:void 0}case"Enter":{const r=v("frameName",n,t,e),s=v("tensor",n,t,e);return e.enterFrame(r),[ka(s)]}case"Exit":{const r=v("tensor",n,t,e);return e.exitFrame(),[ka(r)]}case"NextIteration":{const r=v("tensor",n,t,e);return e.nextIteration(),[ka(r)]}case"TensorArrayV3":{const r=v("size",n,t,e),s=v("dtype",n,t,e),a=v("elementShape",n,t,e),i=v("dynamicSize",n,t,e),o=v("clearAfterRead",n,t,e),u=v("identicalElementShapes",n,t,e),c=v("name",n,t,e),l=new oC(c,s,r,a,u,i,o);return e.addTensorArray(l),[l.idTensor,Qt(1)]}case"TensorArrayWriteV3":{const r=v("tensorArrayId",n,t,e),s=v("index",n,t,e),a=v("tensor",n,t,e),i=e.getTensorArray(r.id);return i.write(s,a),[i.idTensor]}case"TensorArrayReadV3":{const r=v("tensorArrayId",n,t,e),s=v("index",n,t,e);return[e.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=v("tensorArrayId",n,t,e),s=v("indices",n,t,e),a=v("dtype",n,t,e);return[e.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=v("tensorArrayId",n,t,e),s=v("indices",n,t,e),a=v("tensor",n,t,e),i=e.getTensorArray(r.id);return i.scatter(s,a),[i.idTensor]}case"TensorArrayConcatV3":{const r=v("tensorArrayId",n,t,e),s=e.getTensorArray(r.id),a=v("dtype",n,t,e);return[s.concat(a)]}case"TensorArraySplitV3":{const r=v("tensorArrayId",n,t,e),s=v("tensor",n,t,e),a=v("lengths",n,t,e),i=e.getTensorArray(r.id);return i.split(a,s),[i.idTensor]}case"TensorArraySizeV3":{const r=v("tensorArrayId",n,t,e);return[Qt(e.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=v("tensorArrayId",n,t,e),s=e.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=v("tensorListId",n,t,e),s=v("index",n,t,e),a=v("tensor",n,t,e),i=e.getTensorList(r.id);return i.setItem(s,a),[i.idTensor]}case"TensorListGetItem":{const r=v("tensorListId",n,t,e),s=v("index",n,t,e),a=v("elementShape",n,t,e),i=v("elementDType",n,t,e);return[e.getTensorList(r.id).getItem(s,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=v("indices",n,t,e),s=function(a,i,o,u){if(i.length!==a.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${i.length} vs. ${a.shape[0]}`);const c=Math.max(...i);if(null!=u&&-1!==u&&c>=u)throw new Error(`Max index must be < array size (${c}  vs. ${u})`);const l=new li([],o,a.dtype,u),h=Jr(a,0);return i.forEach((p,d)=>{l.setItem(p,h[d])}),l}(v("tensor",n,t,e),r,v("elementShape",n,t,e),v("numElements",n,t,e));return e.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=v("elementShape",n,t,e),s=v("elementDType",n,t,e);let a;a="TensorListReserve"===n.op?"numElements":"maxNumElements";const i=v(a,n,t,e),o=new li([],r,s,"TensorListReserve"===n.op?-1:i);return e.addTensorList(o),[o.idTensor]}case"TensorListGather":{const r=v("tensorListId",n,t,e),s=v("indices",n,t,e),a=v("elementShape",n,t,e),i=v("elementDType",n,t,e);return[e.getTensorList(r.id).gather(s,i,a)]}case"TensorListStack":{const r=v("tensorListId",n,t,e),s=v("elementShape",n,t,e),a=v("elementDType",n,t,e),i=v("numElements",n,t,e);return[e.getTensorList(r.id).stack(s,a,i)]}case"TensorListFromTensor":{const r=function(s,a,i){const o=s.dtype;if(s.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${s.shape}`);if(s.dtype!==i)throw new Error(`Invalid data types; op elements ${s.dtype}, but list elements ${i}`);Wr(s.shape.slice(1),a,"TensorList shape mismatch: ");const u=Jr(s);return new li(u,a,o)}(v("tensor",n,t,e),v("elementShape",n,t,e),v("elementDType",n,t,e));return e.addTensorList(r),[r.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const r=v("tensorListId",n,t,e),s=e.getTensorList(r.id),a=v("dtype",n,t,e),i=v("elementShape",n,t,e);return[s.concat(a,i)]}case"TensorListPushBack":{const r=v("tensorListId",n,t,e),s=v("tensor",n,t,e),a=e.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=v("tensorListId",n,t,e),s=v("elementShape",n,t,e),a=v("elementDType",n,t,e);return[e.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=v("tensor",n,t,e),s=v("elementShape",n,t,e),a=function(i,o,u){let c=0;const l=o.map(m=>(c+=m,c));if(c!==i.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${c}, and tensor's shape is: ${i.shape}`);const h=Dm(i.shape.slice(1),u),p=0===c?0:i.size/c,d=K(()=>{const m=[];i=P(i,[1,c,p]);for(let g=0;g<o.length;++g)m[g]=P(ne(i,[0,0===g?0:l[g-1],0],[1,o[g],p]),h);return i.dispose(),m}),f=new li([],u,i.dtype,o.length);for(let m=0;m<d.length;m++)f.setItem(m,d[m]);return f}(r,v("lengths",n,t,e),s);return e.addTensorList(a),[a.idTensor]}case"TensorListLength":{const r=v("tensorListId",n,t,e);return[Qt(e.getTensorList(r.id).size(),"int32")]}case"TensorListResize":{const r=v("tensorListId",n,t,e),s=v("size",n,t,e),a=e.getTensorList(r.id).resize(s);return e.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}})(i,o,u);case"convolution":return s(()=>((l,h,p,d=q)=>{switch(l.op){case"Conv1D":{const f=v("stride",l,h,p),m=v("pad",l,h,p),g=v("dataFormat",l,h,p).toUpperCase(),y=v("dilation",l,h,p);return[d.conv1d(v("x",l,h,p),v("filter",l,h,p),f,m,g,y)]}case"Conv2D":{const f=v("strides",l,h,p),m=_h(l,h,p),g=v("dataFormat",l,h,p).toUpperCase(),y=v("dilations",l,h,p);return[d.conv2d(v("x",l,h,p),v("filter",l,h,p),[f[1],f[2]],m,g,[y[1],y[2]])]}case"_FusedConv2D":{const{stride:f,pad:m,dataFormat:g,dilations:y,biasArg:b,preluArg:x,activationFunc:w,leakyreluAlpha:k}=qx(l,h,p);return[d.fused.conv2d({x:v("x",l,h,p),filter:v("filter",l,h,p),strides:[f[1],f[2]],pad:m,dataFormat:g,dilations:[y[1],y[2]],bias:b,activation:w,preluActivationWeights:x,leakyreluAlpha:k})]}case"FusedDepthwiseConv2dNative":{const{stride:f,pad:m,dataFormat:g,dilations:y,biasArg:b,preluArg:x,activationFunc:w,leakyreluAlpha:k}=qx(l,h,p);return[d.fused.depthwiseConv2d({x:v("x",l,h,p),filter:v("filter",l,h,p),strides:[f[1],f[2]],pad:m,dataFormat:g,dilations:[y[1],y[2]],bias:b,activation:w,preluActivationWeights:x,leakyreluAlpha:k})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const f=v("outputShape",l,h,p),m=v("strides",l,h,p),g=_h(l,h,p);return[d.conv2dTranspose(v("x",l,h,p),v("filter",l,h,p),f,[m[1],m[2]],g)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const f=v("strides",l,h,p),m=_h(l,h,p),g=v("dilations",l,h,p),y=v("dataFormat",l,h,p).toUpperCase();return[d.depthwiseConv2d(v("input",l,h,p),v("filter",l,h,p),[f[1],f[2]],m,y,[g[1],g[2]])]}case"Conv3D":{const f=v("strides",l,h,p),m=v("pad",l,h,p),g=v("dataFormat",l,h,p).toUpperCase(),y=v("dilations",l,h,p);return[d.conv3d(v("x",l,h,p),v("filter",l,h,p),[f[1],f[2],f[3]],m,g,[y[1],y[2],y[3]])]}case"AvgPool":{const f=v("strides",l,h,p),m=v("pad",l,h,p),g=v("kernelSize",l,h,p);return[d.avgPool(v("x",l,h,p),[g[1],g[2]],[f[1],f[2]],m)]}case"MaxPool":{const f=v("strides",l,h,p),m=v("pad",l,h,p),g=v("kernelSize",l,h,p);return[d.maxPool(v("x",l,h,p),[g[1],g[2]],[f[1],f[2]],m)]}case"MaxPoolWithArgmax":{const f=v("strides",l,h,p),m=v("pad",l,h,p),g=v("kernelSize",l,h,p),y=v("includeBatchInIndex",l,h,p),{result:b,indexes:x}=d.maxPoolWithArgmax(v("x",l,h,p),[g[1],g[2]],[f[1],f[2]],m,y);return[b,x]}case"AvgPool3D":{const f=v("strides",l,h,p),m=v("pad",l,h,p),g=v("kernelSize",l,h,p);return[d.avgPool3d(v("x",l,h,p),[g[1],g[2],g[3]],[f[1],f[2],f[3]],m)]}case"MaxPool3D":{const f=v("strides",l,h,p),m=v("pad",l,h,p),g=v("kernelSize",l,h,p);return[d.maxPool3d(v("x",l,h,p),[g[1],g[2],g[3]],[f[1],f[2],f[3]],m)]}case"Dilation2D":{const f=v("strides",l,h,p),m=v("pad",l,h,p),g=v("dilations",l,h,p),y=f[1],b=f[2],x=g[1],w=g[2];return[d.dilation2d(v("x",l,h,p),v("filter",l,h,p),[y,b],m,[x,w],"NHWC")]}default:throw TypeError(`Node type ${l.op} is not implemented`)}})(i,o,u));case"creation":return s(()=>((l,h,p,d=q)=>{switch(l.op){case"Fill":{const f=v("shape",l,h,p),m=v("dtype",l,h,p),g=v("value",l,h,p);return[d.fill(f,g,m)]}case"LinSpace":{const f=v("start",l,h,p),m=v("stop",l,h,p),g=v("num",l,h,p);return[d.linspace(f,m,g)]}case"Multinomial":{const f=v("logits",l,h,p),m=v("numSamples",l,h,p),g=v("seed",l,h,p);return[d.multinomial(f,m,g)]}case"OneHot":{const f=v("indices",l,h,p),m=v("depth",l,h,p),g=v("onValue",l,h,p),y=v("offValue",l,h,p),b=v("dtype",l,h,p);return[d.oneHot(f,m,g,y,b)]}case"Ones":return[d.ones(v("shape",l,h,p),v("dtype",l,h,p))];case"OnesLike":return[d.onesLike(v("x",l,h,p))];case"RandomStandardNormal":return[d.randomStandardNormal(v("shape",l,h,p),v("dtype",l,h,p),v("seed",l,h,p))];case"RandomUniform":return[d.randomUniform(v("shape",l,h,p),v("minval",l,h,p),v("maxval",l,h,p),v("dtype",l,h,p))];case"Range":{const f=v("start",l,h,p),m=v("stop",l,h,p),g=v("step",l,h,p);return[d.range(f,m,g,v("dtype",l,h,p))]}case"TruncatedNormal":{const f=v("shape",l,h,p),m=v("mean",l,h,p),g=v("stdDev",l,h,p),y=v("seed",l,h,p);return[d.truncatedNormal(f,m,g,v("dtype",l,h,p),y)]}case"Zeros":return[d.zeros(v("shape",l,h,p),v("dtype",l,h,p))];case"ZerosLike":return[d.zerosLike(v("x",l,h,p))];default:throw TypeError(`Node type ${l.op} is not implemented`)}})(i,o,u));case"dynamic":return(async(l,h,p,d,f=q)=>{switch(l.op){case"NonMaxSuppressionV5":{const{boxes:m,scores:g,maxOutputSize:y,iouThreshold:b,scoreThreshold:x,softNmsSigma:w}=_m(l,h,p),k=await f.image.nonMaxSuppressionWithScoreAsync(m,g,y,b,x,w);return[k.selectedIndices,k.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:m,scores:g,maxOutputSize:y,iouThreshold:b,scoreThreshold:x}=_m(l,h,p),w=v("padToMaxOutputSize",l,h,p),k=await f.image.nonMaxSuppressionPaddedAsync(m,g,y,b,x,w);return[k.selectedIndices,k.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:m,scores:g,maxOutputSize:y,iouThreshold:b,scoreThreshold:x}=_m(l,h,p);return[await f.image.nonMaxSuppressionAsync(m,g,y,b,x)]}case"Where":{const m=f.cast(v("condition",l,h,p),"bool"),g=[await f.whereAsync(m)];return m.dispose(),g}case"ListDiff":return f.setdiff1dAsync(v("x",l,h,p),v("y",l,h,p));default:throw TypeError(`Node type ${l.op} is not implemented`)}})(i,o,u);case"evaluation":return s(()=>((l,h,p,d=q)=>{switch(l.op){case"LowerBound":{const f=v("sortedSequence",l,h,p),m=v("values",l,h,p);return[d.lowerBound(f,m)]}case"TopKV2":{const f=v("x",l,h,p),m=v("k",l,h,p),g=v("sorted",l,h,p),y=d.topk(f,m,g);return[y.values,y.indices]}case"UpperBound":{const f=v("sortedSequence",l,h,p),m=v("values",l,h,p);return[d.upperBound(f,m)]}case"Unique":{const f=v("x",l,h,p),m=d.unique(f);return[m.values,m.indices]}case"UniqueV2":{const f=v("x",l,h,p),m=v("axis",l,h,p),g=d.unique(f,m);return[g.values,g.indices]}default:throw TypeError(`Node type ${l.op} is not implemented`)}})(i,o,u));case"image":return s(()=>((l,h,p,d=q)=>{switch(l.op){case"ResizeBilinear":{const f=v("images",l,h,p),m=v("size",l,h,p),g=v("alignCorners",l,h,p),y=v("halfPixelCenters",l,h,p);return[d.image.resizeBilinear(f,[m[0],m[1]],g,y)]}case"ResizeNearestNeighbor":{const f=v("images",l,h,p),m=v("size",l,h,p),g=v("alignCorners",l,h,p),y=v("halfPixelCenters",l,h,p);return[d.image.resizeNearestNeighbor(f,[m[0],m[1]],g,y)]}case"CropAndResize":{const f=v("image",l,h,p),m=v("boxes",l,h,p),g=v("boxInd",l,h,p),y=v("cropSize",l,h,p),b=v("method",l,h,p),x=v("extrapolationValue",l,h,p);return[d.image.cropAndResize(f,m,g,y,b,x)]}case"ImageProjectiveTransformV3":{const f=v("images",l,h,p),m=v("transforms",l,h,p),g=v("outputShape",l,h,p),y=v("fillValue",l,h,p),b=v("interpolation",l,h,p),x=v("fillMode",l,h,p);return[d.image.transform(f,m,b.toLowerCase(),x.toLowerCase(),y,g)]}default:throw TypeError(`Node type ${l.op} is not implemented`)}})(i,o,u));case"graph":return s(()=>((l,h,p,d=q)=>{switch(l.op){case"Const":return h[l.name];case"PlaceholderWithDefault":const f=v("default",l,h,p);return[Hn(l.name,h,p)||f];case"Placeholder":return[Hn(l.name,h,p)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[ka(v("x",l,h,p))];case"IdentityN":return v("x",l,h,p).map(x=>ka(x));case"Shape":return[d.tensor1d(v("x",l,h,p).shape,"int32")];case"ShapeN":return v("x",l,h,p).map(x=>d.tensor1d(x.shape));case"Size":return[d.scalar(v("x",l,h,p).size,"int32")];case"Rank":return[d.scalar(v("x",l,h,p).rank,"int32")];case"NoOp":return[d.scalar(1)];case"Print":const m=v("x",l,h,p),g=v("data",l,h,p),y=v("message",l,h,p),b=v("summarize",l,h,p);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(y);for(let x=0;x<g.length;x++)console.log(Array.prototype.slice.call(g[x].dataSync()).slice(0,b));return[m];default:throw TypeError(`Node type ${l.op} is not implemented`)}})(i,o,u));case"logical":return s(()=>((l,h,p,d=q)=>{switch(l.op){case"Equal":return[d.equal(v("a",l,h,p),v("b",l,h,p))];case"NotEqual":return[d.notEqual(v("a",l,h,p),v("b",l,h,p))];case"Greater":return[d.greater(v("a",l,h,p),v("b",l,h,p))];case"GreaterEqual":return[d.greaterEqual(v("a",l,h,p),v("b",l,h,p))];case"Less":return[d.less(v("a",l,h,p),v("b",l,h,p))];case"LessEqual":return[d.lessEqual(v("a",l,h,p),v("b",l,h,p))];case"LogicalAnd":return[d.logicalAnd(v("a",l,h,p),v("b",l,h,p))];case"LogicalNot":return[d.logicalNot(v("a",l,h,p))];case"LogicalOr":return[d.logicalOr(v("a",l,h,p),v("b",l,h,p))];case"Select":case"SelectV2":return[d.where(v("condition",l,h,p),v("a",l,h,p),v("b",l,h,p))];default:throw TypeError(`Node type ${l.op} is not implemented`)}})(i,o,u));case"matrices":return s(()=>((l,h,p,d=q)=>{switch(l.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[d.matMul(v("a",l,h,p),v("b",l,h,p),v("transposeA",l,h,p),v("transposeB",l,h,p))];case"Einsum":return[d.einsum(v("equation",l,h,p),...v("tensors",l,h,p))];case"Transpose":return[d.transpose(v("x",l,h,p),v("perm",l,h,p))];case"_FusedMatMul":const[f,m]=v("fusedOps",l,h,p),g="biasadd"===f,y="prelu"===m,b=v("numArgs",l,h,p),x=v("leakyreluAlpha",l,h,p);if(g){if(y&&2!==b)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!y&&1!==b)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[w,k]=v("args",l,h,p);return[d.fused.matMul({a:v("a",l,h,p),b:v("b",l,h,p),transposeA:v("transposeA",l,h,p),transposeB:v("transposeB",l,h,p),bias:w,activation:m,preluActivationWeights:k,leakyreluAlpha:x})];default:throw TypeError(`Node type ${l.op} is not implemented`)}})(i,o,u));case"normalization":return s(()=>((l,h,p,d=q)=>{switch(l.op){case"EuclideanNorm":return[d.euclideanNorm(v("x",l,h,p),v("axis",l,h,p),v("keepDims",l,h,p))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[d.batchNorm(v("x",l,h,p),v("mean",l,h,p),v("variance",l,h,p),v("offset",l,h,p),v("scale",l,h,p),v("epsilon",l,h,p))];case"LRN":return[d.localResponseNormalization(v("x",l,h,p),v("radius",l,h,p),v("bias",l,h,p),v("alpha",l,h,p),v("beta",l,h,p))];case"Softmax":return[d.softmax(v("x",l,h,p))];case"LogSoftmax":return[d.logSoftmax(v("x",l,h,p))];case"SparseToDense":return[d.sparseToDense(v("sparseIndices",l,h,p),v("outputShape",l,h,p),v("sparseValues",l,h,p),v("defaultValue",l,h,p))];default:throw TypeError(`Node type ${l.op} is not implemented`)}})(i,o,u));case"reduction":return s(()=>((l,h,p,d=q)=>{switch(l.op){case"Max":{const y=v("axis",l,h,p),b=v("keepDims",l,h,p);return[d.max(v("x",l,h,p),y,b)]}case"Mean":{const y=v("axis",l,h,p),b=v("keepDims",l,h,p);return[d.mean(v("x",l,h,p),y,b)]}case"Min":{const y=v("axis",l,h,p),b=v("keepDims",l,h,p);return[d.min(v("x",l,h,p),y,b)]}case"Sum":{const y=v("axis",l,h,p),b=v("keepDims",l,h,p);return[d.sum(v("x",l,h,p),y,b)]}case"All":{const y=v("axis",l,h,p),b=v("keepDims",l,h,p);return[d.all(v("x",l,h,p),y,b)]}case"Any":{const y=v("axis",l,h,p),b=v("keepDims",l,h,p);return[d.any(v("x",l,h,p),y,b)]}case"ArgMax":{const y=v("axis",l,h,p);return[d.argMax(v("x",l,h,p),y)]}case"ArgMin":{const y=v("axis",l,h,p);return[d.argMin(v("x",l,h,p),y)]}case"Prod":{const y=v("axis",l,h,p),b=v("keepDims",l,h,p);return[d.prod(v("x",l,h,p),y,b)]}case"Cumprod":{const y=v("axis",l,h,p),b=v("exclusive",l,h,p),x=v("reverse",l,h,p);return[d.cumprod(v("x",l,h,p),y,b,x)]}case"Cumsum":{const y=v("axis",l,h,p),b=v("exclusive",l,h,p),x=v("reverse",l,h,p);return[d.cumsum(v("x",l,h,p),y,b,x)]}case"Bincount":const f=v("x",l,h,p),m=v("weights",l,h,p),g=v("size",l,h,p);return[d.bincount(f,m,g)];case"DenseBincount":{const y=v("x",l,h,p),b=v("weights",l,h,p),x=v("size",l,h,p),w=v("binaryOutput",l,h,p);return[d.denseBincount(y,b,x,w)]}default:throw TypeError(`Node type ${l.op} is not implemented`)}})(i,o,u));case"slice_join":return s(()=>((l,h,p,d=q)=>{switch(l.op){case"ConcatV2":case"Concat":{const f=v("n",l,h,p),m=v("axis",l,h,p);let g=v("tensors",l,h,p);return g=g.slice(0,f),[d.concat(g,m)]}case"Gather":{const f=v("x",l,h,p),m=v("indices",l,h,p);return[d.gather(f,d.cast(m,"int32"),0)]}case"GatherV2":{const f=v("axis",l,h,p),m=v("batchDims",l,h,p),g=v("x",l,h,p),y=v("indices",l,h,p);return[d.gather(g,d.cast(y,"int32"),f,m)]}case"Reverse":{const f=v("dims",l,h,p),m=[];for(let y=0;y<f.length;y++)f[y]&&m.push(y);const g=v("x",l,h,p);return[d.reverse(g,m)]}case"ReverseV2":{const f=v("axis",l,h,p),m=v("x",l,h,p);return[d.reverse(m,f)]}case"Slice":{const f=v("begin",l,h,p),m=v("size",l,h,p);return[d.slice(v("x",l,h,p),f,m)]}case"StridedSlice":{const f=v("begin",l,h,p),m=v("end",l,h,p),g=v("strides",l,h,p),y=v("beginMask",l,h,p),b=v("endMask",l,h,p),x=v("ellipsisMask",l,h,p),w=v("newAxisMask",l,h,p),k=v("shrinkAxisMask",l,h,p),N=v("x",l,h,p);return[d.stridedSlice(N,f,m,g,y,b,x,w,k)]}case"Pack":return K(()=>{const f=v("axis",l,h,p),m=v("tensors",l,h,p),g=m[0].shape,y=d.squeeze(m[0]).shape,b=m.map(x=>{const w=he(x.shape,g);if(!w&&!he(d.squeeze(x).shape,y))throw new Error("the input tensors shape does not match");return w?x:d.reshape(x,g)});return[d.stack(b,f)]});case"Unpack":{const f=v("axis",l,h,p),m=v("tensor",l,h,p);return d.unstack(m,f)}case"Tile":{const f=v("reps",l,h,p);return[d.tile(v("x",l,h,p),f)]}case"Split":case"SplitV":{const f=v("axis",l,h,p),m=v("numOrSizeSplits",l,h,p),g=v("x",l,h,p);return d.split(g,m,f)}case"ScatterNd":{const f=v("indices",l,h,p),m=v("values",l,h,p),g=v("shape",l,h,p);return[d.scatterND(f,m,g)]}case"GatherNd":{const f=v("x",l,h,p),m=v("indices",l,h,p);return[d.gatherND(f,m)]}case"SparseToDense":{const f=v("sparseIndices",l,h,p),m=v("outputShape",l,h,p),g=v("sparseValues",l,h,p),y=v("defaultValue",l,h,p);return[d.sparseToDense(f,g,m,g.dtype===y.dtype?y:d.cast(y,g.dtype))]}default:throw TypeError(`Node type ${l.op} is not implemented`)}})(i,o,u));case"sparse":return s(()=>((l,h,p,d=q)=>{switch(l.op){case"SparseFillEmptyRows":{const{outputIndices:f,outputValues:m,emptyRowIndicator:g,reverseIndexMap:y}=d.sparse.sparseFillEmptyRows(v("indices",l,h,p),v("values",l,h,p),v("denseShape",l,h,p),v("defaultValue",l,h,p));return[f,m,g,y]}case"SparseReshape":{const{outputIndices:f,outputShape:m}=d.sparse.sparseReshape(v("inputIndices",l,h,p),v("inputShape",l,h,p),v("newShape",l,h,p));return[f,m]}case"SparseSegmentMean":return[d.sparse.sparseSegmentMean(v("data",l,h,p),v("indices",l,h,p),v("segmentIds",l,h,p))];case"SparseSegmentSum":return[d.sparse.sparseSegmentSum(v("data",l,h,p),v("indices",l,h,p),v("segmentIds",l,h,p))];default:throw TypeError(`Node type ${l.op} is not implemented`)}})(i,o,u));case"spectral":return s(()=>((l,h,p,d=q)=>{switch(l.op){case"FFT":return[d.fft(v("x",l,h,p))];case"IFFT":return[d.ifft(v("x",l,h,p))];case"RFFT":return[d.rfft(v("x",l,h,p))];case"IRFFT":return[d.irfft(v("x",l,h,p))];default:throw TypeError(`Node type ${l.op} is not implemented`)}})(i,o,u));case"string":return s(()=>((l,h,p,d=q)=>{switch(l.op){case"StringNGrams":{const{nGrams:f,nGramsSplits:m}=d.string.stringNGrams(v("data",l,h,p),v("dataSplits",l,h,p),v("separator",l,h,p),v("nGramWidths",l,h,p),v("leftPad",l,h,p),v("rightPad",l,h,p),v("padWidth",l,h,p),v("preserveShortSequences",l,h,p));return[f,m]}case"StringSplit":{const{indices:f,values:m,shape:g}=d.string.stringSplit(v("input",l,h,p),v("delimiter",l,h,p),v("skipEmpty",l,h,p));return[f,m,g]}case"StringToHashBucketFast":return[d.string.stringToHashBucketFast(v("input",l,h,p),v("numBuckets",l,h,p))];default:throw TypeError(`Node type ${l.op} is not implemented`)}})(i,o,u));case"transformation":return s(()=>((l,h,p,d=q)=>{switch(l.op){case"Cast":return[d.cast(v("x",l,h,p),v("dtype",l,h,p))];case"ExpandDims":{const f=v("axis",l,h,p);return[d.expandDims(v("x",l,h,p),f)]}case"Squeeze":{const f=v("axis",l,h,p);return[d.squeeze(v("x",l,h,p),f)]}case"Reshape":return[d.reshape(v("x",l,h,p),v("shape",l,h,p))];case"MirrorPad":return[d.mirrorPad(v("x",l,h,p),v("padding",l,h,p),v("mode",l,h,p))];case"PadV2":case"Pad":return[d.pad(v("x",l,h,p),v("padding",l,h,p),v("constantValue",l,h,p))];case"SpaceToBatchND":{const f=v("blockShape",l,h,p),m=v("paddings",l,h,p);return[d.spaceToBatchND(v("x",l,h,p),f,m)]}case"BatchToSpaceND":{const f=v("blockShape",l,h,p),m=v("crops",l,h,p);return[d.batchToSpaceND(v("x",l,h,p),f,m)]}case"DepthToSpace":{const f=v("blockSize",l,h,p),m=v("dataFormat",l,h,p).toUpperCase();return[d.depthToSpace(v("x",l,h,p),f,m)]}case"BroadcastTo":return[d.broadcastTo(v("x",l,h,p),v("shape",l,h,p))];case"BroadcastArgs":return[d.broadcastArgs(v("s0",l,h,p),v("s1",l,h,p))];default:throw TypeError(`Node type ${l.op} is not implemented`)}})(i,o,u));case"hash_table":return(async(l,h,p,d)=>{switch(l.op){case"HashTable":case"HashTableV2":{const f=v("keyDType",l,h,p),m=v("valueDType",l,h,p),g=new uC(f,m);return d.addHashTable(l.name,g),[g.handle]}case"LookupTableImport":case"LookupTableImportV2":{const f=v("tableHandle",l,h,p,d),m=v("keys",l,h,p),g=v("values",l,h,p);return[await d.getHashTableById(f.id).import(m,g)]}case"LookupTableFind":case"LookupTableFindV2":{const f=v("tableHandle",l,h,p,d),m=v("keys",l,h,p),g=v("defaultValue",l,h,p);return[await d.getHashTableById(f.id).find(m,g)]}case"LookupTableSize":case"LookupTableSizeV2":{const f=v("tableHandle",l,h,p,d);return[d.getHashTableById(f.id).tensorSize()]}default:throw TypeError(`Node type ${l.op} is not implemented`)}})(i,o,u,r);case"custom":const c=Wx(i.op);if(c&&c.customExecutor)return c.customExecutor(new iC(i,o,u));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,t,e);return Is(a)?a.then(i=>[].concat(i)):[].concat(a)}class Xx{constructor(t={},e={},r={},s={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=r,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const r=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(r))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function Yx(n,t,e,r){const s=new Set,a=[];let i=null,o=null;const u=new Set,c=Object.keys(n).map(p=>mr(p)[0]);let l=[];null!=r&&(l=r.map(p=>mr(p.name)[0]));const h=[...t];for(;h.length>0;){const p=h.pop();(Zx(p)||dC(p)||fC(p))&&null==i&&(i=p,o=i.children.map(d=>d.name).filter(d=>s.has(d))),s.add(p.name),null==e[p.name]&&-1===c.indexOf(p.name)&&-1===l.indexOf(p.name)&&(0!==p.inputs.length?p.inputs.forEach(d=>{u.has(d.name)||(u.add(d.name),h.push(d))}):a.push(p.name))}return{inputs:n,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:i,syncInputs:o}}const cC=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],hC=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],pC=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function Zx(n){return cC.indexOf(n.op)>=0}function dC(n){return hC.indexOf(n.op)>=0}function fC(n){return pC.indexOf(n.op)>=0}class Oh{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach(r=>{this._functionExecutorMap[r]=new Oh(t.functions[r],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map(r=>t[r].map(s=>s.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}getCompilationKey(t,e){const r=t.map(a=>a.name).sort(),s=e.map(a=>a.name).sort();return r.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(t,e){const r=Yx(t,e,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:a,syncInputs:i}=r;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(s.length>0){const o=e.map(c=>c.name),u=Object.keys(t);throw new Error(`Cannot compute the outputs [${o}] from the provided inputs [${u}]. Missing the following inputs: [${s}]`)}return function(o,u,c){const{usedNodes:l,inputs:h}=c,p=[],d=Object.keys(h).map(y=>mr(y)[0]).map(y=>o.nodes[y]),f=o.initNodes;d.forEach(y=>{l.has(y.name)&&p.push(y)}),o.weights.forEach(y=>{l.has(y.name)&&p.push(y)}),f?.forEach(y=>{l.has(y.name)&&p.push(y)});const m=new Set,g=[];for(;p.length>0;){const y=p.pop();m.add(y.name),u[y.name]||g.push(y),y.children.forEach(b=>{!m.has(b.name)&&l.has(b.name)&&b.inputs.every(x=>m.has(x.name))&&p.push(b)})}return g}(this.graph,this.weightMap,r)}execute(t,e){t=this.mapInputs(t);const r=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const s=r.map(h=>this.graph.nodes[mr(h)[0]]),a=e.map(h=>mr(h)[0]);let i=a.map(h=>this.graph.nodes[h]);this.resetIntermediateTensors(),0===i.length&&(i=this._outputs);const o=this.getCompilationKey(s,i);let u=this.compiledMap.get(o);null==u&&(u=this.compile(t,i),this.compiledMap.set(o,u));const c={},l={};return K(()=>{const h=new Xx(this.weightMap,c,l,this.functionExecutorMap),p=Object.assign({},this.weightMap);Object.keys(t).forEach(m=>{const[g,y]=mr(m),b=[];b[y]=t[m],p[g]=b});const d=this.getFrozenTensorIds(p),f={};for(let m=0;m<u.length;m++){const g=u[m];if(!p[g.name]){const y=Kx(g,p,h,this._resourceManager);if(Is(y))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);p[g.name]=y,this.checkTensorForDisposal(g.name,g,p,h,d,a,f)}}return null==this.parent&&h.dispose(d),e.map(m=>Hn(m,p,h))})}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map(r=>t[r]).map(r=>r.map(s=>s.id)));return new Set(e)}checkTensorForDisposal(t,e,r,s,a,i,o){"control"!==e.category&&-1===i.indexOf(t)&&(r[t].forEach(u=>{null!=u&&(o[u.id]=(o[u.id]||0)+e.children.length)}),e.inputs.forEach(u=>{"control"!==u.category&&r[Dh(u.name,s.currentContextId)]?.forEach(l=>{if(l&&!l.kept&&!a.has(l.id)){const h=o[l.id];if(1===h){if(this.keepTensorForDebug){const[p,d]=bs(e.name,s);this.intermediateTensors[p]||(this.intermediateTensors[p]=[]),this.intermediateTensors[p][d]=l}else l.dispose();delete o[l.id]}else null!=h&&o[l.id]--}})}))}async executeAsync(t,e){return this._executeAsync(t,e)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach(t=>this.intermediateTensors[t].forEach(e=>e.dispose())),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach(t=>{this.tensorsMap[t].forEach(e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()})})}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const t in this.intermediateTensors)this.intermediateTensors[t].forEach(e=>e.dispose()),delete this.intermediateTensors[t]}async _executeAsync(t,e,r=!1,s={},a={}){r||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepTensorForDebug=Q().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(l){console.warn(l.message)}this.resetIntermediateTensors();const i=new Xx(this.weightMap,s,a,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(t,i,e,r);const o=e.map(l=>Hn(l,this.tensorsMap,i)),u=o.map(l=>l.id),c=Object.keys(t).map(l=>t[l].id);return this.keepIds=new Set([...u,...c,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&i.dispose(this.keepIds),o}async executeFunctionAsync(t,e,r){const s=t.reduce((a,i,o)=>(a[this.inputs[o].name]=i,a),{});return this._executeAsync(s,this.outputNodes,!0,e,r)}async executeWithControlFlow(t,e,r,s){const a=Object.keys(t),i=a.map(x=>this.graph.nodes[mr(x)[0]]),o=r.map(x=>mr(x)[0]);let u=o.map(x=>this.graph.nodes[x]);0===u.length&&(u=this._outputs);const{usedNodes:c,missingInputs:l,dynamicNode:h,syncInputs:p}=Yx(t,u,this.weightMap,this._initNodes),d=[...i,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:e.currentContext})),f=Object.assign({},this.weightMap);Object.keys(t).forEach(x=>{const[w,k]=mr(x),N=[];N[k]=t[x],f[w]=N});const m={},g=this.getFrozenTensorIds(f),y={};for(;d.length>0;){const x=this.processStack(i,d,e,f,y,g,o,m,c);await Promise.all(x)}null!=h||s||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const b=u.filter(x=>!Zx(x)&&!Hn(x.name,f,e)).map(x=>x.name);if(b.length>0){let x="";throw null!=h&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${x}`)}return f}processStack(t,e,r,s,a,i,o,u,c){const l=[];for(;e.length>0;){const h=e.pop();r.currentContext=h.contexts;let p="";if("Enter"===h.node.op&&v("isConstant",h.node,s,r)&&([p]=bs(h.node.name,r)),null==s[h.node.name]){const d=Kx(h.node,s,r,this._resourceManager);p||([p]=bs(h.node.name,r));const f=r.currentContext;Is(d)?l.push(d.then(m=>(s[p]=m,r.currentContext=f,this.checkTensorForDisposal(p,h.node,s,r,i,o,u),this.processChildNodes(h.node,e,r,s,a,c),m))):(s[p]=d,this.checkTensorForDisposal(p,h.node,s,r,i,o,u),this.processChildNodes(h.node,e,r,s,a,c))}else this.processChildNodes(h.node,e,r,s,a,c)}return l}processChildNodes(t,e,r,s,a,i){t.children.forEach(o=>{const[u]=bs(o.name,r);!a[u]&&i.has(o.name)&&("Merge"===o.op?o.inputNames.some(c=>!!Hn(c,s,r))&&(a[u]=!0,e.push({contexts:r.currentContext,node:o})):o.inputNames.every(c=>!!Hn(c,s,r))&&(a[u]=!0,e.push({contexts:r.currentContext,node:o})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(e=>e.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{const r=t[e],[s]=mr(e),a=this.graph.nodes[s];if(a.attrParams.shape&&a.attrParams.shape.value){const i=a.attrParams.shape.value;I(i.length===r.shape.length&&r.shape.every((o,u)=>-1===i[u]||i[u]===o),()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${i}], but was [${r.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&I(r.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${r.dtype}`)})}mapInputs(t){const e={};for(const r in t)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[r]?e[this._signature.inputs[r].name]=t[r]:e[r]=t[r];return e}checkInputs(t){const e=Object.keys(t).filter(r=>{const[s]=mr(r);return null==this.graph.nodes[s]});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e,{})}checkOutputs(t){t.forEach(e=>{const[r]=mr(e);if(!this.graph.nodes[r])throw new Error(`The output '${e}' is not found in the graph`)})}}class mC{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class bC{constructor(t,e={},r=Ht){this.modelUrl=t,this.loadOptions=e,this.version="n/a",this.io=r,null==e&&(this.loadOptions={}),this.resourceManager=new mC}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{const e=this.io.getLoadHandlers(t,this.loadOptions);if(0===e.length)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=this.handler.load();return Is(t)?t.then(e=>this.loadSync(e)):this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let r=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){const a=this.artifacts.userDefinedMetadata;null!=a.signature&&(r=a.signature),null!=a.structuredOutputKeys&&(this.structuredOutputKeys=a.structuredOutputKeys)}this.signature=r,this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const s=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Oh(Vx.Instance.transformGraph(e,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer&&null!=t.modelInitializer.node){const a=Vx.Instance.transformGraph(t.modelInitializer);this.initializer=new Oh(a),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"==typeof t){const r=this.io.getSaveHandlers(t);if(0===r.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(r.length>1)throw new Error(`Found more than one (${r.length}) save handlers for URL '${t}'`);t=r[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){const r=this.execute(t,this.outputNodes);if(this.structuredOutputKeys){const s={};return(r instanceof Se?[r]:r).forEach((a,i)=>s[this.structuredOutputKeys[i]]=a),s}return r}normalizeInputs(t){if(!(t instanceof Se||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce((e,r,s)=>(e[r]=t[s],e),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const r=this.executor.execute(t,e);return r.length>1?r:r[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const r=await this.executor.executeAsync(t,e);return r.length>1?r:r[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,r)=>(e[r]=[t[r]],e),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function go(n,t={},e=Ht){if(null==n)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");var s;null==t&&(t={}),t.fromTFHub&&"string"==typeof n&&((s=n).endsWith("/")||(s+="/"),n=`${s}model.json?tfjs-format=file`);const r=new bC(n,t,e);return await r.load(),r}function Jx(n,t,e=new Map,r=new Set){if(null==n)return null;if("function"==typeof Blob&&n instanceof Blob)return n.slice();if(r.has(n))throw new Error("Circular references are not supported.");if(e.has(n))return e.get(n);const s=t(n);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(Mh(n)){const a=Array.isArray(n)?[]:{};r.add(n);for(const i in n){const o=Jx(n[i],t,e,r);a[i]=o}return r.delete(n),n.__proto__&&(a.__proto__=n.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${n}`)}return e.set(n,s.value),s.value}function xC(n,t=tw){return Qx(n,t)}function Qx(n,t,e=new Set){const r=n[0];if(e.has(r))throw new Error("Circular references are not supported.");const s=t(n);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(Mh(r)){const a=Array.isArray(r)?[]:{};e.add(r);for(const i in r){const u=Qx(n.map(c=>c[i]),t,e);a[i]=u}return e.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function tw(n){return null===n?null:Mh(n[0])?{value:null,recurse:!0}:{value:n,recurse:!1}}function Mh(n){let t=!1;if(Q().get("IS_BROWSER"))t=n instanceof TextDecoder;else{const{StringDecoder:e}=_t(977);t=n instanceof e}return null!=n&&!ArrayBuffer.isView(n)&&(Array.isArray(n)||"object"==typeof n&&!(n instanceof Se)&&!(n instanceof Promise)&&!t)}function wC(n){return Jx(n,vC)}function vC(n){return n instanceof Se?{value:n.clone(),recurse:!1}:Mh(n)?{value:null,recurse:!0}:{value:n,recurse:!1}}class ew{constructor(t){if(this.capacity=t,this.begin=0,this.end=0,null==t)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(t<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(t),this.doubledCapacity=2*t}wrap(t){for(;t<0;)t+=this.doubledCapacity;return t%this.doubledCapacity}get(t){if(t<0)throw new RangeError("Can't get item at a negative index.");return this.data[t%this.capacity]}set(t,e){if(t<0)throw new RangeError("Can't set item at a negative index.");this.data[t%this.capacity]=e}length(){let t=this.end-this.begin;return t<0&&(t=this.doubledCapacity+t),t}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,t),this.end=this.wrap(this.end+1)}pushAll(t){for(const e of t)this.push(e)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const t=this.get(this.end);return this.set(this.end,void 0),t}unshift(t){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,t)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),t}shuffleExcise(t){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.wrap(this.begin+t),r=this.get(e);return this.set(e,this.pop()),r}}class Lh extends ew{constructor(){super(Lh.INITIAL_CAPACITY)}isFull(){return!1}push(t){super.isFull()&&this.expand(),super.push(t)}unshift(t){super.isFull()&&this.expand(),super.unshift(t)}expand(){const t=2*this.capacity,e=new Array(t),r=this.length();for(let s=0;s<r;s++)e[s]=this.get(this.wrap(this.begin+s));this.data=e,this.capacity=t,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=r}}Lh.INITIAL_CAPACITY=32;class Er{async toArray(){const t=[];let e=await this.next();for(;!e.done;)t.push(e.value),e=await this.next();return t}async toArrayForTest(){const t=this.prefetch(100),e=[];let r=await t.next();for(;!r.done;)e.push(r.value),r=await t.next();return e}async resolveFully(){let t=await this.next();for(;!t.done;)t=await this.next()}async resolveWhile(t){let e=await this.next(),r=t(e.value);for(;!e.done&&r;)e=await this.next(),r=t(e.value)}handleErrors(t){return new FC(this,t)}filter(t){return new RC(this,t)}map(t){return new AC(this,t)}mapAsync(t){return new nw(this,t)}serialMapAsync(t){return new nw(this,t).serial()}flatmap(t){return new _C(this,t)}async forEachAsync(t){return this.map(t).resolveFully()}async serialForEach(t){return this.serialMapAsync(t).resolveWhile(e=>!0===e)}rowMajorBatch(t,e=!0){return new EC(this,t,e)}columnMajorBatch(t,e=!0,r=tw){return this.rowMajorBatch(t,e).map(s=>xC(s,r))}concatenate(t,e){return new rw(new NC([this,t]),e)}take(t){return t<0||null==t?this:new $C(this,t)}skip(t){return t<0||null==t?this:new CC(this,t)}prefetch(t){return new aw(this,t)}shuffle(t,e){return new OC(this,t,e)}serial(){return new TC(this)}}class NC extends Er{constructor(t){super(),this.items=t,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const t=this.items[this.trav];return this.trav++,{value:wC(t),done:!1}}}class SC extends Er{constructor(t){super(),this.nextFn=t}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(t){throw t.message=`Error thrown while iterating through a dataset: ${t.message}`,t}}}class TC extends Er{constructor(t){super(),this.upstream=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class CC extends Er{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const t=await this.upstream.next();if(t.done)return t;ve(t.value)}return this.upstream.next()}}class $C extends Er{constructor(t,e){super(),this.upstream=t,this.maxCount=e,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class EC extends Er{constructor(t,e,r=!0){super(),this.upstream=t,this.batchSize=e,this.enableSmallLastBatch=r,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const t=[];for(;t.length<this.batchSize;){const e=await this.upstream.next();if(e.done)return this.enableSmallLastBatch&&t.length>0?{value:t,done:!1}:{value:null,done:!0};t.push(e.value)}return{value:t,done:!1}}}class RC extends Er{constructor(t,e){super(),this.upstream=t,this.predicate=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const t=await this.upstream.next();if(t.done||this.predicate(t.value))return t;ve(t.value)}}}class AC extends Er{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Map`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=ea(t.value),r=this.transform(t.value),s=ea(r);for(const a of e)ad(a,s)||a.dispose();return{value:r,done:!1}}}class FC extends Er{constructor(t,e){super(),this.upstream=t,this.handler=e,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(t){if(!this.handler(t))return{value:null,done:!0}}}}class nw extends Er{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const t=await this.upstream.next();if(t.done)return{value:null,done:!0};const e=ea(t.value),r=await this.transform(t.value),s=ea(r);for(const a of e)ad(a,s)||a.dispose();return{value:r,done:!1}}}class DC extends Er{constructor(){super(),this.outputQueue=new Lh,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class _C extends DC{constructor(t,e){super(),this.upstream=t,this.transform=e}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const t=await this.upstream.next();if(t.done)return!1;const e=ea(t.value),r=this.transform(t.value),s=ea(r);this.outputQueue.pushAll(r);for(const a of e)ad(a,s)||a.dispose();return!0}}class rw extends Er{constructor(t,e){super(),this.baseErrorHandler=e,this.lastRead=null,this.iterator=null,this.moreIterators=t}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(t){if(await t,null==this.iterator){const r=await this.moreIterators.next();if(r.done)return{value:null,done:!0};this.iterator=r.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const e=await this.iterator.next();return e.done?(this.iterator=null,this.readFromChain(t)):e}}var sw;!function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"}(sw||(sw={}));class aw extends Er{constructor(t,e){super(),this.upstream=t,this.bufferSize=e,this.buffer=new ew(e)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const t=this.upstream.next();this.buffer.push(t)}}next(){return this.refill(),this.buffer.shift()}}class OC extends aw{constructor(t,e,r){super(t,e),this.upstream=t,this.windowSize=e,this.upstreamExhausted=!1,this.random=io.alea(r||zn().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(t){return Math.floor(this.random()*t)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const t=this.chooseIndex(),e=await this.buffer.shuffleExcise(t);if(!e.done)return this.refill(),e;this.upstreamExhausted=!0}return{value:null,done:!0}}}class iw{constructor(){this.size=null}batch(t,e=!0){const r=this;let s;return I(t>0,()=>`batchSize needs to be positive, but it is\n      ${t}`),s=this.size===1/0||null==this.size?this.size:e?Math.ceil(this.size/t):Math.floor(this.size/t),xs(async()=>(await r.iterator()).columnMajorBatch(t,e,MC),s)}concatenate(t){const e=this;let r;return r=this.size===1/0||t.size===1/0?1/0:null!=this.size&&null!=t.size?this.size+t.size:null,xs(async()=>(await e.iterator()).concatenate(await t.iterator()),r)}filter(t){const e=this;let r;return r=this.size===1/0?1/0:null,xs(async()=>(await e.iterator()).filter(s=>K(()=>t(s))),r)}async forEachAsync(t){return(await this.iterator()).forEachAsync(t)}map(t){const e=this;return xs(async()=>(await e.iterator()).map(r=>K(()=>t(r))),this.size)}mapAsync(t){const e=this;return xs(async()=>(await e.iterator()).mapAsync(t),this.size)}prefetch(t){if(null==t)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const e=this;return xs(async()=>(await e.iterator()).prefetch(t),this.size)}repeat(t){const e=this;let r;return r=null!=this.size&&t>0?this.size*t:0===t?0:null!=this.size&&(void 0===t||t<0)?1/0:null,xs(async()=>function IC(n,t){return new rw(n,t)}(function kC(n){return new SC(n)}(async()=>({value:await e.iterator(),done:!1})).take(t)),r)}skip(t){const e=this;let r;return r=null!=this.size&&t>=0&&this.size>=t?this.size-t:null!=this.size&&(this.size<t||void 0===t||t<0)?0:null,xs(async()=>(await e.iterator()).skip(t),r)}shuffle(t,e,r=!0){if(null==t||t<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,a=io.alea(e||zn().toString());return xs(async()=>{let i=a.int32();return r&&(i+=a.int32()),(await s.iterator()).shuffle(t,i.toString())},this.size)}take(t){const e=this;let r;return r=null!=this.size&&this.size>t?t:null!=this.size&&this.size<=t?this.size:null,xs(async()=>(await e.iterator()).take(t),r)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function xs(n,t=null){return new class extends iw{constructor(){super(...arguments),this.size=t}async iterator(){return n()}}}function MC(n){return null===n?null:null==(e=n[0])||null===(r=e)||"object"!=typeof r&&"function"!=typeof r||Array.isArray(e)||"object"==typeof e&&e instanceof Se||xr(e)?{value:function(s){if(0===s.length)throw new Error("Can't make a batch of zero elements.");return s[0]instanceof Se?Cr(s):Kr(s)}(n),recurse:!1}:{value:null,recurse:!0};var e,r}function Wt(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{null!=e&&I("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}iw.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const LC=nf;class zh extends Rt{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new ot(this,ia())}nextDataId(){return zh.nextDataId++}write(t,e,r){this.firstUse&&(this.firstUse=!1,Q().get("IS_NODE")&&vr("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:t,dtype:r,refCount:1}),s}makeTensorInfo(t,e,r){let s;if("string"===e&&null!=r&&r.length>0&&Ea(r[0])){const a=r.map(i=>Qs(i));s=this.write(a,t,e)}else s=this.write(r,t,e);return{dataId:s,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){this.data.get(t).refCount++}decRef(t){this.data.has(t)&&this.data.get(t).refCount--}move(t,e,r,s,a){this.data.set(t,{values:e,dtype:s,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:r}=this.data.get(t);return"complex64"===e?Fs(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):this.data.get(t).values}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const r=e.map(s=>ta(s));return we(t.shape,t.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return we(t.shape,t.dtype,e)}makeOutput(t,e,r){return ia().makeTensorFromTensorInfo(this.makeTensorInfo(e,r,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:r}=this.data.get(t);null!=r&&(this.disposeData(r.real.dataId,!0),this.disposeData(r.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=zn();return t(),{kernelMs:zn()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){Wt([t],"where");const e=this.readSync(t.dataId);return LC(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function Le(n,t,e){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(Wt(i,n),"string"===i.dtype||"string"===e)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,c=nt(i.shape),l=e||i.dtype,h=hn(l,c);for(let p=0;p<c;++p)h[p]=t(u[p],s);return o.makeTensorInfo(i.shape,l,h)}}function yo(n,t,e){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(Wt(i,n),"string"===i.dtype||"string"===e)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,c=e||i.dtype,l=t(u,c,s);return o.makeTensorInfo(i.shape,c,l)}}zh.nextDataId=0,S0("cpu",()=>new zh,1);const ow=Le(Z,n=>n>=0?n:Math.exp(n)-1),zC={kernelName:Z,backendName:"cpu",kernelFunc:ow};function ws(n){const{inputs:t,backend:e}=n,{x:r}=t;return e.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const PC={kernelName:el,backendName:"cpu",kernelFunc:ws};function lw(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{alpha:a}=r;Wt([s],"leakyRelu");const i=nt(s.shape),o=e.data.get(s.dataId).values,u=cn("float32",i);for(let c=0;c<o.length;c++)u[c]=o[c]<0?a*o[c]:o[c];return e.makeTensorInfo(s.shape,"float32",u)}const BC={kernelName:Vu,backendName:"cpu",kernelFunc:lw};function pn(n){return(t,e,r,s,a)=>{const i=de(t,e),o=i.length,u=jt(i),c=cn(a,nt(i)),l=t.length,h=e.length,p=jt(t),d=jt(e),f=Zi(t,i),m=Zi(e,i);if(f.length+m.length===0)for(let g=0;g<c.length;++g)c[g]=n(r[g%r.length],s[g%s.length]);else for(let g=0;g<c.length;++g){const y=ks(g,o,u),b=y.slice(-l);f.forEach(N=>b[N]=0);const x=wr(b,l,p),w=y.slice(-h);m.forEach(N=>w[N]=0);const k=wr(w,h,d);c[g]=n(r[x],s[k])}return[c,i]}}const WC=pn((n,t)=>n<0?t*n:n);function uw(n){const{inputs:t,backend:e}=n,{x:r,alpha:s}=t;Wt([r,s],"prelu");const a=e.data.get(r.dataId).values,i=e.data.get(s.dataId).values,[o,u]=WC(r.shape,s.shape,a,i,"float32");return e.makeTensorInfo(u,"float32",o)}const VC={kernelName:oc,backendName:"cpu",kernelFunc:uw},cw=Le(dl,n=>Math.max(0,n)),UC={kernelName:dl,backendName:"cpu",kernelFunc:cw},hw=Le(fl,n=>Math.min(Math.max(0,n),6)),GC={kernelName:fl,backendName:"cpu",kernelFunc:hw};function Ia(n){return(t,e,r)=>{const s=cn(e,t.length);for(let a=0;a<t.length;++a)s[a]=n(t[a],r);return s}}const HC=Ia(n=>1/(1+Math.exp(-n))),pw=Le(vl,n=>1/(1+Math.exp(-n))),jC={kernelName:vl,backendName:"cpu",kernelFunc:pw};function Ph(n,t,e,r,s){if("linear"===e)return ws({inputs:{x:t},backend:n});if("relu"===e)return cw({inputs:{x:t},backend:n});if("elu"===e)return ow({inputs:{x:t},backend:n});if("relu6"===e)return hw({inputs:{x:t},backend:n});if("prelu"===e)return uw({inputs:{x:t,alpha:r},backend:n});if("leakyrelu"===e)return lw({inputs:{x:t},backend:n,attrs:{alpha:s}});if("sigmoid"===e)return pw({inputs:{x:t},backend:n});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}function gr(n){const{inputs:t,backend:e}=n,{real:r,imag:s}=t,a=e.data.get(r.dataId).values,i=e.data.get(s.dataId).values,o=e.makeTensorInfo(r.shape,"complex64");return e.data.get(o.dataId).complexTensorInfos={real:e.makeTensorInfo(r.shape,"float32",a),imag:e.makeTensorInfo(s.shape,"float32",i)},o}const qC={kernelName:Ko,backendName:"cpu",kernelFunc:gr};function Bh(n,t,e="float32"){if("complex64"===e)return gr({inputs:{real:Bh(n,t,"float32"),imag:Bh(n,t,"float32")},backend:n});const r=dn(nt(t),e);return n.makeTensorInfo(t,e,r)}function ui(n){const{inputs:t,backend:e}=n,{input:r}=t,s=e.data.get(r.dataId).complexTensorInfos.real,a=e.data.get(s.dataId).values;return e.makeTensorInfo(s.shape,s.dtype,a)}const KC={kernelName:Rp,backendName:"cpu",kernelFunc:ui};function dw(n,t,e,r){if("int32"===r)return[t,"int32",Int32Array.from(n)];if("bool"===r){const s=Ga([0],e),[a,i]=pn((o,u)=>o!==u?1:0)(t,[],n,s,"bool");return[i,"bool",a]}throw new Error(`Error in Cast: failed to cast ${e} to ${r}`)}function Na(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return ws({inputs:{x:s},backend:e});const l=Bh(e,s.shape,s.dtype),h=Na({inputs:{x:s},backend:e,attrs:{dtype:"float32"}}),p=gr({inputs:{real:h,imag:l},backend:e});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(h),p}if("complex64"===s.dtype){const l=ui({inputs:{input:s},backend:e}),h=Na({inputs:{x:l},backend:e,attrs:{dtype:a}});return e.disposeIntermediateTensorInfo(l),h}if(!zu(s.dtype,a)){const l=ws({inputs:{x:s},backend:e});return{dataId:l.dataId,shape:l.shape,dtype:a}}const i=e.data.get(s.dataId).values,[o,u,c]=dw(i,s.shape,s.dtype,a);return e.makeTensorInfo(o,u,c)}const XC={kernelName:La,backendName:"cpu",kernelFunc:Na};function Cn(n,t,e,r){return null==e?({inputs:s,backend:a})=>{const{a:i,b:o}=s,u=a;Wt([i,o],n);const c=u.data.get(i.dataId).values,l=u.data.get(o.dataId).values,h="string"===i.dtype?ti(c):c,p="string"===i.dtype?ti(l):l,d=r||i.dtype,[f,m]=t(i.shape,o.shape,h,p,d);return u.makeTensorInfo(m,d,f)}:({inputs:s,backend:a})=>{const{a:i,b:o}=s,u=a;if("complex64"===i.dtype||"complex64"===o.dtype){const c=Na({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),l=u.data.get(c.dataId),p=l.complexTensorInfos.imag,d=u.data.get(l.complexTensorInfos.real.dataId).values,f=u.data.get(p.dataId).values,m=Na({inputs:{x:o},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(m.dataId),b=g.complexTensorInfos.imag,x=u.data.get(g.complexTensorInfos.real.dataId).values,w=u.data.get(b.dataId).values,[k,N,$]=e(i.shape,o.shape,d,f,x,w),C=u.makeTensorInfo($,"float32",k),R=u.makeTensorInfo($,"float32",N),A=gr({inputs:{real:C,imag:R},backend:u});return u.disposeIntermediateTensorInfo(c),u.disposeIntermediateTensorInfo(m),u.disposeIntermediateTensorInfo(C),u.disposeIntermediateTensorInfo(R),A}{const c=u.data.get(i.dataId).values,l=u.data.get(o.dataId).values,h=r||i.dtype,[p,d]=t(i.shape,o.shape,c,l,h);return u.makeTensorInfo(d,h,p)}}}function Om(n){return(t,e,r,s,a,i)=>{const o=de(t,e),u=nt(o),c=o.length,l=jt(o),h=cn("float32",u),p=cn("float32",u),d=Zi(t,o),f=Zi(e,o),m=Fs(r,s),g=Fs(a,i),y=t.length,b=jt(t),x=e.length,w=jt(e);if(d.length+f.length===0)for(let k=0;k<h.length;k++){const N=k%m.length,$=k%g.length,C=n(m[2*N],m[2*N+1],g[2*$],g[2*$+1]);h[k]=C.real,p[k]=C.imag}else for(let k=0;k<h.length;k++){const N=ks(k,c,l),$=N.slice(-y);d.forEach(z=>$[z]=0);const C=wr($,y,b),R=N.slice(-x);f.forEach(z=>R[z]=0);const A=wr(R,x,w),_=n(m[2*C],m[2*C+1],g[2*A],g[2*A+1]);h[k]=_.real,p[k]=_.imag}return[h,p,o]}}const fw=pn((n,t)=>n+t),YC=Om((n,t,e,r)=>({real:n+e,imag:t+r})),bo=Cn(Jn,fw,YC),ZC={kernelName:Jn,backendName:"cpu",kernelFunc:bo};function Ue(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{shape:a}=r,i=nt(s.shape),o=Lu(a,i),u=nt(o);I(i===u,()=>`The new shape (${o}) has ${u} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),e.incRef(s.dataId);const c=e.data.get(s.dataId);if(null!=c.complexTensorInfos){const h=c.complexTensorInfos.imag;c.complexTensorInfos.real.shape=o,h.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const JC={kernelName:uc,backendName:"cpu",kernelFunc:Ue};function mw(n){const{inputs:t,backend:e,attrs:r}=n,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;Wt([s,a],"matMul");const u=s.shape.length,c=a.shape.length,l=i?s.shape[u-2]:s.shape[u-1],h=o?a.shape[c-1]:a.shape[c-2],p=i?s.shape[u-1]:s.shape[u-2],d=o?a.shape[c-2]:a.shape[c-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=nt(f),y=nt(m),b=de(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,d]);I(l===h,()=>`Error in matMul: inner shapes (${l}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`);const x=o?[y,d,h]:[y,h,d],w=Ue({inputs:{x:s},backend:e,attrs:{shape:i?[g,l,p]:[g,p,l]}}),k=Ue({inputs:{x:a},backend:e,attrs:{shape:x}}),N=i?w.shape[1]:w.shape[2],$=i?w.shape[2]:w.shape[1],C=o?k.shape[1]:k.shape[2],R=Math.max(g,y),A=e.data.get(w.dataId).values,_=e.data.get(k.dataId).values,z=jt(w.shape),V=jt(k.shape),[X,J,Y]=i?[z[0],1,z[1]]:[z[0],z[1],1],[et,rt,at]=o?[1,V[1],V[0]]:[V[1],1,V[0]],dt=$*C,pt=we([R,$,C],w.dtype),ft=pt.values,gt=e.blockSize;for(let St=0;St<R;St++)for(let Ct=0;Ct<$;Ct+=gt)for(let At=0;At<C;At+=gt)for(let Ft=0;Ft<N;Ft+=gt){const Jt=Math.min(Ct+gt,$),Zt=Math.min(At+gt,C),re=Math.min(Ft+gt,N);for(let Gt=Ct;Gt<Jt;Gt++)for(let ue=At;ue<Zt;ue++){let se=0;for(let pe=Ft;pe<re;pe++){const ce=Math.min(St,g-1)*X,ye=Math.min(St,y-1)*at;se+=A[ce+Gt*J+pe*Y]*_[pe*et+ue*rt+ye]}ft[St*dt+(Gt*C+ue)]+=se}}return e.disposeIntermediateTensorInfo(w),e.disposeIntermediateTensorInfo(k),e.makeTensorInfo(b,pt.dtype,pt.values)}const QC={kernelName:Oi,backendName:"cpu",kernelFunc:mw},t$={kernelName:kc,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:h}=r;let p,d,f;const m=[];p=mw({inputs:{a:s,b:a},attrs:{transposeA:u,transposeB:c},backend:e}),i&&(d=bo({inputs:{a:p,b:i},backend:e}),m.push(p),p=d),l&&(f=Ph(e,p,l,o,h),m.push(p),p=f);for(const g of m)e.disposeIntermediateTensorInfo(g);return p}};function gw(n){const t=new Float32Array(n.length);for(let e=0;e<n.length;++e)t[e]=Math.abs(n[e]);return t}const e$={kernelName:Gs,backendName:"cpu",kernelFunc:n=>{const{x:t}=n.inputs,e=n.backend;Wt(t,"abs");let r=new Float32Array(nt(t.shape));return r=gw(e.data.get(t.dataId).values),e.makeOutput(r,t.shape,t.dtype)}},n$=Le(Hs,n=>Math.acos(n)),r$={kernelName:Hs,backendName:"cpu",kernelFunc:n$},s$=Le(Aa,n=>Math.acosh(n)),a$={kernelName:Aa,backendName:"cpu",kernelFunc:s$},i$={kernelName:$i,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e}=n,r=t;Wt(t,"addN");const s=r.map(o=>e.data.get(o.dataId).values),a=we(r[0].shape,r[0].dtype),i=a.values;for(let o=0;o<r.length;o++){const u=s[o];for(let c=0;c<i.length;c++)i[c]+=u[c]}return e.makeTensorInfo(a.shape,a.dtype,a.values)}};function Mm(n,t,e,r,s){const a=t.length,i=nt(t),o=jt(t),u=jt(s),c=cn(e,nt(s));for(let l=0;l<i;++l){const h=ks(l,a,o),p=new Array(h.length);for(let d=0;d<p.length;d++)p[d]=h[r[d]];c[wr(p,a,u)]=n[l]}return c}function ar(n){const{inputs:t,attrs:e,backend:r}=n,{x:s}=t,{perm:a}=e;Wt(s,"transpose");const o=new Array(s.shape.length);for(let c=0;c<o.length;c++)o[c]=s.shape[a[c]];const u=Mm(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(u,o,s.dtype),shape:o,dtype:s.dtype}}const o$={kernelName:ji,backendName:"cpu",kernelFunc:ar},l$={kernelName:"All",backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r;Wt(s,"all");const o=be(a,s.shape);let u=o;const c=tn(u,s.shape.length);let l=s;null!=c&&(l=ar({inputs:{x:s},backend:e,attrs:{perm:c}}),u=an(u.length,s.shape.length)),Dn("all",u,l.shape.length);const[h,p]=Sn(l.shape,u),d=nt(p),f=dn(nt(h),l.dtype),m=e.data.get(l.dataId).values;for(let y=0;y<f.length;++y){const b=y*d;let x=m[b];for(let w=0;w<d;++w){const k=m[b+w];x=x&&k}f[y]=x}null!=c&&e.disposeIntermediateTensorInfo(l);const g=e.makeTensorInfo(h,l.dtype,f);if(i){const y=Ue({inputs:{x:g},backend:e,attrs:{shape:sn(h,o)}});return e.disposeIntermediateTensorInfo(g),y}return g}},u$={kernelName:"Any",backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r;Wt(s,"any");const o=be(a,s.shape);let u=o;const c=tn(u,s.shape.length);let l=s;null!=c&&(l=ar({inputs:{x:s},backend:e,attrs:{perm:c}}),u=an(u.length,s.shape.length)),Dn("any",u,l.shape.length);const[h,p]=Sn(l.shape,u),d=nt(p),f=dn(nt(h),l.dtype),m=e.data.get(l.dataId).values;for(let y=0;y<f.length;++y){const b=y*d;let x=m[b];for(let w=0;w<d;++w){const k=m[b+w];x=x||k}f[y]=x}null!=c&&e.disposeIntermediateTensorInfo(l);const g=e.makeTensorInfo(h,l.dtype,f);if(i){const y=Ue({inputs:{x:g},backend:e,attrs:{shape:sn(h,o)}});return e.disposeIntermediateTensorInfo(g),y}return g}},c$={kernelName:Ri,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a}=r;Wt(s,"argMax");let i=be(a,s.shape);const o=tn(i,s.shape.length);let u=s;const c=[];null!=o&&(u=ar({inputs:{x:s},backend:e,attrs:{perm:o}}),c.push(u),i=an(i.length,u.shape.length)),i=[i[0]],Dn("argMax",i,u.shape.length);const[l,h]=Sn(u.shape,i),p=dn(nt(l),"int32"),d=nt(h),f=e.data.get(u.dataId).values;for(let m=0;m<p.length;++m){const g=m*d;let y=f[g],b=0;for(let x=0;x<d;++x){const w=f[g+x];w>y&&(y=w,b=x)}p[m]=b}return c.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.makeTensorInfo(l,"int32",p)}},h$={kernelName:Ai,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a}=r;Wt(s,"argMin");let i=be(a,s.shape);const o=tn(i,s.shape.length);let u=s;const c=[];null!=o&&(u=ar({inputs:{x:s},backend:e,attrs:{perm:o}}),c.push(u),i=an(i.length,u.shape.length)),i=[i[0]],Dn("argMin",i,u.shape.length);const[l,h]=Sn(u.shape,i),p=dn(nt(l),"int32"),d=nt(h),f=e.data.get(u.dataId).values;for(let m=0;m<p.length;++m){const g=m*d;let y=f[g],b=0;for(let x=0;x<d;++x){const w=f[g+x];w<y&&(y=w,b=x)}p[m]=b}return c.forEach(m=>e.disposeIntermediateTensorInfo(m)),e.makeTensorInfo(l,"int32",p)}},p$=Le(Fa,n=>Math.asin(n)),d$={kernelName:Fa,backendName:"cpu",kernelFunc:p$},f$=Le(Da,n=>Math.asinh(n)),m$={kernelName:Da,backendName:"cpu",kernelFunc:f$},g$=Le(_a,n=>Math.atan(n)),y$={kernelName:_a,backendName:"cpu",kernelFunc:g$},b$=pn((n,t)=>Math.atan2(n,t)),x$=Cn(Ma,b$),w$={kernelName:Ma,backendName:"cpu",kernelFunc:x$},v$=Le(Oa,n=>Math.atanh(n)),k$={kernelName:Oa,backendName:"cpu",kernelFunc:v$};function Lm(n,t,e,r,s,a){const i=s.strideHeight,o=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,l=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,d=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=we(s.outShape,e),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let w=0;w<s.batchSize;++w){const k=w*y,N=w*r[0];for(let $=0;$<s.inChannels;++$)for(let C=0;C<s.outHeight;++C){const R=C*i-p,A=Math.max(0,R),_=Math.min(s.inHeight,l+R),z=k+C*b;for(let V=0;V<s.outWidth;++V){const X=V*o-d,J=Math.max(0,X),Y=Math.min(s.inWidth,h+X);let et=f,rt=0,at=0;for(let dt=A;dt<_;dt+=u){const pt=N+dt*r[1];for(let ft=J;ft<Y;ft+=c){const gt=n[pt+ft*r[2]+$];"max"===a&&gt>et?et=gt:"avg"===a&&(rt+=gt,at++)}if(isNaN(et))break}g[z+V*x+$]="avg"===a?rt/at:et}}}return m}function yw(n,t,e,r,s=!1,a=!1){const i=we(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=we(t,e,n);for(let g=0;g<r.batchSize;++g)for(let y=0;y<r.inChannels;++y)for(let b=0;b<r.outHeight;++b){const x=b*o-d;let w=x;for(;w<0;)w+=c;const k=Math.min(r.inHeight,h+x);for(let N=0;N<r.outWidth;++N){const $=N*u-f;let C=$;for(;C<0;)C+=l;const R=Math.min(r.inWidth,p+$);let A=Number.NEGATIVE_INFINITY,_=-1;for(let z=w;z<k;z+=c){const V=z-x;for(let X=C;X<R;X+=l){const J=X-$,Y=m.get(g,z,X,y);Y>A&&(A=Y,_=s?a?((g*r.inHeight+z)*r.inWidth+X)*r.inChannels+y:(z*r.inWidth+X)*r.inChannels+y:V*p+J)}}i.set(_,g,b,N,y)}}return i}function bw(n,t,e,r,s,a){const i=s.strideDepth,o=s.strideHeight,u=s.strideWidth,c=s.dilationDepth,l=s.dilationHeight,h=s.dilationWidth,p=s.effectiveFilterDepth,d=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=we(s.outShape,e),w=x.values,k=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],N=s.outShape[2]*s.outShape[3]*s.outShape[4],$=s.outShape[3]*s.outShape[4],C=s.outShape[4];for(let R=0;R<s.batchSize;++R){const A=R*k,_=R*r[0];for(let z=0;z<s.inChannels;++z)for(let V=0;V<s.outDepth;++V){const X=V*i-m;let J=X;for(;J<0;)J+=c;const Y=Math.min(s.inDepth,p+X),et=A+V*N;for(let rt=0;rt<s.outHeight;++rt){const at=rt*o-g;let dt=at;for(;dt<0;)dt+=l;const pt=Math.min(s.inHeight,d+at),ft=et+rt*$;for(let gt=0;gt<s.outWidth;++gt){const St=gt*u-y;let Ct=St;for(;Ct<0;)Ct+=h;const At=Math.min(s.inWidth,f+St),Ft=ft+gt*C;let Jt=b,Zt=0,re=0;for(let Gt=J;Gt<Y;Gt+=c){const ue=_+Gt*r[1];for(let se=dt;se<pt;se+=l){const pe=ue+se*r[2];for(let ce=Ct;ce<At;ce+=h){const ye=n[pe+ce*r[3]+z];if("max"===a&&ye>Jt?Jt=ye:"avg"===a&&(Zt+=ye,re++),isNaN(Jt))break}if(isNaN(Jt))break}if(isNaN(Jt))break}w[Ft+z]="avg"===a?Zt/re:Jt}}}}return x}const I$={kernelName:Fi,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t;Wt(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;I(Fn(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=Dr(s.shape,a,i,1,o,u);let l;if(1===c.filterWidth&&1===c.filterHeight&&he(c.inShape,c.outShape))l=ws({inputs:{x:s},backend:e});else{const h=e.data.get(s.dataId).values,p=jt(s.shape),d=Lm(h,0,s.dtype,p,c,"avg");l=e.makeTensorInfo(c.outShape,s.dtype,d.values)}return l}},N$={kernelName:Di,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:c}=r;Wt(s,"avgPool3d");const l=Cs(s.shape,a,i,1,o,u,c),h=bw(e.data.get(s.dataId).values,0,s.dtype,jt(s.shape),l,"avg");return e.makeTensorInfo(h.shape,"float32",h.values)}},S$={kernelName:_i,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=r;Wt([s,a],"avgPool3DGrad");const l=Cs(a.shape,i,o,1,u,c),h=l.strideDepth,p=l.strideHeight,d=l.strideWidth,f=l.filterDepth,m=l.filterHeight,g=l.filterWidth,y=l.dilationDepth,b=l.dilationHeight,x=l.dilationWidth,w=l.effectiveFilterDepth,k=l.effectiveFilterHeight,N=l.effectiveFilterWidth,$=w-1-l.padInfo.front,C=N-1-l.padInfo.left,R=k-1-l.padInfo.top,A=we(a.shape,"float32"),_=1/(f*m*g),z=e.bufferSync(s);for(let V=0;V<l.batchSize;++V)for(let X=0;X<l.inChannels;++X)for(let J=0;J<l.inDepth;++J)for(let Y=0;Y<l.inHeight;++Y)for(let et=0;et<l.inWidth;++et){const rt=J-$,at=Y-R,dt=et-C;let pt=0;for(let ft=0;ft<w;ft+=y){const gt=(rt+ft)/h;if(!(gt<0||gt>=l.outDepth||Math.floor(gt)!==gt))for(let St=0;St<k;St+=b){const Ct=(at+St)/p;if(!(Ct<0||Ct>=l.outHeight||Math.floor(Ct)!==Ct))for(let At=0;At<N;At+=x){const Ft=(dt+At)/d;Ft<0||Ft>=l.outWidth||Math.floor(Ft)!==Ft||(pt+=z.get(V,gt,Ct,Ft,X))}}}A.set(pt*_,V,J,Y,et,X)}return e.makeTensorInfo(A.shape,A.dtype,A.values)}},T$={kernelName:Ho,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a}=t,i=a;Wt([s,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:c}=r,l=Dr(i.shape,o,u,1,c),h=l.strideHeight,p=l.strideWidth,d=l.filterHeight,f=l.filterWidth,m=l.dilationHeight,g=l.dilationWidth,y=l.effectiveFilterHeight,b=l.effectiveFilterWidth,x=b-1-l.padInfo.left,w=y-1-l.padInfo.top,k=we(i.shape,"float32"),N=1/(d*f),$=e.data.get(s.dataId).values,C=we(s.shape,"float32",$);for(let R=0;R<l.batchSize;++R)for(let A=0;A<l.inChannels;++A)for(let _=0;_<l.inHeight;++_)for(let z=0;z<l.inWidth;++z){const V=_-w,X=z-x;let J=0;for(let Y=0;Y<y;Y+=m){const et=(V+Y)/h;if(!(et<0||et>=l.outHeight||Math.floor(et)!==et))for(let rt=0;rt<b;rt+=g){const at=(X+rt)/p;at<0||at>=l.outWidth||Math.floor(at)!==at||(J+=C.get(R,et,at,A))}}k.set(J*N,R,_,z,A)}return e.makeTensorInfo(k.shape,k.dtype,k.values)}},C$={kernelName:Ks,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,scale:a,offset:i,mean:o,variance:u}=t;I(o.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),I(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),I(null==a||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),Wt([s,o,u,a,i],"batchNorm");let{varianceEpsilon:c}=r;null==c&&(c=.001);const l=e.data.get(s.dataId).values,h=e.data.get(o.dataId).values,p=e.data.get(u.dataId).values,d=a?e.data.get(a.dataId).values:new Float32Array([1]),f=i?e.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(l.length),g=f.length,y=d.length,b=p.length,x=h.length;let w=0,k=0,N=0,$=0;for(let C=0;C<l.length;++C)m[C]=f[w++]+(l[C]-h[k++])*d[N++]/Math.sqrt(p[$++]+c),w>=g&&(w=0),k>=x&&(k=0),N>=y&&(N=0),$>=b&&($=0);return e.makeTensorInfo(s.shape,s.dtype,m)}};function xw(n,t,e,r,s){const a=vd(r,t,e),i=nt(e),o=jt(r);if(a){const l=kd(t,o);return"string"===s?n.slice(l,l+i):n.subarray(l,l+i)}const u=we(r,s,"string"===s?ti(n):n),c=we(e,s);for(let l=0;l<c.size;++l){const h=c.indexToLoc(l),p=h.map((d,f)=>d+t[f]);c.set(u.get(...p),...h)}return"string"===s?a1(c.values):c.values}function ci(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{begin:a,size:i}=r;Wt(s,"slice");const[o,u]=_c(s,a,i);xd(s,o,u);const c=xw(e.data.get(s.dataId).values,o,u,s.shape,s.dtype);return e.makeTensorInfo(u,s.dtype,c)}const $$={kernelName:fc,backendName:"cpu",kernelFunc:ci},E$={kernelName:Mi,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{blockShape:a,crops:i}=r;Wt([s],"batchToSpaceND");const o=a.reduce((y,b)=>y*b),u=Kl(s.shape,a,o),c=Xl(u.length,a.length),l=Yl(s.shape,a,o),h=wf(i,a.length),p=vf(l,i,a.length),d=Ue({inputs:{x:s},backend:e,attrs:{shape:u}}),f=ar({inputs:{x:d},backend:e,attrs:{perm:c}}),m=Ue({inputs:{x:f},backend:e,attrs:{shape:l}}),g=ci({inputs:{x:m},backend:e,attrs:{begin:h,size:p}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),g}};function zm(n,t,e,r,s){const a=nt(r),i=dn(s,e);for(let o=0;o<n.length;o++){const u=n[o];if(u<0)throw new Error("Input x must be non-negative!");u>=s||(i[u]+=a>0?t[o]:1)}return i}function ww(n,t,e,r=!1){const s=n.shape[0],a=n.shape[1],i=we([s,e],t.dtype);for(let o=0;o<s;o++)for(let u=0;u<a;u++){const c=n.get(o,u);if(c<0)throw new Error("Input x must be non-negative!");c>=e||i.set(r?1:t.size>0?i.get(o,c)+t.get(o,u):i.get(o,c)+1,o,c)}return i}const R$={kernelName:jo,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,weights:a}=t,{size:i}=r,o=zm(e.data.get(s.dataId).values,e.data.get(a.dataId).values,a.dtype,a.shape,i);return e.makeTensorInfo([i],a.dtype,o)}},A$={kernelName:qo,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e}=n,{s0:r,s1:s}=t,a=e.data.get(r.dataId).values,i=e.data.get(s.dataId).values,o=de(Array.from(a),Array.from(i));return e.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},vw=Ia(n=>Math.ceil(n)),F$=yo(za,vw),D$={kernelName:za,backendName:"cpu",kernelFunc:F$},_$=Le(Pa,(n,t)=>n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n),O$={kernelName:Pa,backendName:"cpu",kernelFunc:_$},M$={kernelName:Li,backendName:"cpu",kernelFunc:n=>{const{x:t}=n.inputs,e=n.backend,r=new Float32Array(nt(t.shape)),s=e.data.get(t.dataId),i=s.complexTensorInfos.imag,o=e.data.get(s.complexTensorInfos.real.dataId).values,u=e.data.get(i.dataId).values;for(let c=0;c<o.length;c++)r[c]=Math.hypot(o[c],u[c]);return e.makeOutput(r,t.shape,"float32")}};function kw(n,t,e,r){const s=hn(e,nt(t));if(r&&"string"!==e){let a=0;n.forEach(i=>{const o=nt(i.shape);s.set(i.vals,a),a+=o})}else{let a=0;n.forEach(i=>{const o="string"===e?ti(i.vals):i.vals;let u=0;for(let c=0;c<i.shape[0];++c){const l=c*t[1]+a;for(let h=0;h<i.shape[1];++h)s[l+h]=o[u++]}a+=i.shape[1]})}return s}function xo(n){const{inputs:t,backend:e}=n,{input:r}=t,s=e.data.get(r.dataId).complexTensorInfos.imag,a=e.data.get(s.dataId).values;return e.makeTensorInfo(s.shape,s.dtype,a)}const L$={kernelName:yp,backendName:"cpu",kernelFunc:xo};function wo(n){const{inputs:t,backend:e,attrs:r}=n,{axis:s}=r,a=be(s,t[0].shape)[0];yf(t.map(f=>f.shape),a);let i=ds(t.map(f=>f.shape),a);if(0===nt(i))return e.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter(f=>nt(f.shape)>0);if(1===o.length)return ws({inputs:{x:o[0]},backend:e});if("complex64"===o[0].dtype){const f=o.map(x=>ui({inputs:{input:x},backend:e})),m=o.map(x=>xo({inputs:{input:x},backend:e})),g=wo({inputs:f,backend:e,attrs:{axis:a}}),y=wo({inputs:m,backend:e,attrs:{axis:a}}),b=gr({inputs:{real:g,imag:y},backend:e});return f.forEach(x=>e.disposeIntermediateTensorInfo(x)),m.forEach(x=>e.disposeIntermediateTensorInfo(x)),e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(y),b}const u=o.map(f=>{const m=nt(f.shape.slice(a));return Ue({inputs:{x:f},backend:e,attrs:{shape:[-1,m]}})}),c=u.map(f=>({vals:e.data.get(f.dataId).values,shape:f.shape}));i=ds(u.map(f=>f.shape),1);const h=kw(c,i,t[0].dtype,1===u[0].shape[0]),p=ds(o.map(f=>f.shape),a),d=e.makeTensorInfo(p,t[0].dtype,h);return u.forEach(f=>e.disposeIntermediateTensorInfo(f)),d}const z$={kernelName:zi,backendName:"cpu",kernelFunc:wo};function Iw(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:c,dimRoundingMode:l}=r;Wt([s,a],"conv2d");const h=$s(u),p=Nn(s.shape,a.shape,i,c,o,l,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new In(p.outShape,s.dtype),k=jt(s.shape),N=jt(a.shape),$=k[0],C=x?k[1]:k[2],R=x?k[2]:1,A=x?1:k[1],_=w.strides[0],z=x?w.strides[1]:w.strides[2],V=x?w.strides[2]:1,X=x?1:w.strides[1],J=e.data.get(s.dataId).values,Y=e.data.get(a.dataId).values,et=w.values;for(let rt=0;rt<p.batchSize;++rt){const at=rt*$,dt=rt*_;for(let pt=0;pt<p.outHeight;++pt){const ft=dt+pt*z,gt=pt*p.strideHeight-b;for(let St=0;St<d;++St){const Ct=gt+St*m;if(Ct<0||Ct>=p.inHeight)continue;const At=St*N[0],Ft=at+Ct*C;for(let Jt=0;Jt<p.outWidth;++Jt){const Zt=ft+Jt*V,re=Jt*p.strideWidth-y;for(let Gt=0;Gt<f;++Gt){const ue=re+Gt*g;if(ue<0||ue>=p.inWidth)continue;const se=Ft+ue*R;let pe=At+Gt*N[1];for(let ce=0;ce<p.inChannels;++ce){const ye=J[se+ce*A];for(let Ce=0;Ce<p.outChannels;++Ce)et[Zt+Ce*X]+=ye*Y[pe+Ce];pe+=p.outChannels}}}}}}return e.makeTensorInfo(w.shape,w.dtype,et)}const P$={kernelName:Pi,backendName:"cpu",kernelFunc:Iw},B$={kernelName:Xo,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:c,filterShape:l}=r;Wt([s,a],"conv2dBackpropFilter");const h=$s(u),p=Nn(s.shape,l,i,1,o,c,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new In(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,k=e.data.get(s.dataId).values,N=e.data.get(a.dataId).values,$=new In(s.shape,s.dtype,k),C=new In(a.shape,a.dtype,N);for(let R=0;R<m;++R){const A=Math.max(0,Math.ceil((w-R)/d)),_=Math.min(p.outHeight,(p.inHeight+w-R)/d);for(let z=0;z<g;++z){const V=Math.max(0,Math.ceil((x-z)/f)),X=Math.min(p.outWidth,(p.inWidth+x-z)/f);for(let J=0;J<p.inChannels;++J)for(let Y=0;Y<p.outChannels;++Y){let et=0;for(let rt=0;rt<p.batchSize;++rt)for(let at=A;at<_;++at){const dt=R+at*d-w;for(let pt=V;pt<X;++pt){const ft=z+pt*f-x;et+=y?$.get(rt,dt,ft,J)*C.get(rt,at,pt,Y):$.get(rt,J,dt,ft)*C.get(rt,Y,at,pt)}}b.set(et,R,z,J,Y)}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}},W$={kernelName:Bi,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:c,dimRoundingMode:l}=r;Wt([s,a],"conv2dBackpropInput");const h=jt(a.shape),p=jt(s.shape);let d=$s(c);const f=Nn(i,a.shape,o,1,u,l,!1,d),m=new In(f.inShape,"float32"),g=m.values,y=e.data.get(s.dataId).values,b=e.data.get(a.dataId).values,[x,w,k]=h,{batchSize:N,filterHeight:$,filterWidth:C,inChannels:R,inHeight:A,inWidth:_,outChannels:z,outHeight:V,outWidth:X,strideHeight:J,strideWidth:Y}=f;d=f.dataFormat;const et=$-1-f.padInfo.top,rt=C-1-f.padInfo.left,at="channelsLast"===d,dt=m.strides[0],pt=at?m.strides[1]:m.strides[2],ft=at?m.strides[2]:1,gt=at?1:m.strides[1],St=p[0],Ct=at?p[1]:p[2],At=at?p[2]:1,Ft=at?1:p[1];for(let Jt=0;Jt<N;++Jt)for(let Zt=0;Zt<R;++Zt)for(let re=0;re<A;++re){const Gt=re-et,ue=Math.max(0,Math.ceil(Gt/J)),se=Math.min(V,($+Gt)/J);for(let pe=0;pe<_;++pe){const ce=pe-rt,ye=Math.max(0,Math.ceil(ce/Y)),Ce=Math.min(X,(C+ce)/Y);let un=0;for(let Bn=ue;Bn<se;++Bn){const Ze=Bn*J-Gt;for(let ze=ye;ze<Ce;++ze){const br=St*Jt+Ct*Bn+At*ze,Ln=x*($-1-Ze)+w*(C-1-(ze*Y-ce))+k*Zt;for(let os=0;os<z;++os)un+=y[br+Ft*os]*b[Ln+os]}}g[dt*Jt+pt*re+ft*pe+gt*Zt]=un}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}},V$={kernelName:Wi,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r;Wt([s,a],"conv3d");const c=la(s.shape,a.shape,i,u,o),{filterDepth:l,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=c,y=g.front,b=g.left,x=g.top,w=new In(c.outShape,s.dtype),k=e.data.get(s.dataId).values,N=e.data.get(a.dataId).values,$=w.values,C=jt(s.shape),R=jt(a.shape);for(let A=0;A<c.batchSize;++A){const _=A*C[0],z=A*w.strides[0];for(let V=0;V<c.outDepth;++V){const X=z+V*w.strides[1],J=V*c.strideDepth-y;for(let Y=0;Y<l;++Y){const et=J+Y*d;if(et<0||et>=c.inDepth)continue;const rt=Y*R[0],at=_+et*C[1];for(let dt=0;dt<c.outHeight;++dt){const pt=X+dt*w.strides[2],ft=dt*c.strideHeight-x;for(let gt=0;gt<h;++gt){const St=ft+gt*f;if(St<0||St>=c.inHeight)continue;const Ct=rt+gt*R[1],At=at+St*C[2];for(let Ft=0;Ft<c.outWidth;++Ft){const Jt=pt+Ft*c.outChannels,Zt=Ft*c.strideWidth-b;for(let re=0;re<p;++re){const Gt=Zt+re*m;if(Gt<0||Gt>=c.inWidth)continue;const se=At+Gt*c.inChannels;let pe=Ct+re*R[2];for(let ce=0;ce<c.inChannels;++ce){const ye=k[se+ce];for(let Ce=0;Ce<c.outChannels;++Ce)$[Jt+Ce]+=ye*N[pe+Ce];pe+=c.outChannels}}}}}}}}return e.makeTensorInfo(w.shape,w.dtype,w.values)}},U$={kernelName:Yo,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:u}=r;Wt([s,a],"conv3dBackpropFilterV2");const c=jt(s.shape),l=jt(a.shape),h=la(s.shape,u,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new In(h.filterShape,"float32"),x=b.values,[w,k,N,$]=b.strides,C=e.data.get(a.dataId).values,[R,A,_,z]=l,V=e.data.get(s.dataId).values,[X,J,Y,et]=c,rt=h.padInfo.front,at=h.padInfo.left,dt=h.padInfo.top;for(let pt=0;pt<m;++pt){const ft=Math.max(0,Math.ceil((rt-pt)/p)),gt=Math.min(h.outDepth,(h.inDepth+rt-pt)/p),St=pt*w;for(let Ct=0;Ct<g;++Ct){const At=Math.max(0,Math.ceil((dt-Ct)/d)),Ft=Math.min(h.outHeight,(h.inHeight+dt-Ct)/d),Jt=Ct*k+St;for(let Zt=0;Zt<y;++Zt){const re=Math.max(0,Math.ceil((at-Zt)/f)),Gt=Math.min(h.outWidth,(h.inWidth+at-Zt)/f),ue=Zt*N+Jt;for(let se=0;se<h.inChannels;++se){const pe=se*$+ue;for(let ce=0;ce<h.outChannels;++ce){let ye=0;for(let Ce=0;Ce<h.batchSize;++Ce){const un=Ce*X,Bn=Ce*R;for(let Ze=ft;Ze<gt;++Ze){const ze=(pt+Ze*p-rt)*J+un,br=Ze*A+Bn;for(let Ln=At;Ln<Ft;++Ln){const os=(Ct+Ln*d-dt)*Y+ze,ls=Ln*_+br;for(let $a=re;$a<Gt;++$a)ye+=V[(Zt+$a*f-at)*et+os+se]*C[$a*z+ls+ce]}}}x[pe+ce]=ye}}}}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}},G$={kernelName:Vi,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:u}=r;Wt([s],"conv3dBackpropInputV2");const c=jt(s.shape),l=jt(a.shape),h=la(u,a.shape,o,1,i),p=new In(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=e.data.get(s.dataId).values,[x,w,k,N]=c,$=e.data.get(a.dataId).values,[C,R,A,_]=l,{batchSize:z,filterDepth:V,filterHeight:X,filterWidth:J,inChannels:Y,inDepth:et,inHeight:rt,inWidth:at,outChannels:dt,outDepth:pt,outHeight:ft,outWidth:gt,strideDepth:St,strideHeight:Ct,strideWidth:At}=h,Ft=V-1-h.padInfo.front,Jt=X-1-h.padInfo.top,Zt=J-1-h.padInfo.left;for(let re=0;re<z;++re)for(let Gt=0;Gt<Y;++Gt)for(let ue=0;ue<et;++ue){const se=ue-Ft,pe=Math.max(0,Math.ceil(se/St)),ce=Math.min(pt,(V+se)/St);for(let ye=0;ye<rt;++ye){const Ce=ye-Jt,un=Math.max(0,Math.ceil(Ce/Ct)),Bn=Math.min(ft,(X+Ce)/Ct);for(let Ze=0;Ze<at;++Ze){const ze=Ze-Zt,br=Math.max(0,Math.ceil(ze/At)),Ln=Math.min(gt,(J+ze)/At);let os=0;for(let ls=pe;ls<ce;++ls){const $a=ls*St-se;for(let Ws=un;Ws<Bn;++Ws){const dM=Ws*Ct-Ce;for(let fp=br;fp<Ln;++fp){const fM=x*re+w*ls+k*Ws+N*fp,mM=C*(V-1-$a)+R*(X-1-dM)+A*(J-1-(fp*At-ze))+_*Gt;for(let mp=0;mp<dt;++mp)os+=b[fM+mp]*$[mM+mp]}}}d[f*re+m*ue+g*ye+y*Ze+Gt]=os}}}return e.makeTensorInfo(p.shape,p.dtype,p.values)}},H$=Le(jr,n=>Math.cos(n)),j$={kernelName:jr,backendName:"cpu",kernelFunc:H$},q$=Le(js,n=>Math.cosh(n)),K$={kernelName:js,backendName:"cpu",kernelFunc:q$},X$={kernelName:qs,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:c}=r,[l,h,p,d]=s.shape,f=a.shape[0],[m,g]=o,y=we([f,m,g,d],"float32"),b=e.data.get(a.dataId).values,x=e.data.get(i.dataId).values,w=e.data.get(s.dataId).values,k=jt(s.shape),N=jt(y.shape);for(let $=0;$<f;$++){const C=4*$,R=b[C],A=b[C+1],_=b[C+2],z=b[C+3],V=x[$];if(V>=l)continue;const X=m>1?(_-R)*(h-1)/(m-1):0,J=g>1?(z-A)*(p-1)/(g-1):0;for(let Y=0;Y<m;Y++){const et=m>1?R*(h-1)+Y*X:.5*(R+_)*(h-1);if(et<0||et>h-1)for(let rt=0;rt<g;rt++)for(let at=0;at<d;at++)y.values[at+rt*N[2]+Y*N[1]+$*N[0]]=c;else if("bilinear"===u){const rt=Math.floor(et),at=Math.ceil(et),dt=et-rt;for(let pt=0;pt<g;pt++){const ft=g>1?A*(p-1)+pt*J:.5*(A+z)*(p-1);if(ft<0||ft>p-1){for(let At=0;At<d;At++)y.values[At+pt*N[2]+Y*N[1]+$*N[0]]=c;continue}const gt=Math.floor(ft),St=Math.ceil(ft),Ct=ft-gt;for(let At=0;At<d;At++){let Ft=At+gt*k[2]+rt*k[1]+V*k[0];const Jt=w[Ft];Ft=At+St*k[2]+rt*k[1]+V*k[0];const Zt=w[Ft];Ft=At+gt*k[2]+at*k[1]+V*k[0];const re=w[Ft];Ft=At+St*k[2]+at*k[1]+V*k[0];const Gt=Jt+(Zt-Jt)*Ct,ue=re+(w[Ft]-re)*Ct;Ft=At+pt*N[2]+Y*N[1]+$*N[0],y.values[Ft]=Gt+(ue-Gt)*dt}}}else for(let rt=0;rt<g;++rt){const at=g>1?A*(p-1)+rt*J:.5*(A+z)*(p-1);if(at<0||at>p-1){for(let ft=0;ft<d;ft++)y.values[ft+rt*N[2]+Y*N[1]+$*N[0]]=c;continue}const dt=Math.round(at),pt=Math.round(et);for(let ft=0;ft<d;ft++)y.values[ft+rt*N[2]+Y*N[1]+$*N[0]]=w[ft+dt*k[2]+pt*k[1]+V*k[0]]}}}return e.makeTensorInfo(y.shape,y.dtype,y.values)}},Y$={kernelName:cs,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;Wt(s,"cumprod");const u=tn([a],s.shape.length);let c=s;null!=u&&(c=ar({inputs:{x:s},backend:e,attrs:{perm:u}}));const l=an(1,s.shape.length)[0];if(l!==c.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);const h=ur(c.dtype,"int32"),p=Si(nt(c.shape),h),d=e.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=o?(y,b)=>y+f-b-1:(y,b)=>y+b;for(let y=0;y<d.length;y+=f)for(let b=0;b<f;b++){const x=m(y,b);if(0===b)p[x]=i?1:d[x];else{const w=m(y,b-1);p[x]=i?d[w]*p[w]:d[x]*p[w]}}const g=e.makeTensorInfo(c.shape,h,p);if(null!=u){const y=ar({inputs:{x:g},backend:e,attrs:{perm:ha(u)}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(c),y}return g}},Z$={kernelName:Ui,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;Wt(s,"cumsum");const u=tn([a],s.shape.length);let c=s;null!=u&&(c=ar({inputs:{x:s},backend:e,attrs:{perm:u}}));const l=an(1,s.shape.length)[0];if(l!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);const h=ur(c.dtype,"int32"),p=dn(nt(c.shape),h),d=e.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=o?(y,b)=>y+f-b-1:(y,b)=>y+b;for(let y=0;y<d.length;y+=f)for(let b=0;b<f;b++){const x=m(y,b);if(0===b)p[x]=i?0:d[x];else{const w=m(y,b-1);p[x]=i?d[w]+p[w]:d[x]+p[w]}}const g=e.makeTensorInfo(c.shape,h,p);if(null!=u){const y=ar({inputs:{x:g},backend:e,attrs:{perm:ha(u)}});return e.disposeIntermediateTensorInfo(g),e.disposeIntermediateTensorInfo(c),y}return g}},J$={kernelName:Ba,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const u=zm(e.data.get(s.dataId).values,e.data.get(a.dataId).values,a.dtype,a.shape,i);return e.makeTensorInfo([i],a.dtype,u)}if(2===s.shape.length){const u=ww(e.bufferSync(s),e.bufferSync(a),i,o);return e.makeTensorInfo(u.shape,a.dtype,u.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},Q$={kernelName:Zo,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{blockSize:a,dataFormat:i}=r;I("NHWC"===i,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const o=s.shape[0],u=s.shape[1],c=s.shape[2],l=s.shape[3],h=u*a,p=c*a,d=l/(a*a),f=e.data.get(s.dataId).values,m=new Float32Array(o*h*p*d);let g=0;for(let y=0;y<o;++y)for(let b=0;b<h;++b){const x=Math.floor(b/a),w=b%a;for(let k=0;k<p;++k){const N=Math.floor(k/a),$=(w*a+k%a)*d;for(let C=0;C<d;++C)m[g++]=f[C+$+l*(N+c*(x+u*y))]}}return e.makeTensorInfo([o,h,p,d],s.dtype,m)}};function Nw(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:c}=r;Wt([s,a],"depthwiseConv2DNative");const l=jt(s.shape),h=jt(a.shape);let p=u;null==p&&(p=[1,1]),I(Fn(i,p),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);const d=Nn(s.shape,a.shape,i,p,o,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,w=b.top,k=d.outChannels/d.inChannels,N=new In(d.outShape,s.dtype),$=e.data.get(s.dataId).values,C=e.data.get(a.dataId).values,R=N.values;for(let A=0;A<d.batchSize;++A){const _=A*l[0],z=A*N.strides[0];for(let V=0;V<d.outHeight;++V){const X=z+V*N.strides[1],J=V*d.strideHeight-w;for(let Y=0;Y<f;++Y){const et=J+Y*g;if(et<0||et>=d.inHeight)continue;const rt=Y*h[0],at=_+et*l[1];for(let dt=0;dt<d.outWidth;++dt){const pt=X+dt*N.strides[2],ft=dt*d.strideWidth-x;for(let gt=0;gt<m;++gt){const St=ft+gt*y;if(St<0||St>=d.inWidth)continue;const At=at+St*d.inChannels;let Ft=pt,Jt=rt+gt*h[1];for(let Zt=0;Zt<d.inChannels;++Zt){const re=$[At+Zt];for(let Gt=0;Gt<k;++Gt)R[Ft+Gt]+=re*C[Jt+Gt];Ft+=k,Jt+=k}}}}}}return e.makeTensorInfo(N.shape,N.dtype,N.values)}const tE={kernelName:Gi,backendName:"cpu",kernelFunc:Nw},eE={kernelName:Wa,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,filterShape:l}=r;Wt([s,a],"depthwiseConv2dNativeBackpropFilter");const h=Nn(s.shape,l,i,o,u,c,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new In(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=e.data.get(s.dataId).values,k=new In(s.shape,s.dtype,w),N=e.data.get(a.dataId).values,$=new In(a.shape,a.dtype,N);for(let C=0;C<f;++C){const R=Math.max(0,Math.ceil((b-C)/p)),A=Math.min(h.outHeight,(h.inHeight+b-C)/p);for(let _=0;_<m;++_){const z=Math.max(0,Math.ceil((y-_)/d)),V=Math.min(h.outWidth,(h.inWidth+y-_)/d);for(let X=0;X<h.outChannels;++X){const J=Math.trunc(X/x),Y=X%x;let et=0;for(let rt=0;rt<h.batchSize;++rt)for(let at=R;at<A;++at){const dt=C+at*p-b;for(let pt=z;pt<V;++pt)et+=k.get(rt,dt,_+pt*d-y,J)*$.get(rt,at,pt,X)}g.set(et,C,_,J,Y)}}}return e.makeTensorInfo(g.shape,g.dtype,g.values)}},nE={kernelName:Jo,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,inputShape:l}=r;Wt([s,a],"depthwiseConv2DNativeBackpropInput");const h=jt(s.shape),p=jt(a.shape),d=Nn(l,a.shape,i,o,u,c,!0),f=new In(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=e.data.get(s.dataId).values,[w,k,N]=h,$=e.data.get(a.dataId).values,[C,R,A]=p,{batchSize:_,filterHeight:z,filterWidth:V,inChannels:X,inHeight:J,inWidth:Y,outChannels:et,outHeight:rt,outWidth:at,strideHeight:dt,strideWidth:pt}=d,ft=z-1-d.padInfo.top,gt=V-1-d.padInfo.left,St=et/X;for(let Ct=0;Ct<_;++Ct)for(let At=0;At<X;++At)for(let Ft=0;Ft<J;++Ft){const Jt=Ft-ft,Zt=Math.max(0,Math.ceil(Jt/dt)),re=Math.min(rt,(z+Jt)/dt);for(let Gt=0;Gt<Y;++Gt){const ue=Gt-gt,se=Math.max(0,Math.ceil(ue/pt)),pe=Math.min(at,(V+ue)/pt);let ce=0;for(let ye=Zt;ye<re;++ye){const Ce=ye*dt-Jt;for(let un=se;un<pe;++un){const Bn=w*Ct+k*ye+N*un,Ze=C*(z-1-Ce)+R*(V-1-(un*pt-ue))+A*At;for(let ze=0;ze<St;++ze)ce+=x[Bn+(At*St+ze)]*$[Ze+ze]}}m[g*Ct+y*Ft+b*Gt+At]=ce}}return e.makeTensorInfo(f.shape,f.dtype,f.values)}},rE={kernelName:Qo,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e}=n,{x:r}=t,s=nt(r.shape),a=e.data.get(r.dataId).values,i=we([s,s],r.dtype),o=i.values;for(let c=0;c<a.length;c++)o[c*s+c]=a[c];const u=[...r.shape,...r.shape];return e.makeTensorInfo(u,i.dtype,i.values)}},sE={kernelName:T,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:r,filter:s}=n,{strides:a,pad:i,dilations:o}=e,u=t,c=u.data.get(r.dataId).values,l=r.shape.length,h=u.data.get(s.dataId).values,p=s.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:k,filterHeight:N,filterWidth:$,dilationHeight:C,dilationWidth:R,outShape:A}=_l(r.shape,s.shape,a,i,"NHWC",o),_=nt(A),z=A.length,V=hn(r.dtype,_);for(let X=0;X<d;++X)for(let J=0;J<y;++J){const Y=J*w-x.top;for(let et=0;et<b;++et){const rt=et*k-x.left;for(let at=0;at<g;++at){let dt=Number.MIN_SAFE_INTEGER;for(let pt=0;pt<N;++pt){const ft=Y+pt*C;if(ft>=0&&ft<f)for(let gt=0;gt<$;++gt){const St=rt+gt*R;if(St>=0&&St<m){const Ct=wr([X,ft,St,at],l,jt(r.shape)),At=wr([pt,gt,at],p,jt(s.shape)),Ft=c[Ct]+h[At];Ft>dt&&(dt=Ft)}}}V[wr([X,J,et,at],z,jt(A))]=dt}}}return{dataId:u.write(Ga(V,r.dtype),A,r.dtype),shape:A,dtype:r.dtype}}},aE={kernelName:D,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:r,filter:s,dy:a}=n,{strides:i,pad:o,dilations:u}=e,c=t,l=Wn(r.shape,c.data.get(r.dataId).values),h=Wn(s.shape,c.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:k,filterWidth:N,dilationHeight:$,dilationWidth:C,outShape:R}=_l(r.shape,s.shape,i,o,"NHWC",u);I(a.rank===R.length,()=>`Error in ${D}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);const A=Wn(R,c.data.get(a.dataId).values),_=Bo(s.shape,s.dtype);for(let z=0;z<p;++z)for(let V=0;V<g;++V){const X=V*x-b.top;for(let J=0;J<y;++J){const Y=J*w-b.left;for(let et=0;et<m;++et){let rt=Number.MIN_SAFE_INTEGER,at=0,dt=0;for(let pt=0;pt<k;++pt){const ft=X+pt*$;if(ft>=0&&ft<d)for(let gt=0;gt<N;++gt){const St=Y+gt*C;if(St>=0&&St<f){const Ct=l[z][ft][St][et]+h[pt][gt][et];Ct>rt&&(rt=Ct,at=pt,dt=gt)}}}_[at][dt][et]+=A[z][V][J][et]}}}return{dataId:c.write(Ga(_,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},iE={kernelName:F,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:r,filter:s,dy:a}=n,{strides:i,pad:o,dilations:u}=e,c=t,l=Wn(r.shape,c.data.get(r.dataId).values),h=Wn(s.shape,c.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:k,filterWidth:N,dilationHeight:$,dilationWidth:C,outShape:R}=_l(r.shape,s.shape,i,o,"NHWC",u);I(a.rank===R.length,()=>`Error in ${F}, dy must have the same rank as output ${R.length}, but got ${a.rank}`);const A=Wn(R,c.data.get(a.dataId).values),_=Bo(r.shape,r.dtype);for(let z=0;z<p;++z)for(let V=0;V<g;++V){const X=V*x-b.top;for(let J=0;J<y;++J){const Y=J*w-b.left;for(let et=0;et<m;++et){let rt=Number.MIN_SAFE_INTEGER,at=X<0?0:X,dt=Y<0?0:Y;for(let pt=0;pt<k;++pt){const ft=X+pt*$;if(ft>=0&&ft<d)for(let gt=0;gt<N;++gt){const St=Y+gt*C;if(St>=0&&St<f){const Ct=l[z][ft][St][et]+h[pt][gt][et];Ct>rt&&(rt=Ct,at=ft,dt=St)}}}_[z][at][dt][et]+=A[z][V][J][et]}}}return{dataId:c.write(Ga(_,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Pm=pn((n,t)=>n*t),oE=Om((n,t,e,r)=>({real:n*e-t*r,imag:n*r+t*e})),Wh=Cn(cl,Pm,oE),lE={kernelName:cl,backendName:"cpu",kernelFunc:Wh};function mu(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r;let o;Wt(s,"sum"),o="bool"===s.dtype?Na({inputs:{x:s},backend:e,attrs:{dtype:"int32"}}):ws({inputs:{x:s},backend:e});const u=o.shape.length,c=be(a,o.shape),l=tn(c,u);let h=c,p=o;null!=l&&(p=ar({inputs:{x:o},backend:e,attrs:{perm:l}}),h=an(h.length,u)),Dn("sum",h,p.shape.length);const[d,f]=Sn(p.shape,h);let m=Bh(e,d,ur(p.dtype,"int32"));const g=nt(f),y=e.data.get(m.dataId).values,b=e.data.get(p.dataId).values;for(let x=0;x<y.length;++x){const w=x*g;let k=0;for(let N=0;N<g;++N)k+=b[w+N];y[x]=k}if(i){const x=m;m=Ue({inputs:{x:m},backend:e,attrs:{shape:sn(m.shape,c)}}),e.disposeIntermediateTensorInfo(x)}return e.disposeIntermediateTensorInfo(o),null!=l&&e.disposeIntermediateTensorInfo(p),m}const uE={kernelName:mc,backendName:"cpu",kernelFunc:mu},cE={kernelName:G,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:u}=Af(s,a.length);Df(i.length,u,a);const{path:c,steps:l}=_f(o,u),h=l.length;let p=null,d=i.length;const f=[];for(let m=0;m<h;++m){for(const g of l[m]){const{permutationIndices:y,expandDims:b}=Ff(d,u[g]);let x;Of(y)?x=a[g]:(x=ar({inputs:{x:a[g]},backend:e,attrs:{perm:y}}),f.push(x));const w=x.shape.slice();for(let k=0;k<b.length;++k)w.splice(b[k],0,1);he(x.shape,w)||(x=Ue({inputs:{x},backend:e,attrs:{shape:w}}),f.push(x)),null===p?p=x:(p=Wh({inputs:{a:x,b:p},backend:e}),f.push(p))}m<h-1&&(c[m]>=0&&(p=mu({inputs:{x:p},backend:e,attrs:{axis:c[m]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const m of f)m!==p&&e.disposeIntermediateTensorInfo(m);return p}},hE={kernelName:ht,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e}=n,{dy:r,y:s}=t;Wt([r,s],"eluGrad");const a=new Float32Array(nt(s.shape)),i=e.data.get(s.dataId).values,o=e.data.get(r.dataId).values;for(let u=0;u<i.length;++u){const c=i[u];a[u]=c>=1?o[u]:o[u]*(c+1)}return e.makeTensorInfo(s.shape,"float32",a)}},Sw=pn((n,t)=>n===t?1:0),Tw=Cn(It,Sw,null,"bool"),pE={kernelName:It,backendName:"cpu",kernelFunc:Tw},dE=If,fE=Nf,mE=Sf,gE=Tf,yE=Cf,bE=$f,xE=Le(xt,n=>{const t=Math.sign(n),e=Math.abs(n),r=1/(1+dE*e);return t*(1-((((bE*r+yE)*r+gE)*r+mE)*r+fE)*r*Math.exp(-e*e))}),wE={kernelName:xt,backendName:"cpu",kernelFunc:xE},Cw=Ia(n=>Math.exp(n)),$w=yo(Tt,Cw,"float32"),vE={kernelName:Tt,backendName:"cpu",kernelFunc:$w};function Vh(n){const{inputs:t,backend:e,attrs:r}=n,{input:s}=t,{dim:a}=r,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(I(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+a+1),o.splice(u,0,1),Ue({inputs:{x:s},backend:e,attrs:{shape:o}})}const kE={kernelName:Lt,backendName:"cpu",kernelFunc:Vh},Ew=Ia(n=>Math.expm1(n)),IE=yo(qt,Ew),NE={kernelName:qt,backendName:"cpu",kernelFunc:IE},SE=pn((n,t)=>n/t),Bm=Cn(j,SE),Wm={kernelName:j,backendName:"cpu",kernelFunc:Bm},Rw=pn((n,t)=>n-t),TE=Om((n,t,e,r)=>({real:n-e,imag:t-r})),Vm=Cn(Sl,Rw,TE),CE={kernelName:Sl,backendName:"cpu",kernelFunc:Vm};function Aw(n,t,e){const r=n.shape,s=r[0],a=r[1],i=e.data.get(n.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,c=[s,a],l=nt(c),h=cn("float32",l),p=cn("float32",l);for(let g=0;g<s;g++){const y=ci({inputs:{x:o},backend:e,attrs:{begin:[g,0],size:[1,a]}}),b=ci({inputs:{x:u},backend:e,attrs:{begin:[g,0],size:[1,a]}}),x=gr({inputs:{real:y,imag:b},backend:e}),{real:w,imag:k}=$E(x,t,e),N=Fs(w,k);for(let $=0;$<a;$++){const C=Ef(N,$);h[g*a+$]=C.real,p[g*a+$]=C.imag}e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(x)}const d=e.makeTensorInfo(c,"float32",h),f=e.makeTensorInfo(c,"float32",p),m=gr({inputs:{real:d,imag:f},backend:e});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),m}function $E(n,t,e){const r=nt(n.shape),s=e.data.get(n.dataId),a=e.data.get(s.complexTensorInfos.real.dataId).values,i=e.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const u=Um(a,i,r,t,e),c=[n.shape[0],n.shape[1]];if(t){const l=e.makeTensorInfo(c,"float32",u.real),h=e.makeTensorInfo(c,"float32",u.imag),p=e.makeTensorInfo([],"float32",Js(r,"float32")),d=ws({inputs:{x:p},backend:e}),f=Wm.kernelFunc({inputs:{a:l,b:p},backend:e}),m=Wm.kernelFunc({inputs:{a:h,b:d},backend:e}),g=e.data.get(f.dataId).values,y=e.data.get(m.dataId).values;return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),{real:g,imag:y}}return u}return By(function(c,l,h){const p=new Float32Array(2*l);for(let d=0;d<l;d++){let f=0,m=0;for(let g=0;g<l;g++){const y=Hy(d*g,l,h),b=Ef(c,g);f+=b.real*y.real-b.imag*y.imag,m+=b.real*y.imag+b.imag*y.real}h&&(f/=l,m/=l),Uy(p,f,m,d)}return p}(Fs(a,i),r,t));var o}function Um(n,t,e,r,s){if(1===e)return{real:n,imag:t};const a=Fs(n,t),i=e/2,o=Wy(a),u=o.real,c=o.imag,l=[u.length],h=s.makeTensorInfo(l,"float32",u),p=s.makeTensorInfo(l,"float32",c),d=gr({inputs:{real:h,imag:p},backend:s}),f=Vy(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",g),w=gr({inputs:{real:b,imag:x},backend:s}),k=Um(u,c,i,r,s),N=k.real,$=k.imag,C=[N.length],R=s.makeTensorInfo(C,"float32",N),A=s.makeTensorInfo(C,"float32",$),_=gr({inputs:{real:R,imag:A},backend:s}),z=Um(m,g,i,r,s),V=z.real,X=z.imag,J=[V.length],Y=s.makeTensorInfo(J,"float32",V),et=s.makeTensorInfo(J,"float32",X),rt=gr({inputs:{real:Y,imag:et},backend:s}),at=Gy(e,r),dt=[at.real.length],pt=s.makeTensorInfo(dt,"float32",at.real),ft=s.makeTensorInfo(dt,"float32",at.imag),gt=gr({inputs:{real:pt,imag:ft},backend:s}),St=Wh({inputs:{a:gt,b:rt},backend:s}),Ct=bo({inputs:{a:_,b:St},backend:s}),At=Vm({inputs:{a:_,b:St},backend:s}),Ft=ui({inputs:{input:Ct},backend:s}),Jt=ui({inputs:{input:At},backend:s}),Zt=xo({inputs:{input:Ct},backend:s}),re=xo({inputs:{input:At},backend:s}),Gt=wo({inputs:[Ft,Jt],backend:s,attrs:{axis:0}}),ue=wo({inputs:[Zt,re],backend:s,attrs:{axis:0}}),se=s.data.get(Gt.dataId).values,pe=s.data.get(ue.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(R),s.disposeIntermediateTensorInfo(A),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(Y),s.disposeIntermediateTensorInfo(et),s.disposeIntermediateTensorInfo(rt),s.disposeIntermediateTensorInfo(pt),s.disposeIntermediateTensorInfo(ft),s.disposeIntermediateTensorInfo(gt),s.disposeIntermediateTensorInfo(St),s.disposeIntermediateTensorInfo(Ct),s.disposeIntermediateTensorInfo(At),s.disposeIntermediateTensorInfo(Ft),s.disposeIntermediateTensorInfo(Zt),s.disposeIntermediateTensorInfo(Jt),s.disposeIntermediateTensorInfo(re),s.disposeIntermediateTensorInfo(Gt),s.disposeIntermediateTensorInfo(ue),{real:se,imag:pe}}const EE={kernelName:"FFT",backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e}=n,{input:r}=t,s=nt(r.shape),a=r.shape[r.shape.length-1],i=Ue({inputs:{x:r},backend:e,attrs:{shape:[s/a,a]}}),o=Aw(i,!1,e),u=Ue({inputs:{x:o},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(o),u}};function Gm(n){const{backend:t,attrs:e}=n,{shape:r,value:s,dtype:a}=e,i=a||Ra(s),o=hn(i,nt(r));return o.fill(s),t.makeTensorInfo(r,i,o)}const RE={kernelName:_e,backendName:"cpu",kernelFunc:Gm},AE={kernelName:Oe,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{image:r}=n,s=e,a=cn(r.dtype,nt(r.shape)),[i,o,u,c]=r.shape,l=s.data.get(r.dataId).values;for(let h=0;h<i;h++){const p=h*u*o*c;for(let d=0;d<o;d++){const f=d*(u*c);for(let m=0;m<u;m++){const g=m*c;for(let y=0;y<c;y++){const b=Math.round(u-m-1),x=p+f+g+y;let w=l[x];b>=0&&b<u&&(w=l[p+f+b*c+y]),a[x]=w}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Fw=Ia(n=>Math.floor(n)),FE=yo(He,Fw),DE={kernelName:He,backendName:"cpu",kernelFunc:FE},_E=pn((n,t)=>Math.floor(n/t)),OE=Cn(Qn,_E,null,"int32"),ME={kernelName:Qn,backendName:"cpu",kernelFunc:OE},LE={kernelName:Ic,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=Iw({inputs:{x:s,filter:a},backend:e,attrs:{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:p}});if(i){const g=m;if("NCHW"===l&&1===i.shape.length&&1!==i.shape[0]){const y=Ue({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});m=bo({inputs:{a:m,b:y},backend:e}),e.disposeIntermediateTensorInfo(y)}else m=bo({inputs:{a:m,b:i},backend:e});e.disposeIntermediateTensorInfo(g)}if(d){const g=m;if("NCHW"===l&&"prelu"===d&&1===o.shape.length&&1!==o.shape[0]){const y=Ue({inputs:{x:o},backend:e,attrs:{shape:[o.shape[0],1,1]}});m=Ph(e,m,d,y,f),e.disposeIntermediateTensorInfo(y)}else m=Ph(e,m,d,o,f);e.disposeIntermediateTensorInfo(g)}return m}},zE={kernelName:Nc,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=Nw({inputs:{x:s,filter:a},backend:e,attrs:{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:p}});if(i){const g=m;m=bo({inputs:{a:m,b:i},backend:e}),e.disposeIntermediateTensorInfo(g)}if(d){const g=m;m=Ph(e,m,d,o,f),e.disposeIntermediateTensorInfo(g)}return m}};function Dw(n,t,e,r,s,a,i,o,u){const c=we([r,a],e);for(let l=0;l<r;l++){const h=[];let p=0;for(let d=0;d<s;d++){const f=n[l*s+d];p+=f*i[d],h.push(f)}if(p<0||p>=u/a)throw new Error(`Invalid indices: ${h} does not index into ${o}`);for(let d=0;d<a;d++)c.values[l*a+d]=t.get(...t.indexToLoc(p*a+d))}return c}const PE={kernelName:tl,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e}=n,{params:r,indices:s}=t,a=nt(r.shape),i=s.shape,o=i[i.length-1],[u,c,l,h]=kf(r,s);if(0===c)return e.makeTensorInfo(u,r.dtype,[]);const p=Dw(e.data.get(s.dataId).values,e.bufferSync(r),r.dtype,c,o,l,h,r.shape,a);return e.makeTensorInfo(u,r.dtype,p.values)}};function _w(n,t,e){const r=we(e,n.dtype);for(let s=0;s<r.size;++s){const a=r.indexToLoc(s).slice(),u=t.locToIndex([a[0],a[2]]);a[2]=t.values[u];const c=n.locToIndex(a);0<=c&&c<n.values.length&&(r.values[s]=n.values[c])}return r}const BE={kernelName:Xs,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,indices:a}=t,{axis:i,batchDims:o}=r;Wt([s,a],"gatherV2");const u=be(i,s.shape)[0],c=e.data.get(a.dataId).values,l=s.shape[u];for(let x=0;x<c.length;++x){const w=c[x];I(w<=l-1&&w>=0,()=>`GatherV2: the index value ${w} is not in [0, ${l-1}]`)}let h=o;null==o&&(h=0);const p=nt(a.shape),d=Lf(s,a,u,h),f=Ue({inputs:{x:s},backend:e,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=Ue({inputs:{x:a},backend:e,attrs:{shape:[d.batchSize,p/d.batchSize]}}),g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],y=e.bufferSync(m),b=_w(e.bufferSync(f),y,g);return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),e.makeTensorInfo(d.outputShape,b.dtype,b.values)}},Ow=pn((n,t)=>n>t?1:0),WE=Cn(Hi,Ow,null,"bool"),VE={kernelName:Hi,backendName:"cpu",kernelFunc:WE},Mw=pn((n,t)=>n>=t?1:0),UE=Cn(Ys,Mw,null,"bool"),GE={kernelName:Ys,backendName:"cpu",kernelFunc:UE},HE={kernelName:gp,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e}=n,{input:r}=t,s=nt(r.shape),a=r.shape[r.shape.length-1],i=Ue({inputs:{x:r},backend:e,attrs:{shape:[s/a,a]}}),o=Aw(i,!0,e),u=Ue({inputs:{x:o},backend:e,attrs:{shape:r.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(o),u}},jE=Le(nl,n=>Number.isFinite(n)?1:0,"bool"),qE={kernelName:nl,backendName:"cpu",kernelFunc:jE},KE=Le(rl,n=>Math.abs(n)===1/0?1:0,"bool"),XE={kernelName:rl,backendName:"cpu",kernelFunc:KE},YE=Le(sl,n=>Number.isNaN(n)?1:0,"bool"),ZE={kernelName:sl,backendName:"cpu",kernelFunc:YE},Lw=pn((n,t)=>n<t?1:0),JE=Cn(Uu,Lw,null,"bool"),QE={kernelName:Uu,backendName:"cpu",kernelFunc:JE},zw=pn((n,t)=>n<=t?1:0),t3=Cn(Gu,zw,null,"bool"),e3={kernelName:Gu,backendName:"cpu",kernelFunc:t3};function Pw(n,t,e){const r=(t-n)/(e-1),s=dn(e,"float32");s[0]=n;for(let a=1;a<s.length;a++)s[a]=s[a-1]+r;return s}const n3={kernelName:bp,backendName:"cpu",kernelFunc:function(n){const{backend:t,attrs:e}=n,{start:r,stop:s,num:a}=e,i=Pw(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},Bw=Ia(n=>Math.log(n)),r3=yo(al,Bw),s3={kernelName:al,backendName:"cpu",kernelFunc:r3},a3=Le(il,n=>Math.log1p(n)),i3={kernelName:il,backendName:"cpu",kernelFunc:a3},o3=pn((n,t)=>n&&t),l3=Cn(Hu,o3,null,"bool"),u3={kernelName:Hu,backendName:"cpu",kernelFunc:l3},c3=Le(ju,n=>n?0:1,"bool"),h3={kernelName:ju,backendName:"cpu",kernelFunc:c3},p3=pn((n,t)=>n||t),d3=Cn(qu,p3,null,"bool"),f3={kernelName:qu,backendName:"cpu",kernelFunc:d3},m3={kernelName:Ku,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=r;Wt(s,"LRN");const c=s.shape[3],l=c-1,h=e.data.get(s.dataId).values,p=nt(s.shape),d=new Float32Array(p);function f(m){const g=m%c;let y=m-g+Math.max(0,g-a);const b=m-g+Math.min(g+a,l);let x=0;for(;y<=b;y++){const w=h[y];x+=w*w}return x}for(let m=0;m<p;m++){const g=f(m),y=h[m]*Math.pow(i+o*g,-u);d[m]=y}return e.makeTensorInfo(s.shape,s.dtype,d)}},g3={kernelName:xp,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:c,beta:l}=r;Wt(i,"LRNGrad");const h=nt(i.shape),p=i.shape[3],d=e.data.get(i.dataId).values,f=e.data.get(s.dataId).values,m=e.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let b=0;b<y;b++){const x=b%p,w=b-x+Math.max(0,x-o),k=b-x+Math.min(p,x+o+1);let N=0;for(let $=w;$<k;$++)N+=Math.pow(f[$],2);N=c*N+u;for(let $=w;$<k;$++){let C=-2*c*l*f[$]*m[b]/N;b===$&&(C+=Math.pow(N,-l)),C*=d[b],g[$]+=C}}return e.makeTensorInfo(i.shape,s.dtype,g)}};function Ww(n,t,e,r){const s=cn(r,nt(e));for(let a=0;a<s.length;++a){const i=a*t;let o=n[i];for(let u=0;u<t;++u){const c=n[i+u];(Number.isNaN(c)||c>o)&&(o=c)}s[a]=o}return s}function Vw(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=e;let u=s.shape;const c=u.length,l=be(a,u);let h=l;const p=tn(h,c);let d=o.data.get(s.dataId).values;if(null!=p){const x=new Array(c);for(let w=0;w<x.length;w++)x[w]=u[p[w]];d=Mm(d,u,s.dtype,p,x),h=an(h.length,c),u=x}Wt(s,"max"),Dn("max",h,c);const[f,m]=Sn(u,h),g=Ww(d,nt(m),f,s.dtype),y=o.write(g,f,s.dtype);let b=f;return i&&(b=sn(f,l)),{dataId:y,shape:b,dtype:s.dtype}}const y3={kernelName:Xu,backendName:"cpu",kernelFunc:Vw},Uw=pn((n,t)=>Math.max(n,t)),b3=Cn(ol,Uw),x3={kernelName:ol,backendName:"cpu",kernelFunc:b3},w3={kernelName:Yu,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t;Wt(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;I(Fn(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=Dr(s.shape,a,i,1,o,u);let l;if(1===c.filterWidth&&1===c.filterHeight&&he(c.inShape,c.outShape))l=ws({inputs:{x:s},backend:e});else{const h=e.data.get(s.dataId).values,p=jt(s.shape),d=Lm(h,0,s.dtype,p,c,"max");l=e.makeTensorInfo(c.outShape,s.dtype,d.values)}return l}},v3={kernelName:Zu,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:c}=r;Wt(s,"maxPool3d");const l=Cs(s.shape,a,i,1,o,u,c),h=bw(e.data.get(s.dataId).values,0,s.dtype,jt(s.shape),l,"max");return e.makeTensorInfo(h.shape,"float32",h.values)}},k3={kernelName:vp,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=r;Wt([s,a],"maxPool3DGrad");const l=Cs(a.shape,i,o,1,u,c),h=function(A,_){const z=we(_.outShape,"int32"),V=_.strideDepth,X=_.strideHeight,J=_.strideWidth,Y=_.dilationDepth,et=_.dilationHeight,rt=_.dilationWidth,at=_.effectiveFilterDepth,dt=_.effectiveFilterHeight,pt=_.effectiveFilterWidth,ft=_.padInfo.front,gt=_.padInfo.top,St=_.padInfo.left;for(let Ct=0;Ct<_.batchSize;++Ct)for(let At=0;At<_.inChannels;++At)for(let Ft=0;Ft<_.outDepth;++Ft){const Jt=Ft*V-ft;let Zt=Jt;for(;Zt<0;)Zt+=Y;const re=Math.min(_.inDepth,at+Jt);for(let Gt=0;Gt<_.outHeight;++Gt){const ue=Gt*X-gt;let se=ue;for(;se<0;)se+=et;const pe=Math.min(_.inHeight,dt+ue);for(let ce=0;ce<_.outWidth;++ce){const ye=ce*J-St;let Ce=ye;for(;Ce<0;)Ce+=rt;const un=Math.min(_.inWidth,pt+ye);let Bn=Number.NEGATIVE_INFINITY,Ze=-1;for(let ze=Zt;ze<re;ze+=Y){const br=ze-Jt;for(let Ln=se;Ln<pe;Ln+=et){const os=Ln-ue;for(let ls=Ce;ls<un;ls+=rt){const $a=ls-ye,Ws=A.get(Ct,ze,Ln,ls,At);Ws>=Bn&&(Bn=Ws,Ze=br*dt*pt+os*dt+$a)}}}z.set(Ze,Ct,Ft,Gt,ce,At)}}}return z}(e.bufferSync(a),l),p=l.strideDepth,d=l.strideHeight,f=l.strideWidth,m=l.dilationDepth,g=l.dilationHeight,y=l.dilationWidth,b=l.effectiveFilterDepth,x=l.effectiveFilterHeight,w=l.effectiveFilterWidth,k=b-1-l.padInfo.front,N=w-1-l.padInfo.left,$=x-1-l.padInfo.top,C=we(a.shape,"float32"),R=e.bufferSync(s);for(let A=0;A<l.batchSize;++A)for(let _=0;_<l.inChannels;++_)for(let z=0;z<l.inDepth;++z)for(let V=0;V<l.inHeight;++V)for(let X=0;X<l.inWidth;++X){const J=z-k,Y=V-$,et=X-N;let rt=0;for(let at=0;at<b;at+=m){const dt=(J+at)/p;if(!(dt<0||dt>=l.outDepth||Math.floor(dt)!==dt))for(let pt=0;pt<x;pt+=g){const ft=(Y+pt)/d;if(!(ft<0||ft>=l.outHeight||Math.floor(ft)!==ft))for(let gt=0;gt<w;gt+=y){const St=(et+gt)/f;if(St<0||St>=l.outWidth||Math.floor(St)!==St)continue;const Ct=b*x*w-1-h.get(A,dt,ft,St,_)===at*x*w+pt*w+gt?1:0;0!==Ct&&(rt+=R.get(A,dt,ft,St,_)*Ct)}}}C.set(rt,A,z,V,X,_)}return e.makeTensorInfo(C.shape,C.dtype,C.values)}},I3={kernelName:wp,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a,output:i}=t,o=a;Wt([a,i],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:h}=r,p=Dr(o.shape,u,c,1,l,h),d=e.data.get(o.dataId).values,f=we(p.outShape,o.dtype,yw(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,k=w-1-p.padInfo.left,N=x-1-p.padInfo.top,$=we(o.shape,"float32"),C=e.data.get(s.dataId).values,R=we(s.shape,"float32",C);for(let A=0;A<p.batchSize;++A)for(let _=0;_<p.inChannels;++_)for(let z=0;z<p.inHeight;++z)for(let V=0;V<p.inWidth;++V){const X=z-N,J=V-k;let Y=0;for(let et=0;et<x;et+=y){const rt=(X+et)/m;if(!(rt<0||rt>=p.outHeight||Math.floor(rt)!==rt))for(let at=0;at<w;at+=b){const dt=(J+at)/g;if(dt<0||dt>=p.outWidth||Math.floor(dt)!==dt)continue;const pt=x*w-1-f.get(A,rt,dt,_)===et*w+at?1:0;0!==pt&&(Y+=R.get(A,rt,dt,_)*pt)}}$.set(Y,A,z,V,_)}return e.makeTensorInfo($.shape,$.dtype,$.values)}},N3={kernelName:kp,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:r}=n,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,u=e;Wt(r,"MaxPoolWithArgmax");const c=u.data.get(r.dataId).values,l=Dr(r.shape,s,a,[1,1],i),[h,p]=function(m,g,y,b,x){const w=Lm(m,0,y,jt(g),x,"max"),k=yw(m,g,y,x,!0,b);return[w.values,k.values]}(c,r.shape,r.dtype,o,l),d=u.write(h,l.outShape,r.dtype),f=u.write(p,l.outShape,r.dtype);return[{dataId:d,shape:l.outShape,dtype:r.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}},S3={kernelName:Ju,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r,o=be(a,s.shape),u=nt(Sn(s.shape,o)[1]),c=[],l=e.makeTensorInfo([],"float32",new Float32Array([u]));c.push(l);const h=Na({inputs:{x:s},backend:e,attrs:{dtype:"float32"}});c.push(h);const p=Bm({inputs:{a:h,b:l},backend:e});c.push(p);const d=mu({inputs:{x:p},backend:e,attrs:{axis:a,keepDims:i}});return c.forEach(f=>e.disposeIntermediateTensorInfo(f)),d}},T3={kernelName:Qu,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r;Wt(s,"min");const o=be(a,s.shape);let u=o;const c=tn(u,s.shape.length);let l=s;null!=c&&(l=ar({inputs:{x:s},backend:e,attrs:{perm:c}}),u=an(u.length,s.shape.length)),Dn("min",u,l.shape.length);const[h,p]=Sn(l.shape,u),d=nt(p),f=dn(nt(h),l.dtype),m=e.data.get(l.dataId).values;for(let y=0;y<f.length;++y){const b=y*d;let x=m[b];for(let w=0;w<d;++w){const k=m[b+w];(Number.isNaN(k)||k<x)&&(x=k)}f[y]=x}null!=c&&e.disposeIntermediateTensorInfo(l);const g=e.makeTensorInfo(h,l.dtype,f);if(i){const y=Ue({inputs:{x:g},backend:e,attrs:{shape:sn(h,o)}});return e.disposeIntermediateTensorInfo(g),y}return g}},Gw=pn((n,t)=>Math.min(n,t)),C3=Cn(ll,Gw),$3={kernelName:ll,backendName:"cpu",kernelFunc:C3},E3={kernelName:tc,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{paddings:a,mode:i}=r;Wt(s,"mirrorPad");const o=a.map((b,x)=>b[0]+s.shape[x]+b[1]),u=a.map(b=>b[0]),c=a.map((b,x)=>b[0]+s.shape[x]),l="reflect"===i?0:1,h=e.data.get(s.dataId).values,p=s.shape.length,d=jt(s.shape),f=nt(o),m=o.length,g=jt(o),y=cn(s.dtype,f);for(let b=0;b<f;b++){let x=ks(b,m,g);for(let k=0;k<m;k++)x[k]<u[k]?x[k]=2*u[k]-x[k]-l:x[k]>=c[k]&&(x[k]=2*(c[k]-1)-x[k]+l);x=x.map((k,N)=>k-u[N]);const w=wr(x,p,d);y[b]=h[w]}return{dataId:e.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},R3=pn((n,t)=>{const e=n%t;return n<0&&t<0||n>=0&&t>=0?e:(e+t)%t}),A3=Cn(ul,R3),F3={kernelName:ul,backendName:"cpu",kernelFunc:A3};function Hw(n){const{inputs:t,backend:e,attrs:r}=n,{logits:s}=t,{dim:a}=r,i=s.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=be([o],s.shape),c=Vw({inputs:{x:s},backend:e,attrs:{reductionIndices:u,keepDims:!1}}),l=sn(c.shape,u),h=Ue({inputs:{x:c},backend:e,attrs:{shape:l}}),p=Vm({inputs:{a:s,b:h},backend:e}),d=$w({inputs:{x:p},backend:e}),f=mu({inputs:{x:d},backend:e,attrs:{axis:u,keepDims:!1}}),m=Ue({inputs:{x:f},backend:e,attrs:{shape:l}}),g=Bm({inputs:{a:d,b:m},backend:e});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),g}const D3={kernelName:bc,backendName:"cpu",kernelFunc:Hw},_3={kernelName:Ip,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r;Wt(s,"multinomial");const u=o?s:Hw({inputs:{logits:s},backend:e,attrs:{dim:-1}}),c=u.shape[0],l=u.shape[1],h=e.data.get(u.dataId).values,p=[c,a],d=dn(nt(p),"int32");for(let f=0;f<c;++f){const m=f*l,g=new Float32Array(l-1);g[0]=h[m];for(let x=1;x<g.length;++x)g[x]=g[x-1]+h[m+x];const y=io.alea(i.toString()),b=f*a;for(let x=0;x<a;++x){const w=y();d[b+x]=g.length;for(let k=0;k<g.length;k++)if(w<g[k]){d[b+x]=k;break}}}return o||e.disposeIntermediateTensorInfo(u),e.makeTensorInfo(p,"int32",d)}};function jw(n,t,e){const r=Js(-1,e);return Pm([],t,r,n,e)}const O3={kernelName:ec,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e}=n,{x:r}=t;Wt(r,"neg");const s=e.data.get(r.dataId).values,[a,i]=jw(s,r.shape,r.dtype);return e.makeTensorInfo(i,r.dtype,a)}},M3=of,L3={kernelName:Np,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;Wt(s,"NonMaxSuppression");const c=e.data.get(s.dataId).values,l=e.data.get(a.dataId).values,{selectedIndices:h}=M3(c,l,i,o,u);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}},z3=lf,P3={kernelName:Sp,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:c}=r;Wt(s,"NonMaxSuppressionPadded");const l=e.data.get(s.dataId).values,h=e.data.get(a.dataId).values,{selectedIndices:p,validOutputs:d}=z3(l,h,i,o,u,c);return[e.makeTensorInfo([p.length],"int32",new Int32Array(p)),e.makeTensorInfo([],"int32",new Int32Array([d]))]}},B3=uf,W3={kernelName:Tp,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:c}=r;Wt(s,"NonMaxSuppressionWithScore");const l=e.data.get(s.dataId).values,h=e.data.get(a.dataId).values,p=i,d=o,f=u,m=c,{selectedIndices:g,selectedScores:y}=B3(l,h,p,d,f,m);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},qw=pn((n,t)=>n!==t?1:0),V3=Cn(nc,qw,null,"bool"),U3={kernelName:nc,backendName:"cpu",kernelFunc:V3},G3={kernelName:sc,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:u}=r;Wt(s,"oneHot");const c=nt(s.shape),l=new Float32Array(c*i);l.fill(u);const h=e.data.get(s.dataId).values;for(let p=0;p<c;++p)h[p]>=0&&h[p]<i&&(l[p*i+h[p]]=o);return e.makeTensorInfo([...s.shape,i],a,l)}};function Uh(n){const{inputs:t,backend:e}=n,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const s=ui({inputs:{input:r},backend:e}),a=Uh({inputs:{x:s},backend:e}),i=xo({inputs:{input:r},backend:e}),o=Uh({inputs:{x:i},backend:e}),u=gr({inputs:{real:a,imag:o},backend:e});return e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(o),u}return Gm({backend:e,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const H3={kernelName:vc,backendName:"cpu",kernelFunc:Uh},j3={kernelName:rc,backendName:"cpu",kernelFunc:function n(t){const{inputs:e,backend:r}=t,{x:s}=e;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const a=ui({inputs:{input:s},backend:r}),i=n({inputs:{x:a},backend:r}),o=xo({inputs:{input:s},backend:r}),u=Uh({inputs:{x:o},backend:r}),c=gr({inputs:{real:i,imag:u},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(u),c}return Gm({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function Kw(n){const{inputs:t,backend:e,attrs:r}=n,{axis:s}=r;if(1===t.length)return Vh({inputs:{input:t[0]},backend:e,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach(c=>{Ae(a,c.shape,"All tensors passed to stack must have matching shapes"),I(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],u=wo({inputs:t.map(c=>{const l=Vh({inputs:{input:c},backend:e,attrs:{dim:s}});return o.push(l),l}),backend:e,attrs:{axis:s}});return o.forEach(c=>e.disposeIntermediateTensorInfo(c)),u}const q3={kernelName:ac,backendName:"cpu",kernelFunc:Kw},Xw={kernelName:ic,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{paddings:a,constantValue:i}=r;Wt(s,"pad");const o=a.map((y,b)=>y[0]+s.shape[b]+y[1]),u=a.map(y=>y[0]),c=e.data.get(s.dataId).values,l=nt(s.shape),h=s.shape.length,p=jt(s.shape),d=nt(o),f=o.length,m=jt(o),g=cn(s.dtype,d);0!==i&&g.fill(i);for(let y=0;y<l;y++)g[wr(ks(y,h,p).map((b,x)=>b+u[x]),f,m)]=c[y];return{dataId:e.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},K3=pn((n,t)=>Math.pow(n,t)),X3=Cn(hl,K3),Y3={kernelName:hl,backendName:"cpu",kernelFunc:X3};function Yw(n,t,e,r){const[s,a]=Sn(n,r),i=ur(t,"int32"),o=dn(nt(s),i),u=nt(a);for(let c=0;c<o.length;++c){const l=c*u;let h=1;for(let p=0;p<u;++p)h*=e[l+p];o[c]=h}return{outVals:o,outShape:s,outDtype:i}}const Z3={kernelName:lc,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r;Wt(s,"prod");const o=s.shape.length,u=be(a,s.shape),c=tn(u,o);let l=u,h=s;const p=[];null!=c&&(h=ar({inputs:{x:s},backend:e,attrs:{perm:c}}),p.push(h),l=an(l.length,o));const d=e.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=Yw(h.shape,h.dtype,d,l);let y=m;return i&&(y=sn(m,u)),p.forEach(b=>e.disposeIntermediateTensorInfo(b)),e.makeTensorInfo(y,g,f)}};function Zw(n,t){const e=n.slice(0,t);for(;e.length<t;)e.push(1);for(let r=t;r<n.length;r++)e[t-1]*=n[r];return e}function Jw(n,t,e,r,s,a,i,o){if(0===n.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(m=i,g=t[0][0]-1,a.forEach((y,b)=>{if(y<0||y>=g){const x=ks(b,m.length,jt(m)).join(",");throw new Error(`indices[${x}] = ${y} is not in [0, ${g})`)}}),0===r.length)throw new Error("params.rank must be nonzero");var m,g;const u=r[0],{outSplits:c,valueSlices:l,numValues:h}=function J3(n,t,e,r){const s=[];let a=0;const o=new Array(t.length-1+e.length).fill(null).map(()=>[0]);!function(c,l){for(let h=0;h<c.length;++h){const p=c[h],d=h===c.length-1?l:c[h+1].length;if(0===p.length)throw new Error("Ragged splits may not be empty");if(p[0]<0)throw new Error("Ragged splits must be non-negative");if(p[p.length-1]>d)throw new Error("Ragged splits must not point past values");for(let f=1;f<p.length;++f)if(p[f-1]>p[f])throw new Error("Ragged splits must be sorted in ascending order")}}(e,r);let u=1;for(let c=0;c<t.length-1;++c){u*=t[c];const l=t[c+1];for(let h=1;h<u+1;++h)o[c].push(h*l)}for(let c=0;c<n.length;++c){let l=n[c],h=n[c]+1;for(let p=0;p<e.length;++p){const d=e[p],f=p+t.length-1;if(f>=0){const m=o[f],g=m[m.length-1]-d[l];for(let y=l;y<h;++y)o[f].push(d[y+1]+g)}l=d[l],h=d[h]}h!==l&&(s.push([l,h]),a+=h-l)}return{outSplits:o,valueSlices:s,numValues:a}}(a,i,n,u),p=function(f){const m=[];for(let g=0;g<f.length;++g){const y=hn("int32",f[g].length);m.push(y),f[g].forEach((b,x)=>y[x]=b)}return m}(c),d=function Q3(n,t,e,r,s){const a=t.slice();a[0]=s;const i=hn(e,nt(a)),o=n.length;return function(u,c,l,h,p,d){const f=Zw(c,2)[1],m=Zw(d,2)[1];let g=0;for(const y of l)for(let b=y[0];b<y[1];++b){for(let x=0;x<h;++x)p[g*m+x]=u[b*f+x];++g}}(n,t,r,0===o?0:o/t[0],i,a),[i,a]}(e,r,s,l,h);return[p,d[0],d[1]]}const tR={kernelName:Cp,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e}=n,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,u=s.map(y=>e.data.get(y.dataId).values),c=s.map(y=>y.shape),l=e.data.get(a.dataId).values,h=e.data.get(i.dataId).values,[p,d,f]=Jw(u,c,l,a.shape,a.dtype,h,i.shape),m=p.map(y=>e.makeTensorInfo([y.length],"int32",y)),g=e.makeTensorInfo(f,a.dtype,d);return m.concat([g])}};var Vr=ts;class Gh{constructor(t,e,r,s,a,i,o,u,c,l){this.shape=t,this.shapeShape=e,this.values=r,this.valuesShape=s,this.valuesDType=a,this.defaultValue=i,this.defaultValueShape=o,this.rowPartitionValues=u,this.rowPartitionValuesShapes=c,this.rowPartitionTypes=Ly(l),this.raggedRank=zy(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===Vr.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===Vr.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case Vr.VALUE_ROWIDS:return Gh.getMaxWidthValueRowID(e);case Vr.ROW_SPLITS:return Gh.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${Vr[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(0===e||1===e)return 0;let r=0;for(let s=0;s<e-1;++s){const a=t[s+1]-t[s];a>r&&(r=a)}return r}static getMaxWidthValueRowID(t){const e=t.length;if(0===e)return 0;let r=0,s=t[0],a=0;for(let i=1;i<e;++i){const o=t[i];o!==s&&(s=o,a=Math.max(i-r,a),r=i)}return Math.max(e-r,a)}tensorShapeFromTensor(t,e,r=!0){if(0===e.length){if(-1===t[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return tv(t,r)}calculateOutputSize(t){const e=this.valuesShape;Py(this.defaultValueShape,e);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=My(this.raggedRank,r,e);s[0]<0&&(s[0]=t);for(let a=1;a<=this.raggedRank;++a)s[a]<0&&(s[a]=this.getMaxWidth(a));return s}calculateFirstParentOutputIndex(t,e,r){const s=Math.min(t,r),a=[];let i=0;for(let o=0;o<s;++o,i+=e)a.push(i);for(let o=s;o<t;++o)a.push(-1);return I(a.length===t,()=>"Final length of result must be equal to firstDimension."),a}calculateOutputIndexRowSplit(t,e,r,s){const a=t.length,i=[];for(let o=0;o<a-1;++o){const u=t[o+1]-t[o];let c=Math.min(s,u),l=e[o];-1===l&&(c=0);for(let h=0;h<c;++h)i.push(l),l+=r;for(let h=0;h<u-c;++h)i.push(-1)}if(a>0&&i.length!==t[a-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(t,e,r,s){const a=t.length,i=[];if(0===a)return[];let o=0,u=t[0];if(u>=e.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${e.length}`);let c=e[u];i.push(c);for(let l=1;l<a;++l){const h=t[l];if(h===u)c>=0&&(++o,o<s?c+=r:c=-1);else{if(o=0,u=h,h>=e.length)throw new Error(`Got nextValueRowId=${h} which is not less than ${e.length}`);c=e[h]}i.push(c)}if(i.length!==t.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(t,e,r,s){const a=this.getRowPartitionTensor(t),i=this.getRowPartitionTypeByDimension(t);switch(i){case Vr.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,e,r,s);case Vr.ROW_SPLITS:if(a.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(a,e,r,s);default:throw new Error(`Unsupported partition type: ${Vr[i]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case Vr.FIRST_DIM_SIZE:return t[0];case Vr.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Vr.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Vr[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),e=this.calculateOutputSize(t),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let i=r.length-2;i>=0;--i)r[i]=r[i+1]*e[i+1];const s=tv(e,!1),a=hn(this.valuesDType,nt(s));if(r[0]*e[0]>0){let i=this.calculateFirstParentOutputIndex(t,r[0],e[0]);for(let o=1;o<=this.raggedRank;++o)i=this.calculateOutputIndex(o-1,i,r[o],e[o]);this.setOutput(this.raggedRank,i,a,s)}return[s,a]}setOutput(t,e,r,s){if(0===r.length)return;const a=this.values,i=r;let o=s.slice();o=o.slice(t+1);const u=nt(o),c=e.length;let l=this.defaultValue;if(l.length!==u&&1!==l.length){const f=this.defaultValueShape;K(()=>{const m=P(l,f);l=no(m,o).dataSync()})}let h=0,p=0,d=0;for(let f=0;f<=c;++f){let m=f<c?e[f]:-1;if(m!==d){if(p<d){const g=a.subarray(h*u);Qw(i.subarray(p*u),g,(d-p)*u)}if(f>=c&&(m=Math.floor(r.length/u)),m>d)if(1===this.defaultValue.length)i.subarray(d*u,m*u).fill(this.defaultValue[0]),d=m;else for(;m>d;)Qw(i.slice(d*u),l,u),++d;m<0?(h=f+1,p=d):(h=f,p=d,d=p+1)}else++d}}}function Qw(n,t,e){for(let r=0;r<e;r++)n[r]=t[r]}function tv(n,t){const e=[];for(let r of n){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}e.push(r)}return e}function ev(n,t,e,r,s,a,i,o,u,c){return new Gh(n,t,e,r,s,a,i,o,u,c).compute()}const eR={kernelName:$p,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,c=e.data.get(s.dataId).values,l=e.data.get(a.dataId).values,h=e.data.get(i.dataId).values,p=o.map(g=>e.data.get(g.dataId).values),d=o.map(g=>g.shape),[f,m]=ev(c,s.shape,l,a.shape,a.dtype,h,i.shape,p,d,u);return e.makeTensorInfo(f,a.dtype,m)}};function nv(n,t,e,r){if(n===t||n<t&&e<0||t<n&&e>1)return dn(0,r);const s=dn(Math.abs(Math.ceil((t-n)/e)),r);t<n&&1===e&&(e=-1),s[0]=n;for(let a=1;a<s.length;a++)s[a]=s[a-1]+e;return s}const nR={kernelName:Ep,backendName:"cpu",kernelFunc:function(n){const{backend:t,attrs:e}=n,{start:r,stop:s,dtype:a,step:i}=e,o=nv(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},rR=Le(pl,n=>1/n),sR={kernelName:pl,backendName:"cpu",kernelFunc:rR},aR={kernelName:hc,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;Wt(s,"resizeBilinear");const u=jt(s.shape),[c,l]=o,[h,p,d,f]=s.shape,m=e.data.get(s.dataId).values,g=new Float32Array(nt([h,c,l,f])),y=[a&&c>1?p-1:p,a&&l>1?d-1:d],b=[a&&c>1?c-1:c,a&&l>1?l-1:l];let x=0;const w=y[0]/b[0],k=y[1]/b[1];for(let N=0;N<h;N++)for(let $=0;$<c;$++){let C;C=i?w*($+.5)-.5:w*$;const R=Math.max(0,Math.floor(C)),A=C-R,_=Math.min(p-1,Math.ceil(C)),z=N*u[0]+R*u[1],V=N*u[0]+_*u[1];for(let X=0;X<l;X++){let J;J=i?k*(X+.5)-.5:k*X;const Y=Math.max(0,Math.floor(J)),et=J-Y,rt=Math.min(d-1,Math.ceil(J)),at=z+Y*u[2],dt=V+Y*u[2],pt=z+rt*u[2],ft=V+rt*u[2];for(let gt=0;gt<f;gt++){const St=m[at+gt],Ct=m[dt+gt],At=St+(m[pt+gt]-St)*et;g[x++]=At+(Ct+(m[ft+gt]-Ct)*et-At)*A}}}return e.makeTensorInfo([h,c,l,f],"float32",g)}},iR={kernelName:Fp,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{images:s,dy:a}=t,{alignCorners:i}=r;Wt([a,s],"resizeBilinearGrad");const o=jt(s.shape),[u,c,l,h]=s.shape,[,p,d]=a.shape,f=new Float32Array(u*c*l*h),m=[i&&p>1?c-1:c,i&&d>1?l-1:l],g=[i&&p>1?p-1:p,i&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=e.data.get(a.dataId).values;let w=0;for(let k=0;k<u;k++){const N=k*o[0];for(let $=0;$<p;$++){const C=$*y,R=Math.floor(C),A=Math.min(Math.ceil(C),c-1),_=N+R*o[1],z=N+A*o[1],V=C-R,X=1-V;for(let J=0;J<d;J++){const Y=J*b,et=Math.floor(Y),rt=Math.min(Math.ceil(Y),l-1),at=Y-et,dt=1-at,pt=_+et*o[2],ft=_+rt*o[2],gt=z+et*o[2],St=z+rt*o[2],Ct=X*dt,At=X*at,Ft=V*dt,Jt=V*at;for(let Zt=0;Zt<h;Zt++){const re=x[w++];f[pt+Zt]+=re*Ct,f[ft+Zt]+=re*At,f[gt+Zt]+=re*Ft,f[St+Zt]+=re*Jt}}}}return e.makeTensorInfo([u,l,c,h],"float32",f)}},oR={kernelName:cc,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;Wt(s,"resizeNearestNeighbor");const u=jt(s.shape),[c,l]=o,[h,p,d,f]=s.shape,m=e.data.get(s.dataId).values,g=new Float32Array(h*c*l*f),y=[a&&c>1?p-1:p,a&&l>1?d-1:d],b=[a&&c>1?c-1:c,a&&l>1?l-1:l],x=y[0]/b[0],w=y[1]/b[1];let k=0;for(let N=0;N<h;N++){const $=N*u[0];for(let C=0;C<c;C++){const R=i?x*(C+.5):x*C;let A=Math.min(p-1,a?Math.round(R):Math.floor(R));i&&(A=Math.max(0,A));const _=$+A*u[1];for(let z=0;z<l;z++){const V=i?w*(z+.5):w*z;let X=Math.min(d-1,a?Math.round(V):Math.floor(V));i&&(X=Math.max(0,X));const J=_+X*u[2];for(let Y=0;Y<f;Y++)g[k++]=m[J+Y]}}}return e.makeTensorInfo([h,c,l,f],s.dtype,g)}},lR={kernelName:Ap,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{images:s,dy:a}=t,{alignCorners:i}=r;Wt([a,s],"resizeNearestNeighborGrad");const o=jt(s.shape),u=jt(a.shape),[c,l,h,p]=s.shape,[,d,f]=a.shape,m=new Float32Array(c*l*h*p),g=e.data.get(a.dataId).values,y=[i&&d>1?l-1:l,i&&f>1?h-1:h],b=[i&&d>1?d-1:d,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],k=1/x,N=1/w,$=2*Math.ceil(k)+2,C=2*Math.ceil(N)+2;for(let R=0;R<c;R++){const A=R*o[0];for(let _=0;_<l;_++){const z=A+_*o[1],V=Math.floor(_*k),X=Math.floor(V-$/2);for(let J=0;J<h;J++){const Y=z+J*o[2],et=Math.floor(J*N),rt=Math.floor(et-C/2);for(let at=0;at<p;at++){let dt=0;for(let pt=0;pt<$;pt++){const ft=pt+X;if(ft<0||ft>=d)continue;const gt=A+ft*u[1],St=ft*x;if(_===Math.min(l-1,i?Math.round(St):Math.floor(St)))for(let Ct=0;Ct<C;Ct++){const At=Ct+rt;if(At<0||At>=f)continue;const Ft=gt+At*u[2],Jt=At*w;J===Math.min(h-1,i?Math.round(Jt):Math.floor(Jt))&&(dt+=g[Ft+at])}}m[Y+at]=dt}}}}return e.makeTensorInfo(s.shape,s.dtype,m)}},uR={kernelName:pc,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{dims:a}=r;Wt(s,"reverse");const i=s.shape.length,o=be(a,s.shape);if(0===i)return ws({inputs:{x:s},backend:e});const u=new In(s.shape,s.dtype),c=e.bufferSync(s);for(let l=0;l<u.size;l++){const h=u.indexToLoc(l),p=h.slice();o.forEach(d=>p[d]=s.shape[d]-1-p[d]),u.set(c.get(...p),...h)}return e.makeTensorInfo(u.shape,u.dtype,u.values)}},cR={kernelName:Xp,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:r}=n,{radians:s,fillValue:a,center:i}=t,o=e,u=cn(r.dtype,nt(r.shape)),[c,l,h,p]=r.shape,[d,f]=xf(i,l,h),m=Math.sin(s),g=Math.cos(s),y=o.data.get(r.dataId).values;for(let b=0;b<c;b++){const x=b*h*l*p;for(let w=0;w<l;w++){const k=w*(h*p);for(let N=0;N<h;N++){const $=N*p;for(let C=0;C<p;C++){const R=[c,w,N,C],A=R[2],_=R[1];let z=(A-d)*g-(_-f)*m,V=(A-d)*m+(_-f)*g;z=Math.round(z+d),V=Math.round(V+f);let X=a;"number"!=typeof a&&(X=3===C?255:a[C]),z>=0&&z<h&&V>=0&&V<l&&(X=y[x+V*(h*p)+z*p+C]),u[x+k+$+C]=X}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},hR=Le(ml,n=>{const t=Math.floor(n);return n-t<.5?Math.floor(n):n-t>.5?Math.ceil(n):t%2==0?t:t+1}),pR={kernelName:ml,backendName:"cpu",kernelFunc:hR},rv=Ia(n=>1/Math.sqrt(n)),dR=yo(gl,rv),fR={kernelName:gl,backendName:"cpu",kernelFunc:dR};function vo(n,t,e,r,s,a,i,o,u,c){const l=[r/s,s],h=n.values,p=t.values;if(0===r)return we(e,t.dtype);const d=we(l,t.dtype);"string"==typeof u||"number"==typeof u?d.values.fill(u):"boolean"==typeof u&&d.values.fill(+u);for(let f=0;f<a;f++){const m=[];let g=0;for(let y=0;y<i;y++){const b=h[f*i+y];m.push(b),g+=b*o[y]}if(g<0||g>=r/s)throw new Error(`Invalid indices: ${m} does not index into ${e}`);for(let y=0;y<s;y++)c?d.values[g*s+y]+=p[f*s+y]:d.values[g*s+y]=0===t.rank?p[0]:p[f*s+y]}return d}const mR={kernelName:Dp,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:c,strides:l,outputSize:h}=ql(0,s,i),p=vo(e.bufferSync(s),e.bufferSync(a),i,h,c,u,o,l,0,!0);return e.makeTensorInfo(i,p.dtype,p.values)}};function gR(n,t){let e=0,r=n.length,s=0;for(;e<r;)s=Math.floor((e+r)/2),n[s]<t?e=s+1:r=s;return r}function yR(n,t){let e=0,r=n.length,s=0;for(;e<r;)s=Math.floor((e+r)/2),n[s]<=t?e=s+1:r=s;return r}const bR={kernelName:_p,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{sortedSequence:s,values:a}=t,{side:i}=r,o=function(u,c,l,h,p,d){const f=hn("int32",l*p);for(let m=0;m<l;++m){const g=u.slice(m*h,(m+1)*h),y=m*p;for(let b=0;b<p;++b)f[y+b]="left"===d?gR(g,c[b+y]):yR(g,c[b+y])}return f}(e.data.get(s.dataId).values,e.data.get(a.dataId).values,s.shape[0],s.shape[1],a.shape[1],i);return e.makeTensorInfo(a.shape,"int32",o)}},xR={kernelName:dc,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e}=n,{condition:r,t:s,e:a}=t;Wt([r,s,a],"select");const i=r.shape.length,o=e.data.get(r.dataId).values,u=e.data.get(s.dataId).values,c=e.data.get(a.dataId).values,l=ur(s.dtype,a.dtype),h=dn(nt(s.shape),l);let p=0;const d=0===i||i>1||1===s.shape.length?1:nt(s.shape.slice(1));for(let f=0;f<o.length;f++)for(let m=0;m<d;m++)h[p++]=1===o[f]?u[f]:c[f];return e.makeTensorInfo(s.shape,l,h)}},wR=lh,vR=uh,kR=Le(yl,n=>n>=0?vR*n:wR*(Math.exp(n)-1)),IR={kernelName:yl,backendName:"cpu",kernelFunc:kR},NR=Le(wl,n=>n<0?-1:n>0?1:0),SR={kernelName:wl,backendName:"cpu",kernelFunc:NR},TR=Le(bl,n=>Math.sin(n)),CR={kernelName:bl,backendName:"cpu",kernelFunc:TR},$R=Le(xl,n=>Math.sinh(n)),ER={kernelName:xl,backendName:"cpu",kernelFunc:$R},sv=Math.log(1.1920928955078125e-7)+2,RR=Le(kl,n=>{const t=n>-sv,e=n<sv,r=Math.exp(n);let s;return s=e?r:t?n:Math.log(1+r),s}),AR={kernelName:kl,backendName:"cpu",kernelFunc:RR},FR={kernelName:gc,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{blockShape:a,paddings:i}=r;Wt([s],"spaceToBatchND");const o=nt(a),u=[[0,0]];u.push(...i);for(let g=1+a.length;g<s.shape.length;++g)u.push([0,0]);const c=Xw.kernelFunc({inputs:{x:s},backend:e,attrs:{paddings:u,constantValue:0}}),l=Kl(c.shape,a,o,!1),h=Xl(l.length,a.length,!1),p=Yl(c.shape,a,o,!1),d=Ue({inputs:{x:c},backend:e,attrs:{shape:l}}),f=ar({inputs:{x:d},backend:e,attrs:{perm:h}}),m=Ue({inputs:{x:f},backend:e,attrs:{shape:p}});return e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),m}};function av(n,t,e,r,s,a,i){const o=t[0],u=a[0],c=new Array(u),l=new Array(o),h=t[1];if(0===u){if(0!==o)throw new Error(Ky(o));return[hn(e,0),[0,h],hn(s,0),c,l]}let p=!0,d=0;const f=new Array(u).fill(0);for(let g=0;g<o;++g){const y=n[g*h];if(y<0)throw new Error(Xy(g,y));if(y>=u)throw new Error(Yy(g,y,u));++f[y],p=p&&y>=d,d=y}let m=!0;for(let g=0;g<u;++g){const y=0===f[g];c[g]=y,m=m&&!y,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&p){const g=n,y=r;for(let b=0;b<o;++b)l[b]=b;return[g,[o,h],y,c,l]}{const g=f[u-1],y=hn(e,g*h),b=hn(s,g),x=new Array(u).fill(0);for(let w=0;w<o;++w){const k=n[w*h],$=(0===k?0:f[k-1])+x[k];x[k]++;for(let C=0;C<h;++C)y[$*h+C]=n[w*h+C];b[$]=r[w],l[w]=$}for(let w=0;w<u;++w)if(0===x[w]){const k=0===w?0:f[w-1];y[k*h+0]=w;for(let N=1;N<h;++N)y[k*h+N]=0;b[k]=i}return[y,[g,h],b,c,l]}}const DR={kernelName:Op,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e}=n,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=e.data.get(r.dataId).values,u=e.data.get(s.dataId).values,c=e.data.get(a.dataId).values,l=e.data.get(i.dataId).values[0],[h,p,d,f,m]=av(o,r.shape,r.dtype,u,s.dtype,c,l);return[e.makeTensorInfo(p,r.dtype,h),e.makeTensorInfo([p[0]],s.dtype,d),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),e.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function iv(n,t,e,r,s){const a=nt(r),i=t[0],o=s.length,u=[];let c=1,l=-1;for(let m=0;m<o;++m){const g=s[m];if(-1===g){if(-1!==l)throw new Error(Zy(l,m));l=m,u.push(1)}else{if(g<0)throw new Error(Jy(m,g));c*=g,u.push(g)}}if(-1!==l){if(c<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const m=Math.trunc(a/c);if(c*m!==a)throw new Error(Qy(r,u));u[l]=m}if(nt(u)!==a)throw new Error(t1(r,u));const h=r.length,p=[];if(h>0){p[h-1]=1;for(let m=h-2;m>=0;--m)p[m]=p[m+1]*r[m+1]}const d=[];if(o>0){d[o-1]=1;for(let m=o-2;m>=0;--m)d[m]=d[m+1]*u[m+1]}const f=hn(e,i*o);for(let m=0;m<i;++m){let g=0;for(let y=0;y<h;++y)g+=n[m*h+y]*p[y];for(let y=0;y<o;++y)f[m*o+y]=Math.trunc(g/d[y]),g%=d[y]}return[f,[i,o],u]}const _R={kernelName:Mp,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e}=n,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(e.data.get(s.dataId).values),o=e.data.get(r.dataId).values,u=Array.from(e.data.get(a.dataId).values),[c,l,h]=iv(o,r.shape,r.dtype,i,u);return[e.makeTensorInfo(l,r.dtype,c),e.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};function Hm(n,t,e,r,s,a=!1,i=0){const o=r.length,u=[t[0],n.length/t[0]],c=u[1],l=o>0?s[o-1]+1:0;if(l<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=l;const p=hn(e,h.reduce((y,b)=>y*b,1));if(0===o)return l>0&&p.fill(i),[p,h];if(l<=0)throw new Error("segment ids must be >= 0");let d=0,f=1,m=0,g=s[d];for(;;){let y=0;if(f<o){if(y=s[f],g===y){++f;continue}if(g>=y)throw new Error("segment ids are not increasing")}if(g<0||g>=l)throw new Error(e1(g,l));g>m&&p.fill(i,m*c,g*c);for(let b=d;b<f;++b){const x=r[b];if(x<0||x>=u[0])throw new Error(n1(b,r[b],u[0]));for(let w=0;w<c;w++)p[g*c+w]+=n[x*c+w]}if(a)for(let b=0;b<c;b++)p[g*c+b]/=f-d;if(d=f,++f,m=g+1,g=y,f>o)break}return m<l&&p.fill(i,m*c,l*c),[p,h]}const OR={kernelName:Lp,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e}=n,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=e.data.get(r.dataId).values,o=e.data.get(s.dataId).values,u=e.data.get(a.dataId).values,[c,l]=Hm(i,r.shape,r.dtype,o,u,!0);return e.makeTensorInfo(l,r.dtype,c)}},MR={kernelName:zp,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e}=n,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=e.data.get(r.dataId).values,o=e.data.get(s.dataId).values,u=e.data.get(a.dataId).values,[c,l]=Hm(i,r.shape,r.dtype,o,u);return e.makeTensorInfo(l,r.dtype,c)}},LR={kernelName:Pp,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:h,outputSize:p}=ql(0,s,o),d=!1,f=e.bufferSync(s);let m;switch(a.dtype){case"bool":m=vo(f,e.bufferSync(a),o,p,l,c,u,h,Boolean(e.data.get(i.dataId).values[0]),d);break;case"float32":case"int32":m=vo(f,e.bufferSync(a),o,p,l,c,u,h,e.data.get(i.dataId).values[0],d);break;case"string":m=vo(f,e.bufferSync(a),o,p,l,c,u,h,ta(e.data.get(i.dataId).values[0]),d);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return e.makeTensorInfo(o,m.dtype,m.values)}},zR={kernelName:yc,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=be(i,s.shape)[0],u=Mf(s,a,o),c=new Array(s.shape.length).fill(0),l=s.shape.slice();return u.map(h=>{const p=[...l];p[o]=h;const d=ci({inputs:{x:s},backend:e,attrs:{begin:c,size:p}});return c[o]+=h,d})}},PR=Ia(n=>Math.sqrt(n)),BR=Le(Il,n=>Math.sqrt(n)),WR={kernelName:Il,backendName:"cpu",kernelFunc:BR},VR={kernelName:Bp,backendName:"cpu",kernelFunc:({inputs:n,backend:t})=>{const{x:e}=n,r=t;Wt(e,"square");const s=r.data.get(e.dataId).values,a=new Float32Array(s.length);for(let i=0;i<s.length;++i){const o=s[i];a[i]=o*o}return{dataId:r.write(a,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}},UR=pn((n,t)=>{const e=n-t;return e*e}),GR=Cn(Nl,UR),HR={kernelName:Nl,backendName:"cpu",kernelFunc:GR},jR=Le(El,(n,t)=>{const e=t;return isNaN(n)?NaN:n>0?1:e.alpha}),qR={kernelName:El,backendName:"cpu",kernelFunc:jR};function ov(n,t,e,r){const s=we(n,t.dtype);for(let a=0;a<s.size;a++){const i=s.indexToLoc(a),o=new Array(i.length);for(let u=0;u<o.length;u++)o[u]=i[u]*e[u]+r[u];s.set(t.get(...o),...i)}return s}const KR={kernelName:Wp,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:h,shrinkAxisMask:p}=r;Wt(s,"stridedSlice");const{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=Id(s.shape,a,i,o,u,c,l,h,p);let k;if(m)k=Ue({inputs:{x:s},backend:e,attrs:{shape:f}});else if(g||y){I(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const N=wd(b,x,w),$=ci({inputs:{x:s},backend:e,attrs:{begin:b,size:N}});k=Ue({inputs:{x:$},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo($)}else{const N=ov(d,e.bufferSync(s),w,b);k=e.makeTensorInfo(f,N.dtype,N.values)}return k}};class XR{constructor(t,e,r,s,a,i){this.separator=Qs(t),this.nGramWidths=e,this.leftPad=Qs(r),this.rightPad=Qs(s),this.padWidth=a,this.preserveShort=i}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const r=this.getPadWidth(e);return Math.max(0,t+2*r-e+1)}createNGrams(t,e,r,s,a,i){for(let o=0;o<a;++o){const u=this.getPadWidth(i),c=Math.max(0,u-o),l=Math.max(0,u-(a-(o+1))),h=i-(c+l),p=e+(c>0?0:o-u);let d=0;d+=c*this.leftPad.length;for(let y=0;y<h;++y)d+=t[p+y].length;d+=l*this.rightPad.length,d+=(c+l+h-1)*this.separator.length,r[s+o]=new Uint8Array(d);const f=r[s+o];let m=0;const g=y=>y.forEach(b=>f[m++]=b);for(let y=0;y<c;++y)g(this.leftPad),g(this.separator);for(let y=0;y<h-1;++y)g(t[p+y]),g(this.separator);if(h>0){g(t[p+h-1]);for(let y=0;y<l;++y)g(this.separator),g(this.rightPad)}else{for(let y=0;y<l-1;++y)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(t,e){const r=t.length,s=e.length;if(s>0){let u=e[0];if(0!==u)throw new Error(`First split value must be 0, got ${u}`);for(let c=1;c<s;++c){let l=e[c]>=u;if(l=l&&e[c]<=r,!l)throw new Error(`Invalid split value ${e[c]}, must be in [${u}, ${r}]`);u=e[c]}if(u!==r)throw new Error(`Last split value must be data size. Expected ${r}, got ${u}`)}const a=s-1,i=hn("int32",s);if(0===r||0===s){const u=new Array(r);for(let c=0;c<=a;++c)i[c]=0;return[u,i]}i[0]=0;for(let u=1;u<=a;++u){const c=e[u]-e[u-1];let l=0;this.nGramWidths.forEach(h=>{l+=this.getNumNGrams(c,h)}),this.preserveShort&&c>0&&0===l&&(l=1),i[u]=i[u-1]+l}const o=new Array(i[a]);for(let u=0;u<a;++u){const c=e[u];let l=i[u];if(this.nGramWidths.forEach(h=>{const d=this.getNumNGrams(e[u+1]-e[u],h);this.createNGrams(t,c,o,l,d,h),l+=d}),this.preserveShort&&l===i[u]){const h=e[u+1]-e[u];if(0===h)continue;this.createNGrams(t,c,o,l,1,h+2*this.padWidth)}}return[o,i]}}function lv(n,t,e,r,s,a,i,o){return new XR(e,r,s,a,i,o).compute(n,t)}const YR={kernelName:Vp,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:h}=t,p=e.data.get(l.dataId).values,d=e.data.get(h.dataId).values,[f,m]=lv(p,d,s,a,i,o,u,c);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(h.shape,"int32",m)]}};function ZR(n,t,e,r){if(!n.length)return;if(0===t.length){for(let a=0;a<n.length;++a)r.push(n.subarray(a,a+1));return}if(1===t.length){const a=t[0];let i=n.indexOf(a);for(;-1!==i;){const o=n.subarray(0,i);e&&0===o.length||r.push(o),i=(n=n.subarray(i+1)).indexOf(a)}return void(e&&0===n.length||r.push(n))}let s=0;for(let a=0;a<n.length+1;a++)if(a===n.length||-1!==t.indexOf(n[a])){const i=n.subarray(s,a);e&&0===i.length||r.push(i),s=a+1}}function uv(n,t,e){const r=n.length,s=[];let a=0,i=0;const o=new Array(r);for(let p=0;p<r;++p){const d=s.length;ZR(n[p],t,e,s);const f=s.length-d;o[p]=f,a+=f,i=Math.max(i,f)}const u=hn("int32",2*a),c=new Array(a),l=[r,i];let h=0;for(let p=0;p<r;++p)for(let d=0;d<o[p];++d)u[2*h]=p,u[2*h+1]=d,c[h]=s[h],++h;return[u,c,l]}const JR={kernelName:Up,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=e.data.get(a.dataId).values,u=e.data.get(i.dataId).values[0],[c,l,h]=uv(o,u,s),p=l.length;return[e.makeTensorInfo([p,2],"int32",c),e.makeTensorInfo([p],"string",l),e.makeTensorInfo([2],"int32",new Int32Array(h))]}};function cv(n,t){const e=hn("int32",n.length);for(let r=0;r<n.length;++r)e[r]=uk(n[r]).modulo(t).getLowBitsUnsigned();return e}const QR={kernelName:Gp,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=cv(e.data.get(a.dataId).values,s);return e.makeTensorInfo(a.shape,"int32",i)}},tA=Le(Tl,n=>Math.tan(n)),eA={kernelName:Tl,backendName:"cpu",kernelFunc:tA},nA=Le(Cl,n=>Math.tanh(n));function hv(n,t){const e=new Array(n.rank);for(let s=0;s<e.length;s++)e[s]=n.shape[s]*t[s];const r=we(e,n.dtype);for(let s=0;s<r.values.length;++s){const a=r.indexToLoc(s),i=new Array(n.rank);for(let u=0;u<i.length;u++)i[u]=a[u]%n.shape[u];const o=n.locToIndex(i);r.values[s]=n.values[o]}return r}const rA={kernelName:$l,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{reps:a}=r;Wt(s,"tile");const i=hv(e.bufferSync(s),a);return e.makeTensorInfo(i.shape,i.dtype,i.values)}},gu=(n,t)=>{const e=t.value-n.value;return 0===e?n.index-t.index:e};function pv(n,t,e=0,r=n.length-1){for(;r>e;){if(r-e>600){const o=r-e+1,u=t-e+1,c=Math.log(o),l=.5*Math.exp(2*c/3),h=.5*Math.sqrt(c*l*(o-l)/o)*Math.sign(u-o/2);pv(n,t,Math.max(e,Math.floor(t-u*l/o+h)),Math.min(r,Math.floor(t+(o-u)*l/o+h)))}const s=n[t];let a=e,i=r;for(Ne(n,e,t),gu(n[r],s)>0&&Ne(n,e,r);a<i;){for(Ne(n,a,i),a++,i--;gu(n[a],s)<0;)a+=1;for(;gu(n[i],s)>0;)i-=1}0===gu(n[e],s)?Ne(n,e,i):(i+=1,Ne(n,i,r)),i<=t&&(e=i+1),t<=i&&(r=i-1)}}function dv(n,t,e,r,s){const a=t[t.length-1],[i,o]=[n.length/a,a],u=cn(e,i*r),c=cn("int32",i*r);for(let h=0;h<i;h++){const p=h*o,d=n.subarray(p,p+o);let f=new Array(d.length);d.forEach((b,x)=>f[x]={value:b,index:x}),r<f.length&&(pv(f,r),f=f.slice(0,r)),s&&f.sort(gu);const m=h*r,g=u.subarray(m,m+r),y=c.subarray(m,m+r);for(let b=0;b<r;b++)g[b]=f[b].value,y[b]=f[b].index}const l=t.slice();return l[l.length-1]=r,[we(l,e,u),we(l,"int32",c)]}const sA={kernelName:Hp,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{k:a,sorted:i}=r;Wt(s,"topk");const o=e.data.get(s.dataId).values,[u,c]=dv(o,s.shape,s.dtype,a,i);return[e.makeTensorInfo(u.shape,u.dtype,u.values),e.makeTensorInfo(c.shape,c.dtype,c.values)]}},aA={kernelName:jp,backendName:"cpu",kernelFunc:function(n){const{inputs:t,attrs:e,backend:r}=n,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:c}=e,[l,h,p,d]=s.shape,[f,m]=c??[h,p],g=[l,f,m,d],y=jt(s.shape),b=y[0],x=y[1],w=y[2],k=jt(g),N=k[0],$=k[1],C=k[2],R=cn(s.dtype,nt(g));R.fill(u);const A=r.data.get(s.dataId).values,_=r.data.get(a.dataId).values;for(let z=0;z<l;++z){const V=1===a.shape[0]?_:_.subarray(8*z,8*z+8);for(let X=0;X<f;++X)for(let J=0;J<m;++J)for(let Y=0;Y<d;++Y){let et;const rt=V[6]*J+V[7]*X+1;if(0===rt)continue;const dt=(V[3]*J+V[4]*X+V[5])/rt,pt=fv((V[0]*J+V[1]*X+V[2])/rt,p,o),ft=fv(dt,h,o);switch(i){case"nearest":et=iA(A,h,p,b,x,w,z,ft,pt,Y,u);break;case"bilinear":et=oA(A,h,p,b,x,w,z,ft,pt,Y,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}R[z*N+X*$+J*C+Y]=et}return r.makeTensorInfo(g,s.dtype,R)}return{dataId:r.write(R,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function fv(n,t,e){switch(e){case"reflect":return function(r,s){let a=r;if(a<0)if(s<=1)a=0;else{const i=2*s;a<i&&(a=i*Math.trunc(-a/i)+a),a=a<-s?a+i:-a-1}else if(a>s-1)if(s<=1)a=0;else{const i=2*s;a-=i*Math.trunc(a/i),a>=s&&(a=i-a-1)}return ge(0,a,s-1)}(n,t);case"wrap":return function(r,s){let a=r;return a<0?s<=1?a=0:a+=s*(Math.trunc(-a/(s-1))+1):a>s-1&&(s<=1?a=0:a-=s*Math.trunc(a/(s-1))),ge(0,a,s-1)}(n,t);case"nearest":return ge(0,n,t-1);default:return n}}function yu(n,t,e,r,s,a,i,o,u,c,l){return 0<=o&&o<t&&0<=u&&u<e?n[i*r+o*s+u*a+c]:l}function iA(n,t,e,r,s,a,i,o,u,c,l){return yu(n,t,e,r,s,a,i,Math.round(o),Math.round(u),c,l)}function oA(n,t,e,r,s,a,i,o,u,c,l){const h=Math.floor(o),p=Math.floor(u),d=h+1,f=p+1;return(d-o)*((f-u)*yu(n,t,e,r,s,a,i,h,p,c,l)+(u-p)*yu(n,t,e,r,s,a,i,h,f,c,l))+(o-h)*((f-u)*yu(n,t,e,r,s,a,i,d,p,c,l)+(u-p)*yu(n,t,e,r,s,a,i,d,f,c,l))}function mv(n,t,e,r){const s=be(t,e)[0],a=[1,e[0],1];for(let f=0;f<s;f++)a[0]*=e[f];a[1]=e[s];for(let f=s+1;f<e.length;f++)a[2]*=e[f];const i={},o=new Int32Array(e[s]),u=new In(a,r,n),c=[],l=1===a[0]&&1===a[2];for(let f=0;f<e[s];f++){let m;if(l)m=n[f].toString();else{const g=[];for(let y=0;y<a[0];y++)for(let b=0;b<a[2];b++)g.push(u.get(y,f,b));m=g.join(",")}if(void 0!==i[m])o[f]=i[m];else{const g=Object.keys(i).length;i[m]=g,o[f]=g,c.push(f)}}const h=a.slice();h[1]=Object.keys(i).length;const p=new In(h,r);c.forEach((f,m)=>{for(let g=0;g<a[0];g++)for(let y=0;y<a[2];y++)p.set(u.get(g,f,y),g,m,y)});const d=e.slice();return d[s]=h[1],{outputValues:p.values,outputShape:d,indices:o}}const lA={kernelName:qp,backendName:"cpu",kernelFunc:function(n){const{inputs:t,attrs:e,backend:r}=n,{axis:s}=e,{x:a}=t;Wt(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:c}=mv(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}},uA={kernelName:xc,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],u=new Array(i-1);let c=0;for(let d=0;d<i;d++)d!==a&&(u[c++]=s.shape[d]);const l=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const p=new Array(o);for(let d=0;d<p.length;d++){l[a]=d;const f=ci({inputs:{x:s},backend:e,attrs:{begin:l,size:h}});p[d]=Ue({inputs:{x:f},backend:e,attrs:{shape:u}}),e.disposeIntermediateTensorInfo(f)}return p}},cA={kernelName:wc,backendName:"cpu",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,segmentIds:a}=t,{numSegments:i}=r;Wt(s,"unsortedSegmentSum");const o=[],u=[],c=s.shape.length-a.shape.length;let l=a;for(let p=0;p<c;++p){const d=Vh({inputs:{input:l},backend:e,attrs:{dim:p+1}});l=d,u.push(d)}for(let p=0;p<i;++p){const d=Js(p,"int32"),f=e.makeTensorInfo([],"int32",d),m=Tw({inputs:{a:f,b:l},backend:e}),g=Na({inputs:{x:m},backend:e,attrs:{dtype:"float32"}}),y=Wh({inputs:{a:g,b:s},backend:e}),b=mu({inputs:{x:y},backend:e,attrs:{axis:0,keepDims:!1}});o.push(b),u.push(f),u.push(m),u.push(g),u.push(y),u.push(b)}const h=Kw({inputs:o,backend:e,attrs:{axis:0}});return u.forEach(p=>e.disposeIntermediateTensorInfo(p)),h}},hA=[t$,e$,r$,a$,ZC,i$,l$,u$,c$,h$,d$,m$,y$,w$,k$,I$,N$,S$,T$,QC,C$,E$,R$,A$,XC,D$,O$,qC,M$,z$,P$,B$,W$,V$,U$,G$,j$,K$,X$,Y$,Z$,J$,Q$,tE,eE,nE,rE,sE,aE,iE,cE,zC,hE,pE,wE,vE,kE,NE,EE,RE,AE,DE,ME,LE,zE,PE,BE,VE,GE,PC,HE,L$,qE,XE,ZE,BC,QE,e3,n3,s3,i3,u3,h3,f3,m3,g3,y3,x3,w3,v3,k3,I3,N3,S3,T3,$3,E3,F3,_3,lE,O3,L3,P3,W3,U3,G3,j3,q3,Xw,Y3,VC,Z3,tR,eR,nR,KC,Wm,sR,UC,GC,JC,aR,iR,oR,lR,uR,cR,pR,fR,mR,bR,xR,IR,jC,SR,CR,ER,$$,D3,AR,FR,DR,_R,OR,MR,LR,zR,WR,VR,HR,qR,KR,YR,JR,QR,CE,uE,eA,{kernelName:Cl,backendName:"cpu",kernelFunc:nA},rA,sA,aA,o$,lA,uA,cA,H3];for(const n of hA)$g(n);const hi={},Hh={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function is(n,t){if(!(n in hi)||null!=t){const r=function(s,a){if(1!==s&&2!==s)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const i=a??function(o){if(typeof OffscreenCanvas<"u"&&2===o)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(s);return i.addEventListener("webglcontextlost",o=>{o.preventDefault(),delete hi[s]},!1),Q().getBool("SOFTWARE_WEBGL_ENABLED")&&(Hh.failIfMajorPerformanceCaveat=!1),1===s?i.getContext("webgl",Hh)||i.getContext("experimental-webgl",Hh):i.getContext("webgl2",Hh)}(n,t);if(null===r)return console.log("Could not get context for WebGL version",n),null;hi[n]=r}const e=hi[n];return null==e||e.isContextLost()?(delete hi[n],is(n)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),hi[n])}var bu,Rr,_n;function xu(n,t){return[t,n]}function jh(n){const t=nt(n);return zo(Math.ceil(t/4))}function ko(n,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(n/2))]}function jm(n,t){const e=n;let r,s,a,i,o,u,c,l,h,p;return 2===Q().getNumber("WEBGL_VERSION")?(r=e.R32F,s=e.R16F,a=e.RGBA16F,i=e.RGBA32F,o=e.RED,c=4,l=1,h=e.HALF_FLOAT,p=e.FLOAT,u=e.RGBA8):(r=n.RGBA,s=n.RGBA,a=n.RGBA,i=e.RGBA,o=n.RGBA,c=4,l=4,h=null!=t?t.HALF_FLOAT_OES:null,p=n.FLOAT,u=n.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:l,textureTypeHalfFloat:h,textureTypeFloat:p}}function Ut(n,t){const e=t();return Q().getBool("DEBUG")&&function(r){const s=r.getError();if(s!==r.NO_ERROR)throw new Error("WebGL Error: "+function(a,i){switch(i){case a.NO_ERROR:return"NO_ERROR";case a.INVALID_ENUM:return"INVALID_ENUM";case a.INVALID_VALUE:return"INVALID_VALUE";case a.INVALID_OPERATION:return"INVALID_OPERATION";case a.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case a.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case a.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${i}`}}(r,s))}(n),e}function pA(n){return!!(Q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===n||5.96e-8<Math.abs(n)&&Math.abs(n)<65504)}function qh(n,t){return Ms(n,()=>n.getExtension(t),'Extension "'+t+'" not supported on this browser.')}(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(bu||(bu={})),function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"}(Rr||(Rr={})),function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(_n||(_n={}));const dA=/ERROR: [0-9]+:([0-9]+):/g;function gv(n,t){const e=dA.exec(t);if(null==e)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(n);const r=+e[1],s=n.split("\n"),a=s.length.toString().length+2,i=s.map((h,p)=>Vs((p+1).toString(),a)+h);let o=0;for(let h=0;h<i.length;h++)o=Math.max(i[h].length,o);const u=i.slice(0,r-1),c=i.slice(r-1,r),l=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${Vs(c[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join("\n"))}function qm(n,t){if(Ut(n,()=>n.validateProgram(t)),!1===n.getProgramParameter(t,n.VALIDATE_STATUS))throw console.log(n.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function yv(n,t,e,r,s,a,i){const o=n.getAttribLocation(t,e);return-1!==o&&(Ut(n,()=>n.bindBuffer(n.ARRAY_BUFFER,r)),Ut(n,()=>n.vertexAttribPointer(o,s,n.FLOAT,!1,a,i)),Ut(n,()=>n.enableVertexAttribArray(o)),!0)}function Km(n,t,e){Ut(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),Ut(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0))}function bv(n,t){Ut(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),Ut(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Kh(n){const t=n.checkFramebufferStatus(n.FRAMEBUFFER);if(t!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,r){switch(r){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${r}`}}(n,t))}function Ms(n,t,e){const r=Ut(n,()=>t());if(null==r)throw new Error(e);return r}function Io(n,t=2){return nt(n.slice(0,n.length-t))}function No(n){if(0===n.length)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Xm(n){let t=[1,1,1];return 0===n.length||1===n.length&&1===n[0]||(t=[Io(n),...No(n)]),t}function Xh(n){return n%2==0}function Yh(n,t){if(he(n=n.slice(-2),t=t.slice(-2))||!n.length||!t.length||0===n[0]||0===n[1]||0===t[0]||0===t[1])return!0;if(n.length!==t.length){const e=n.slice(-1)[0],r=t.slice(-1)[0];if(e===r||Xh(e)&&Xh(r)&&(1===n[0]||1===t[0]))return!0}return n[1]===t[1]&&Xh(n[0])&&Xh(t[0])}let Ym,Zm;function Ur(n,t){return null!=n.getExtension(t)}function xv(n){try{if(null!=is(n))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function Jm(n){const t=jm(n),e=n.createTexture();n.bindTexture(n.TEXTURE_2D,e),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,r),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0);const s=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(e),n.deleteFramebuffer(r),s}function wu(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{null!=e&&I("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}const Kt=Q();function jn(){let n,t,e,r,s,a,i,o,u,c;return 2===Q().getNumber("WEBGL_VERSION")?(n="#version 300 es",t="in",e="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o=Q().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",u="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(n="",t="attribute",e="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:n,attribute:t,varyingVs:e,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:c}}function pi(n,t,e="index"){const r=jt(t);return r.map((s,a)=>`int ${n[a]} = ${e} / ${s}; ${a===r.length-1?`int ${n[a+1]} = ${e} - ${n[a]} * ${s}`:`index -= ${n[a]} * ${s}`};`).join("")}function Zh(n,t,e="index"){const r=jt(t);return r.map((s,a)=>`int ${n[a]} = ${e} / outShapeStrides[${a}]; ${a===r.length-1?`int ${n[a+1]} = ${e} - ${n[a]} * outShapeStrides[${a}]`:`index -= ${n[a]} * outShapeStrides[${a}]`};`).join("")}function Qm(n){const t=jt(n).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}Kt.registerFlag("HAS_WEBGL",()=>Kt.getNumber("WEBGL_VERSION")>0),Kt.registerFlag("WEBGL_VERSION",()=>xv(2)?2:xv(1)?1:0),Kt.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),Kt.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===Kt.get("WEBGL_VERSION")),Kt.registerFlag("WEBGL_CPU_FORWARD",()=>!0),Kt.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),Kt.registerFlag("WEBGL_PACK",()=>Kt.getBool("HAS_WEBGL")),Kt.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Kt.getBool("WEBGL_PACK")),Kt.registerFlag("WEBGL_PACK_CLIP",()=>Kt.getBool("WEBGL_PACK")),Kt.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Kt.getBool("WEBGL_PACK")),Kt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Kt.getBool("WEBGL_PACK")),Kt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Kt.getBool("WEBGL_PACK")),Kt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Kt.getBool("WEBGL_PACK")),Kt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Kt.getBool("WEBGL_PACK")),Kt.registerFlag("WEBGL_PACK_REDUCE",()=>Kt.getBool("WEBGL_PACK")),Kt.registerFlag("WEBGL_LAZILY_UNPACK",()=>Kt.getBool("WEBGL_PACK")),Kt.registerFlag("WEBGL_CONV_IM2COL",()=>Kt.getBool("WEBGL_PACK")),Kt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(n){if(null==Ym){const t=is(n);Ym=t.getParameter(t.MAX_TEXTURE_SIZE)}return Ym}(Kt.getNumber("WEBGL_VERSION"))),Kt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(n){if(null==Zm){const t=is(n);Zm=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Zm)}(Kt.getNumber("WEBGL_VERSION"))),Kt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Kt.getNumber("WEBGL_VERSION");return 0===n?0:function(t){if(0===t)return 0;let e;const r=is(t);return e=Ur(r,"EXT_disjoint_timer_query_webgl2")&&2===t?2:Ur(r,"EXT_disjoint_timer_query")?1:0,e}(n)}),Kt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Kt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Wg()),Kt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(n){if(0===n)return!1;const t=is(n);if(1===n){if(!Ur(t,"OES_texture_float"))return!1}else if(!Ur(t,"EXT_color_buffer_float"))return!1;return Jm(t)}(Kt.getNumber("WEBGL_VERSION"))),Kt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!Kt.getBool("WEBGL_FORCE_F16_TEXTURES")&&Kt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),Kt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>function gA(n){if(0===n)return!1;const t=is(n);if(1!==n){if(Ur(t,"EXT_color_buffer_float"))return Jm(t);const e="EXT_color_buffer_half_float";if(Ur(t,e)){const r=t.getExtension(e);return function(s,a){const i=jm(s,a),o=s.createTexture();s.bindTexture(s.TEXTURE_2D,o),s.texImage2D(s.TEXTURE_2D,0,i.internalFormatHalfFloat,1,1,0,i.textureFormatFloat,i.textureTypeHalfFloat,null);const l=s.createFramebuffer();s.bindFramebuffer(s.FRAMEBUFFER,l),s.framebufferTexture2D(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,o,0);const h=s.checkFramebufferStatus(s.FRAMEBUFFER)===s.FRAMEBUFFER_COMPLETE;return s.bindTexture(s.TEXTURE_2D,null),s.bindFramebuffer(s.FRAMEBUFFER,null),s.deleteTexture(o),s.deleteFramebuffer(l),h}(t,r)}return!1}return!(!Ur(t,"OES_texture_float")||!Ur(t,"WEBGL_color_buffer_float"))&&Jm(t)}(Kt.getNumber("WEBGL_VERSION"))),Kt.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(n=Kt.getNumber("WEBGL_VERSION"))&&null!=is(n).fenceSync;var n}),Kt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Kt.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),Kt.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(n<0&&-1!==n)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)}),Kt.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Wg()?1:-1,n=>{if(n<0&&-1!==n)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)}),Kt.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),Kt.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),Kt.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),Kt.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128),Kt.registerFlag("WEBGL_EXP_CONV",()=>!1),Kt.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Kt.getBool("IS_TEST")),Kt.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0),Kt.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1),Kt.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);const wv="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:vv}=Re;function bA(n,t,e){const r=[];if(n.forEach(p=>{const d=nt(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?r.push(`uniform float ${p.name}${d>1?`[${d}]`:""};`):(r.push(`uniform sampler2D ${p.name};`),r.push(`uniform int offset${p.name};`)),e.enableShapeUniforms){const{uniformShape:f}=tg(e.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(f.length){case 1:r.push(`uniform int ${p.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${p.name}Shape;`)}r.push(`uniform ivec2 ${p.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(p=>{r.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const s=r.join("\n"),a=n.map(p=>function(d,f,m=!1,g){let y="";return y+=m?kv(d,g):So(d,g),d.shapeInfo.logicalShape.length<=f.logicalShape.length&&(y+=m?function(w,k){const N=w.name,$=N.charAt(0).toUpperCase()+N.slice(1),C="get"+$+"AtOutCoords",R=w.shapeInfo.logicalShape.length,A=k.logicalShape.length,_=vv(w.shapeInfo.logicalShape,k.logicalShape),z=Ge(A),V=A-R;let X;const J=["x","y","z","w","u","v"];X=0===R?"":A<2&&_.length>=1?"coords = 0;":_.map(pt=>`coords.${J[pt+V]} = 0;`).join("\n");let Y="";Y=A<2&&R>0?"coords":w.shapeInfo.logicalShape.map((pt,ft)=>`coords.${J[ft+V]}`).join(", ");let et="return outputValue;";const rt=1===nt(w.shapeInfo.logicalShape),dt=1===nt(k.logicalShape);if(1!==R||rt||dt){if(rt&&!dt)et=1===A?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(_.length){const pt=R-2,ft=R-1;_.indexOf(pt)>-1&&_.indexOf(ft)>-1?et="return vec4(outputValue.x);":_.indexOf(pt)>-1?et="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":_.indexOf(ft)>-1&&(et="return vec4(outputValue.xx, outputValue.zz);")}}else et="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${C}() {\n      ${z} coords = getOutputCoords();\n      ${X}\n      vec4 outputValue = get${$}(${Y});\n      ${et}\n    }\n  `}(d,f):function(w,k){const N=w.name,$=N.charAt(0).toUpperCase()+N.slice(1),C="get"+$+"AtOutCoords",_=w.shapeInfo.logicalShape.length,z=k.logicalShape.length;if(!w.shapeInfo.isUniform&&_===z&&null==w.shapeInfo.flatOffset&&he(w.shapeInfo.texShape,k.texShape))return`\n      float ${C}() {\n        return sampleTexture(${N}, resultUV);\n      }\n    `;const V=Ge(z),X=vv(w.shapeInfo.logicalShape,k.logicalShape),J=z-_;let Y;const et=["x","y","z","w","u","v"];Y=0===_?"":z<2&&X.length>=1?"coords = 0;":X.map(at=>`coords.${et[at+J]} = 0;`).join("\n");let rt="";return rt=z<2&&_>0?"coords":w.shapeInfo.logicalShape.map((at,dt)=>`coords.${et[dt+J]}`).join(", "),`\n    float ${C}() {\n      ${V} coords = getOutputCoords();\n      ${Y}\n      return get${$}(${rt});\n    }\n  `}(d,f)),y}(p,t,e.packedInputs,e.enableShapeUniforms)).join("\n"),i=t.texShape,o=jn(),u=`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${o.texture2D}(textureSampler, uv).r;\n    }\n  `;let c,l,h=`${(p=o).version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${p.varyingFs} vec2 resultUV;\n    ${p.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${p.defineSpecialNaN}\n    ${p.defineSpecialInf}\n    ${p.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${xA}\n    ${wA}\n    ${vA}\n  `;var p;return t.isPacked?(c=function(p,d,f){switch(p.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(m,g,y){const b=[Math.ceil(g[0]/2),Math.ceil(g[1]/2)];return 1===b[0]?y?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${b[1]}.0);\n      }\n    `:1===b[1]?y?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${b[0]}.0);\n      }\n    `:y?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${b[0]}, ${b[1]}));\n      return 2 * (resTexRC.x * ${b[1]} + resTexRC.y);\n    }\n  `}(0,d,f);case 2:return function(m,g,y){const b=[Math.ceil(g[0]/2),Math.ceil(g[1]/2)];if(he(m,g))return y?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${b[0]}, ${b[1]}));\n      }\n    `;const x=Math.ceil(m[1]/2);return y?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${b[0]}, ${b[1]}));\n\n      int index = resTexRC.x * ${b[1]} + resTexRC.y;\n      int r = 2 * (index / ${x});\n      int c = imod(index, ${x}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(p,d,f);case 3:return function(m,g,y){if(y)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const b=[Math.ceil(g[0]/2),Math.ceil(g[1]/2)],x=Math.ceil(m[2]/2),w=x*Math.ceil(m[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${b[0]}, ${b[1]}));\n      int index = resTexRC.x * ${b[1]} + resTexRC.y;\n\n      int b = index / ${w};\n      index -= b * ${w};\n\n      int r = 2 * (index / ${x});\n      int c = imod(index, ${x}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(p,d,f);default:return function(m,g,y){if(y)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const b=[Math.ceil(g[0]/2),Math.ceil(g[1]/2)],x=Math.ceil(m[m.length-1]/2),w=x*Math.ceil(m[m.length-2]/2);let k=w,N="",$="b, r, c";for(let C=2;C<m.length-1;C++)k*=m[m.length-C-1],N=`\n      int b${C} = index / ${k};\n      index -= b${C} * ${k};\n    `+N,$=`b${C}, `+$;return`\n    ivec${m.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${b[0]}, ${b[1]}));\n      int index = resTexRC.x * ${b[1]} + resTexRC.y;\n\n      ${N}\n\n      int b = index / ${w};\n      index -= b * ${w};\n\n      int r = 2 * (index / ${x});\n      int c = imod(index, ${x}) * 2;\n\n      return ivec${m.length}(${$});\n    }\n  `}(p,d,f)}}(t.logicalShape,i,e.enableShapeUniforms),l=function(p){return`\n    void setOutput(vec4 val) {\n      ${p.output} = val;\n    }\n  `}(o)):(c=function(p,d,f){switch(p.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return y=f,1===(g=d)[0]?y?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${g[1]}.0);\n      }\n    `:1===g[1]?y?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${g[0]}.0);\n      }\n    `:y?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${g[0]}, ${g[1]}));\n      return resTexRC.x * ${g[1]} + resTexRC.y;\n    }\n  `;case 2:return function(m,g,y){return he(m,g)?y?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${g[0]}, ${g[1]}));\n      }\n    `:1===m[1]?y?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${g[0]}, ${g[1]}));\n        int index = resTexRC.x * ${g[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===m[0]?y?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${g[0]}, ${g[1]}));\n        int index = resTexRC.x * ${g[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:y?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${g[0]}, ${g[1]}));\n      int index = resTexRC.x * ${g[1]} + resTexRC.y;\n      int r = index / ${m[1]};\n      int c = index - r * ${m[1]};\n      return ivec2(r, c);\n    }\n  `}(p,d,f);case 3:return function(m,g,y){if(y)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${Zh(["r","c","d"],m)}\n    return ivec3(r, c, d);\n  }\n`;const b=pi(["r","c","d"],m);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${g[0]}, ${g[1]}));\n      int index = resTexRC.x * ${g[1]} + resTexRC.y;\n      ${b}\n      return ivec3(r, c, d);\n    }\n  `}(p,d,f);case 4:return function(m,g,y){if(y)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${Zh(["r","c","d","d2"],m)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const b=pi(["r","c","d","d2"],m);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${g[0]}, ${g[1]}));\n      int index = resTexRC.x * ${g[1]} + resTexRC.y;\n      ${b}\n      return ivec4(r, c, d, d2);\n    }\n  `}(p,d,f);case 5:return function(m,g){const y=pi(["r","c","d","d2","d3"],m);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${g[0]},\n                             ${g[1]}));\n\n      int index = resTexRC.x * ${g[1]} + resTexRC.y;\n\n      ${y}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(p,d);case 6:return function(m,g){const y=pi(["r","c","d","d2","d3","d4"],m);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${g[0]}, ${g[1]}));\n      int index = resTexRC.x * ${g[1]} + resTexRC.y;\n\n      ${y}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(p,d);default:throw new Error(`${p.length}-D output sampling is not yet supported`)}var g,y}(t.logicalShape,i,e.enableShapeUniforms),l=function(p){return`\n    void setOutput(float val) {\n      ${p.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),e.packedInputs&&(h+=kA),[h,u,l,s,c,a,e.userCode].join("\n")}function So(n,t=!1){const e=n.shapeInfo.logicalShape;switch(e.length){case 0:return function(r,s){const a=r.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1);if(r.shapeInfo.isUniform)return`float ${i}() {return ${a};}`;const[o,u]=r.shapeInfo.texShape;if(1===o&&1===u)return`\n      float ${i}() {\n        return sampleTexture(${a}, halfCR);\n      }\n    `;const c=di(a);if(s)return`\n    float ${i}() {\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], ${c});\n      return sampleTexture(${a}, uv);\n    }\n  `;const[l,h]=r.shapeInfo.texShape;return`\n    float ${i}() {\n      vec2 uv = uvFromFlat(${l}, ${h}, ${c});\n      return sampleTexture(${a}, uv);\n    }\n  `}(n,t);case 1:return function(r,s){const a=r.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1);if(r.shapeInfo.isUniform)return`\n      float ${i}(int index) {\n        ${To(r)}\n      }\n    `;const o=r.shapeInfo.texShape,u=o[0],c=o[1];if(1===c&&1===u)return`\n      float ${i}(int index) {\n        return sampleTexture(${a}, halfCR);\n      }\n    `;const l=di(a);return 1===c?s?`\n      float ${i}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${l}) + 0.5) / float(${a}TexShape[0]));\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${i}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${l}) + 0.5) / ${u}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `:1===u?s?`\n      float ${i}(int index) {\n        vec2 uv = vec2((float(index + ${l}) + 0.5) / float(${a}TexShape[1]), 0.5);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${i}(int index) {\n        vec2 uv = vec2((float(index + ${l}) + 0.5) / ${c}.0, 0.5);\n        return sampleTexture(${a}, uv);\n      }\n    `:s?`\n    float ${i}(int index) {\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${l});\n      return sampleTexture(${a}, uv);\n    }\n  `:`\n    float ${i}(int index) {\n      vec2 uv = uvFromFlat(${u}, ${c}, index + ${l});\n      return sampleTexture(${a}, uv);\n    }\n  `}(n,t);case 2:return function(r,s){const a=r.shapeInfo.logicalShape,i=r.name,o="get"+i.charAt(0).toUpperCase()+i.slice(1),u=r.shapeInfo.texShape;if(null!=u&&he(a,u))return s?`\n      float ${o}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}TexShape[1], ${i}TexShape[0]);\n        return sampleTexture(${i}, uv);\n      }\n    `:`\n    float ${o}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${u[1]}.0, ${u[0]}.0);\n      return sampleTexture(${i}, uv);\n    }\n  `;const{newShape:c,keptDims:l}=us(a);if(c.length<a.length){const m=["row","col"];return`\n      ${So(Co(r,c),s)}\n      float ${o}(int row, int col) {\n        return ${o}(${$o(m,l)});\n      }\n    `}if(r.shapeInfo.isUniform)return`\n      float ${o}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${a[1]}, 1)));\n        ${To(r)}\n      }\n    `;const p=u[0],d=u[1],f=di(i);return 1===d?s?`\n      float ${o}(int row, int col) {\n        float index = dot(vec3(row, col, ${f}), vec3(${i}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${i}TexShape[0]));\n        return sampleTexture(${i}, uv);\n      }\n    `:`\n    float ${o}(int row, int col) {\n      float index = dot(vec3(row, col, ${f}), vec3(${a[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${p}.0);\n      return sampleTexture(${i}, uv);\n    }\n  `:1===p?s?`\n      float ${o}(int row, int col) {\n        float index = dot(vec3(row, col, ${f}), vec3(${i}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${i}TexShape[1]), 0.5);\n        return sampleTexture(${i}, uv);\n      }\n    `:`\n    float ${o}(int row, int col) {\n      float index = dot(vec3(row, col, ${f}), vec3(${a[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);\n      return sampleTexture(${i}, uv);\n    }\n  `:s?`\n      float ${o}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i}Shape[1] + col + ${f};\n        vec2 uv = uvFromFlat(${i}TexShape[0], ${i}TexShape[1], index);\n        return sampleTexture(${i}, uv);\n      }\n    `:`\n  float ${o}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${a[1]} + col + ${f};\n    vec2 uv = uvFromFlat(${p}, ${d}, index);\n    return sampleTexture(${i}, uv);\n  }\n`}(n,t);case 3:return function(r,s){const a=r.shapeInfo.logicalShape,i=r.name,o="get"+i.charAt(0).toUpperCase()+i.slice(1),u=a[1]*a[2],c=a[2],{newShape:l,keptDims:h}=us(a);if(l.length<a.length){const b=["row","col","depth"];return`\n        ${So(Co(r,l),s)}\n        float ${o}(int row, int col, int depth) {\n          return ${o}(${$o(b,h)});\n        }\n      `}if(r.shapeInfo.isUniform)return`\n      float ${o}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${u}, ${c}, 1)));\n        ${To(r)}\n      }\n    `;const d=r.shapeInfo.texShape,f=d[0],m=d[1],g=r.shapeInfo.flatOffset;if(m===u&&null==g)return s?`\n      float ${o}(int row, int col, int depth) {\n        int stride1 = ${i}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${i}TexShape[1], ${i}TexShape[0]);\n        return sampleTexture(${i}, uv);\n      }\n    `:`\n        float ${o}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${c}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${m}.0, ${f}.0);\n          return sampleTexture(${i}, uv);\n        }\n      `;if(m===c&&null==g)return s?`\n      float ${o}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${i}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${i}TexShape[1], ${i}TexShape[0]);\n        return sampleTexture(${i}, uv);\n      }\n    `:`\n    float ${o}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${a[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${m}.0, ${f}.0);\n      return sampleTexture(${i}, uv);\n    }\n  `;const y=di(i);return s?`\n    float ${o}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${i}Shape[1] * ${i}Shape[2];\n      int stride1 = ${i}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${y};\n      vec2 uv = uvFromFlat(${i}TexShape[0], ${i}TexShape[1], index);\n      return sampleTexture(${i}, uv);\n    }\n    `:`\n      float ${o}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${u} + col * ${c} + depth + ${y};\n        vec2 uv = uvFromFlat(${f}, ${m}, index);\n        return sampleTexture(${i}, uv);\n      }\n  `}(n,t);case 4:return function(r,s){const a=r.shapeInfo.logicalShape,i=r.name,o="get"+i.charAt(0).toUpperCase()+i.slice(1),u=a[3],c=a[2]*u,l=a[1]*c,{newShape:h,keptDims:p}=us(a);if(h.length<a.length){const k=["row","col","depth","depth2"];return`\n      ${So(Co(r,h),s)}\n      float ${o}(int row, int col, int depth, int depth2) {\n        return ${o}(${$o(k,p)});\n      }\n    `}if(r.shapeInfo.isUniform)return`\n      float ${o}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${l}, ${c}, ${u}, 1)));\n        ${To(r)}\n      }\n    `;const d=r.shapeInfo.flatOffset,f=r.shapeInfo.texShape,m=f[0],g=f[1],y=`int stride2 = ${i}Shape[3];`,b=`int stride1 = ${i}Shape[2] * stride2;`,x=`int stride0 = ${i}Shape[1] * stride1;`;if(g===l&&null==d)return s?`\n      float ${o}(int row, int col, int depth, int depth2) {\n        ${y}\n        ${b}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${i}TexShape[1], ${i}TexShape[0]);\n        return sampleTexture(${i}, uv);\n      }\n    `:`\n      float ${o}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${c}, ${u}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${g}.0, ${m}.0);\n        return sampleTexture(${i}, uv);\n      }\n    `;if(g===u&&null==d)return s?`\n      float ${o}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${i}Shape[1] * ${i}Shape[2], ${i}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${i}TexShape[1], ${i}TexShape[0]);\n        return sampleTexture(${i}, uv);\n      }\n    `:`\n      float ${o}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${a[1]*a[2]}, ${a[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${g}.0, ${m}.0);\n        return sampleTexture(${i}, uv);\n      }\n    `;const w=di(i);return s?`\n    float ${o}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${y}\n      ${b}\n      ${x}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${i}TexShape[0], ${i}TexShape[1], index + ${w});\n      return sampleTexture(${i}, uv);\n    }\n  `:`\n    float ${o}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${l} + col * ${c} +\n          depth * ${u} + depth2;\n      vec2 uv = uvFromFlat(${m}, ${g}, index + ${w});\n      return sampleTexture(${i}, uv);\n    }\n  `}(n,t);case 5:return function(r){const s=r.shapeInfo.logicalShape,a=r.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),o=s[4],u=s[3]*o,c=s[2]*u,l=s[1]*c,{newShape:h,keptDims:p}=us(s);if(h.length<s.length){const b=["row","col","depth","depth2","depth3"];return`\n      ${So(Co(r,h))}\n      float ${i}(int row, int col, int depth, int depth2, int depth3) {\n        return ${i}(${$o(b,p)});\n      }\n    `}if(r.shapeInfo.isUniform)return`\n      float ${i}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${l}, ${c}, ${u}, ${o})) +\n          depth3;\n        ${To(r)}\n      }\n    `;const d=r.shapeInfo.flatOffset,f=r.shapeInfo.texShape,m=f[0],g=f[1];return g===l&&null==d?`\n      float ${i}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${c}, ${u}, ${o}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${g}.0, ${m}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `:g===o&&null==d?`\n      float ${i}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${s[1]*s[2]*s[3]},\n               ${s[2]*s[3]}, ${s[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${g}.0, ${m}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${i}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${l} + col * ${c} + depth * ${u} +\n          depth2 * ${o} + depth3 + ${di(a)};\n      vec2 uv = uvFromFlat(${m}, ${g}, index);\n      return sampleTexture(${a}, uv);\n    }\n  `}(n);case 6:return function(r){const s=r.shapeInfo.logicalShape,a=r.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),{newShape:o,keptDims:u}=us(s);if(o.length<s.length){const x=["row","col","depth","depth2","depth3","depth4"];return`\n      ${So(Co(r,o))}\n      float ${i}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${i}(${$o(x,u)});\n      }\n    `}const c=s[5],l=s[4]*c,h=s[3]*l,p=s[2]*h,d=s[1]*p;if(r.shapeInfo.isUniform)return`\n      float ${i}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${p}, ${h}, ${l})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${c}, 1)));\n        ${To(r)}\n      }\n    `;const f=r.shapeInfo.flatOffset,m=r.shapeInfo.texShape,g=m[0],y=m[1];return y===d&&null==f?`\n      float ${i}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${p}, ${h}, ${l}, ${c})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${y}.0, ${g}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `:y===c&&null==f?`\n      float ${i}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${s[1]*s[2]*s[3]*s[4]},\n               ${s[2]*s[3]*s[4]},\n               ${s[3]*s[4]},\n               ${s[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${y}.0, ${g}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${i}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${p} + depth * ${h} +\n          depth2 * ${l} + depth3 * ${c} + depth4 + ${di(a)};\n      vec2 uv = uvFromFlat(${g}, ${y}, index);\n      return sampleTexture(${a}, uv);\n    }\n  `}(n);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function kv(n,t){switch(n.shapeInfo.logicalShape.length){case 0:return function(e){const r=e.name;return`\n    vec4 ${"get"+r.charAt(0).toUpperCase()+r.slice(1)}() {\n      return ${jn().texture2D}(${r}, halfCR);\n    }\n  `}(n);case 1:return function(e,r){const s=e.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e.shapeInfo.texShape,o=jn();if(r)return`\n    vec4 ${a}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `;const u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];return`\n    vec4 ${a}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${u[0]}, ${u[1]}, index);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `}(n,t);case 2:return function(e,r){const s=e.shapeInfo.logicalShape,a=e.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),o=e.shapeInfo.texShape,u=o[0],c=o[1],l=jn();if(null!=o&&he(s,o))return r?`\n      vec4 ${i}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n\n        return ${l.texture2D}(${a}, uv);\n      }\n    `:`\n      vec4 ${i}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${c}.0, ${u}.0);\n\n        return ${l.texture2D}(${a}, uv);\n      }\n    `;if(r)return`\n    vec4 ${i}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${a}, uv);\n    }\n  `;const h=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`\n    vec4 ${i}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(s[1]/2)}, ${h[0]}, ${h[1]}, row, col);\n      return ${l.texture2D}(${a}, uv);\n    }\n  `}(n,t);case 3:return function(e,r){const s=e.shapeInfo.logicalShape,a=e.name,i="get"+a.charAt(0).toUpperCase()+a.slice(1),o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(1===s[0]){const f=[1,2],m=["b","row","col"];return`\n        ${kv(Co(e,s.slice(1)),r)}\n        vec4 ${i}(int b, int row, int col) {\n          return ${i}(${$o(m,f)});\n        }\n      `}const c=jn();if(r)return`\n    vec4 ${i}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${c.texture2D}(${a}, uv);\n    }\n  `;const l=u[0],h=u[1],p=Math.ceil(s[2]/2);return`\n    vec4 ${i}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${h}, ${p*Math.ceil(s[1]/2)}, ${p}, b, row, col);\n      return ${c.texture2D}(${a}, uv);\n    }\n  `}(n,t);default:return function(e,r){const s=e.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),i=jn();if(r)return`\n    vec4 ${a}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${s}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${s}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${i.texture2D}(${s}, uv);\n    }\n  `;const o=e.shapeInfo.logicalShape,u=o.length,c=e.shapeInfo.texShape,l=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)],h=l[0],p=l[1],d=Math.ceil(o[u-1]/2);let f=d*Math.ceil(o[u-2]/2),m="int b, int row, int col",g=`b * ${f} + (row / 2) * ${d} + (col / 2)`;for(let y=2;y<u-1;y++)m=`int b${y}, `+m,f*=o[u-y-1],g=`b${y} * ${f} + `+g;return`\n    vec4 ${a}(${m}) {\n      int index = ${g};\n      int texR = index / ${p};\n      int texC = index - texR * ${p};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${h});\n      return ${i.texture2D}(${s}, uv);\n    }\n  `}(n,t)}}const xA="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",wA="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",vA="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",kA="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function di(n){return`offset${n}`}function To(n){const t=n.name,e=nt(n.shapeInfo.logicalShape);return e<2?`return ${t};`:`\n    for (int i = 0; i < ${e}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function Ge(n){if(n<=1)return"int";if(2===n)return"ivec2";if(3===n)return"ivec3";if(4===n)return"ivec4";if(5===n)return"ivec5";if(6===n)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function tg(n,t,e){const{newShape:r,keptDims:s}=us(t),a=t.length,i=n&&3===a&&1===t[0],o=i?t.slice(1):r,u=!n&&a>1&&!he(t,e)&&r.length<a||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:s}}function Co(n,t){const e=JSON.parse(JSON.stringify(n));return e.shapeInfo.logicalShape=t,e}function $o(n,t){return t.map(e=>n[e]).join(", ")}function Nv(n,t,e){const r={},s={},a={},i=[];let o,u,c,l=null,h=null;h=n.getUniformLocation(e,"NAN",!1),1===Q().getNumber("WEBGL_VERSION")&&(l=n.getUniformLocation(e,"INFINITY",!1));const p=!1;for(let d=0;d<t.variableNames.length;d++){const f=t.variableNames[d];r[f]=n.getUniformLocation(e,f,p),r[`offset${f}`]=n.getUniformLocation(e,`offset${f}`,p),t.enableShapeUniforms&&(s[`${f}Shape`]=n.getUniformLocation(e,`${f}Shape`,p),a[`${f}TexShape`]=n.getUniformLocation(e,`${f}TexShape`,p))}return t.enableShapeUniforms&&(o=n.getUniformLocation(e,"outShape",p),c=n.getUniformLocation(e,"outShapeStrides",p),u=n.getUniformLocation(e,"outTexShape",p)),t.customUniforms&&t.customUniforms.forEach((d,f)=>{i[f]=n.getUniformLocation(e,d.name,p)}),{uniformLocations:r,customUniformLocations:i,infLoc:l,nanLoc:h,inShapesLocations:s,inTexShapesLocations:a,outShapeLocation:o,outShapeStridesLocation:c,outTexShapeLocation:u}}function Sv(n,t){if(n.length!==t.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${t.length} inputs`);n.forEach((e,r)=>{const s=e.logicalShape,a=t[r],i=a.shape;if(!he(s,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${i} must match`);if(e.isUniform&&a.isUniform)return;const o=e.texShape,u=a.isUniform?null:a.texData.texShape;if(!he(o,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${u} must match`)})}function qn(n){return Q().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}class NA{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=bu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=jn();this.outputShape=t,this.enableShapeUniforms=qn(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Zh(["r","c","d"],t):pi(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${e.output} = result;\n      }\n    `}}class SA{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=bu.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=jn();this.outputShape=t,this.enableShapeUniforms=qn(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Zh(["r","c","d"],t):pi(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${e.output} = result;\n      }\n    `}}class TA{constructor(t){this.variableNames=["A"],this.outTexUsage=Rr.DOWNLOAD;const e=jn();this.outputShape=t,this.userCode=`\n      ${wv}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class CA{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Rr.DOWNLOAD;const e=jn();this.outputShape=t,this.userCode=`\n      ${wv}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class $A{constructor(t,e=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=jn();this.outputShape=t,this.enableShapeUniforms=qn(this.outputShape.length);let s="result";e&&(s="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Qm(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class EA{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=jn();this.outputShape=t,this.enableShapeUniforms=qn(this.outputShape.length);let s="",a="result";e&&(a="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let o=0;o<=1;o++){const u=2*i+o;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${o} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {\n          localCoords[2] += ${o};\n          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {\n            localCoords[1] += ${i};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${r.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${u}] = values[0];\n            } else if (offset == 1) {\n              result[${u}] = values[1];\n            } else if (offset == 2) {\n              result[${u}] = values[2];\n            } else {\n              result[${u}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Qm(t)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${s}\n\n          ${r.output} = ${a};\n        }\n    `}}function vu(n,t,e,r,s,a){!function(u,c){const l=Q().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(u<=0||c<=0)throw new Error(`Requested texture size [${u}x${c}] is invalid.`);if(u>l||c>l)throw new Error(`Requested texture size [${u}x${c}] greater than WebGL maximum on this browser / GPU [${l}x${l}].`)}(t,e);const i=Ms(u=n,()=>u.createTexture(),"Unable to create WebGLTexture."),o=n.TEXTURE_2D;var u;return Ut(n,()=>n.bindTexture(o,i)),Ut(n,()=>n.texParameteri(o,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),Ut(n,()=>n.texParameteri(o,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),Ut(n,()=>n.texParameteri(o,n.TEXTURE_MIN_FILTER,n.NEAREST)),Ut(n,()=>n.texParameteri(o,n.TEXTURE_MAG_FILTER,n.NEAREST)),1===Q().getNumber("WEBGL_VERSION")?Ut(n,()=>n.texImage2D(o,0,r,t,e,0,s,a,null)):Ut(n,()=>n.texStorage2D(o,1,r,t,e)),Ut(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:i,texShape:[e,t]}}function Tv(n){return n.internalFormatFloat}function Cv(n){return n.internalFormatHalfFloat}function $v(n){return n.downloadTextureFormat}function Ev(n){return n.internalFormatPackedFloat}function Rv(n){return n.internalFormatPackedHalfFloat}class eg{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=Q().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,hi[e]=t):this.gl=is(e);let r="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===Q().getNumber("WEBGL_VERSION")){const i="OES_texture_half_float";if(this.textureFloatExtension=qh(this.gl,"OES_texture_float"),Ur(this.gl,i))this.textureHalfFloatExtension=qh(this.gl,i);else if(Q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(r),Ur(this.gl,s))this.colorBufferHalfFloatExtension=qh(this.gl,s);else if(Q().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(r="EXT_color_buffer_float",Ur(this.gl,r))this.colorBufferFloatExtension=this.gl.getExtension(r);else{if(!Ur(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}var a;this.vertexBuffer=function AA(n){return function(t,e){const r=Ms(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return Ut(t,()=>t.bindBuffer(t.ARRAY_BUFFER,r)),Ut(t,()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW)),r}(n,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function FA(n){return function(t,e){const r=Ms(t,()=>t.createBuffer(),"Unable to create WebGLBuffer");return Ut(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,r)),Ut(t,()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW)),r}(n,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=Ms(a=this.gl,()=>a.createFramebuffer(),"Unable to create WebGLFramebuffer."),this.textureConfig=jm(this.gl,this.textureHalfFloatExtension)}get debug(){return Q().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;Ut(t,()=>t.finish()),Ut(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),Ut(t,()=>t.deleteFramebuffer(this.framebuffer)),Ut(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),Ut(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),Ut(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(r,s,a,i){const[o,u]=xu(s,a);return vu(r,o,u,Tv(i),i.textureFormatFloat,r.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(r,s,a,i){const[o,u]=xu(s,a);return vu(r,o,u,Cv(i),i.textureFormatFloat,i.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(r,s,a,i){const[o,u]=xu(s,a);return vu(r,o,u,$v(i),r.RGBA,r.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){var r,s,a;this.throwIfDisposed(),s=t,a=e,Ut(r=this.gl,()=>r.bindTexture(r.TEXTURE_2D,s)),a.data instanceof Uint8Array?2===Q().getNumber("WEBGL_VERSION")?Ut(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,a.width,a.height,r.RGBA,r.UNSIGNED_BYTE,a.data)):Ut(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,a.width,a.height,0,r.RGBA,r.UNSIGNED_BYTE,a.data)):2===Q().getNumber("WEBGL_VERSION")?Ut(r,()=>r.texSubImage2D(r.TEXTURE_2D,0,0,0,r.RGBA,r.UNSIGNED_BYTE,a)):Ut(r,()=>r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,a)),Ut(r,()=>r.bindTexture(r.TEXTURE_2D,null))}uploadDenseMatrixToTexture(t,e,r,s){this.throwIfDisposed(),function(a,i,o,u,c,l){let h,p,d;Ut(a,()=>a.bindTexture(a.TEXTURE_2D,i)),c instanceof Uint8Array?(h=new Uint8Array(o*u*4),p=a.UNSIGNED_BYTE,d=a.RGBA):(h=new Float32Array(o*u*4),p=a.FLOAT,d=l.internalFormatPackedFloat),h.set(c),2===Q().getNumber("WEBGL_VERSION")?Ut(a,()=>a.texSubImage2D(a.TEXTURE_2D,0,0,0,o,u,a.RGBA,p,h)):Ut(a,()=>a.texImage2D(a.TEXTURE_2D,0,d,o,u,0,a.RGBA,p,h)),Ut(a,()=>a.bindTexture(a.TEXTURE_2D,null))}(this.gl,t,e,r,s,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(r,s,a,i){const[o,u]=ko(s,a);return vu(r,o,u,Rv(i),r.RGBA,i.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(r,s,a,i){const[o,u]=ko(s,a);return vu(r,o,u,Ev(i),r.RGBA,r.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(bv(this.gl,this.framebuffer),this.outputTexture=null),Ut(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,r){return this.downloadMatrixDriver(t,()=>function(s,a,i,o){const[u,c]=xu(a,i),l=new Uint8Array(a*i*4);return Ut(s,()=>s.readPixels(0,0,u,c,o.downloadTextureFormat,s.UNSIGNED_BYTE,l)),new Float32Array(l.buffer)}(this.gl,e,r,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,r,s,a,i){return function DA(n,t,e,r,s,a,i,o){const u=n,c=new Float32Array(function(l,h){const[p,d]=ko(l,h);return p*d*4}(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}(this.gl,t,0,0,0,a,i)}downloadFloat32MatrixFromBuffer(t,e){return function(r,s,a){const i=r,o=new Float32Array(a);return i.bindBuffer(i.PIXEL_PACK_BUFFER,s),i.getBufferSubData(i.PIXEL_PACK_BUFFER,0,o),i.bindBuffer(i.PIXEL_PACK_BUFFER,null),o}(this.gl,t,e)}createBufferFromTexture(t,e,r){this.bindTextureToFrameBuffer(t);const s=function(a,i,o,u){const c=a.createBuffer();Ut(a,()=>a.bindBuffer(a.PIXEL_PACK_BUFFER,c));const l=16*i*o;return Ut(a,()=>a.bufferData(a.PIXEL_PACK_BUFFER,l,a.STREAM_READ)),Ut(a,()=>a.readPixels(0,0,o,i,a.RGBA,a.FLOAT,0)),Ut(a,()=>a.bindBuffer(a.PIXEL_PACK_BUFFER,null)),c}(this.gl,e,r);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,r;if(Q().getBool("WEBGL_FENCE_API_ENABLED")){const s=t,a=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),r=()=>{const i=s.clientWaitSync(a,0,0);return i===s.ALREADY_SIGNALED||i===s.CONDITION_SATISFIED},e=a}else Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),r=()=>this.isQueryAvailable(e,Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):r=()=>!0;return{query:e,isFencePassed:r}}downloadMatrixFromPackedTexture(t,e,r){return this.downloadMatrixDriver(t,()=>function(s,a,i){const o=new Float32Array(a*i*4);return Ut(s,()=>s.readPixels(0,0,i,a,s.RGBA,s.FLOAT,o)),o}(this.gl,e,r))}createProgram(t){this.throwIfDisposed();const e=this.gl;null==this.vertexShader&&(this.vertexShader=function RA(n){const t=jn();return function(e,r){const s=Ms(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Ut(e,()=>e.shaderSource(s,r)),Ut(e,()=>e.compileShader(s)),!1===e.getShaderParameter(s,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(s)),new Error("Failed to compile vertex shader.");return s}(n,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e));const r=Ms(s=e,()=>s.createProgram(),"Unable to create WebGLProgram.");var s;return Ut(e,()=>e.attachShader(r,this.vertexShader)),Ut(e,()=>e.attachShader(r,t)),function(s,a){if(Ut(s,()=>s.linkProgram(a)),!Q().get("ENGINE_COMPILE_ONLY")&&!1===s.getProgramParameter(a,s.LINK_STATUS))throw console.log(s.getProgramInfoLog(a)),new Error("Failed to link vertex and fragment shaders.")}(e,r),this.debug&&qm(e,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(s,a,i){return Ut(s,()=>s.bindBuffer(s.ARRAY_BUFFER,i)),yv(s,a,"clipSpacePos",i,3,20,0)&&yv(s,a,"uv",i,2,20,12)}(e,this.program,this.vertexBuffer)),r}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&Ut(this.gl,()=>this.gl.deleteProgram(t))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&qm(this.gl,this.program),Ut(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,r=!0){return this.throwIfDisposed(),r?(a=t,Ms(s=this.gl,()=>s.getUniformLocation(a,i),'uniform "'+(i=e)+'" not present in program.')):function(s,a,i){return s.getUniformLocation(a,i)}(this.gl,t,e);var s,a,i}getAttributeLocation(t,e){return this.throwIfDisposed(),Ut(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,r){this.throwIfDisposed(),this.throwIfNoProgram(),function fA(n,t,e,r){Ut(n,()=>{return a=t,function mA(n,t){const e=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+n.TEXTURE0;if(r<n.TEXTURE0||r>e)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${e}].`)}(s=n,i=r),Ut(s,()=>s.activeTexture(s.TEXTURE0+i)),void Ut(s,()=>s.bindTexture(s.TEXTURE_2D,a));var s,a,i}),Ut(n,()=>n.uniform1i(e,r))}(this.gl,t,e,r)}setOutputMatrixTexture(t,e,r){this.setOutputMatrixTextureDriver(t,r,e)}setOutputPackedMatrixTexture(t,e,r){this.throwIfDisposed();const[s,a]=ko(e,r);this.setOutputMatrixTextureDriver(t,s,a)}setOutputMatrixWriteRegion(t,e,r,s){this.setOutputMatrixWriteRegionDriver(r,t,s,e)}setOutputPackedMatrixWriteRegion(t,e,r,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&qm(this.gl,this.program),Kh(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),Ut(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Ut(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=qh(this.gl,2===Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),a=r.createQuery();return r.beginQuery(s.TIME_ELAPSED_EXT,a),a}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,r=this.getQueryTimerExtensionWebGL2();return void e.endQuery(r.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await Mu(()=>this.disposed||this.isQueryAvailable(t,Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const r=this.gl;return r.getQueryParameter(t,r.QUERY_RESULT)/1e6}{const r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(t,r.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const r=this.gl,s=this.getQueryTimerExtensionWebGL2(),a=r.getQueryParameter(t,r.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),a&&!this.disjoint}{const r=this.getQueryTimerExtensionWebGL1(),s=r.getQueryObjectEXT(t,r.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),s&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=function(e){let r=0;for(;r<e.length&&e[r]();++r);return r-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:r}=this.itemsToPoll[e];r()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let r;"setTimeoutCustom"in Q().platform&&(r=Q().platform.setTimeoutCustom.bind(Q().platform)),Mu(()=>(this.pollItems(),0===this.itemsToPoll.length),()=>0,null,r)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Km(this.gl,t,this.framebuffer),this.debug&&Kh(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Km(this.gl,this.outputTexture,this.framebuffer),this.debug&&Kh(this.gl)):bv(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const r=e();return this.unbindTextureToFrameBuffer(),r}setOutputMatrixTextureDriver(t,e,r){this.throwIfDisposed();const s=this.gl;Km(s,t,this.framebuffer),this.debug&&Kh(s),this.outputTexture=t,Ut(s,()=>s.viewport(0,0,e,r)),Ut(s,()=>s.scissor(0,0,e,r))}setOutputMatrixWriteRegionDriver(t,e,r,s){this.throwIfDisposed(),Ut(this.gl,()=>this.gl.scissor(t,e,r,s))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:_A,bincountImpl:Av,bincountReduceImpl:OA,castImpl:MA,ceilImpl:LA,concatImpl:zA,equalImpl:PA,expImpl:BA,expm1Impl:WA,floorImpl:VA,gatherNdImpl:UA,gatherV2Impl:GA,greaterImpl:HA,greaterEqualImpl:jA,lessImpl:qA,lessEqualImpl:KA,linSpaceImpl:XA,logImpl:YA,maxImpl:ZA,maximumImpl:JA,minimumImpl:QA,multiplyImpl:t4,negImpl:e4,notEqualImpl:n4,prodImpl:r4,raggedGatherImpl:s4,raggedTensorToTensorImpl:a4,rangeImpl:i4,rsqrtImpl:o4,scatterImpl:l4,sigmoidImpl:u4,simpleAbsImpl:Fv,sliceImpl:c4,sparseFillEmptyRowsImpl:h4,sparseReshapeImpl:p4,sparseSegmentReductionImpl:Dv,sqrtImpl:d4,stridedSliceImpl:f4,stringNGramsImpl:m4,stringSplitImpl:g4,stringToHashBucketFastImpl:y4,subImpl:b4,tileImpl:x4,topKImpl:w4,transposeImpl:ng,uniqueImpl:v4}=E;function _v(n,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${n}.${e}`)}function Kn(n,t){return 1===t?[n]:_v(n,t)}class k4{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=qn(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=Kn("rc",this.rank),r=Ge(this.rank),s=this.getOutOfBoundsCondition(e),a=this.getSetup(e),i=this.getOutput(e);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}getSourceCoordsArr(t){const e=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let i=2;i<this.rank;i++)a=`${t[t.length-1-i]},`+a;e.push(a)}return e}getOutOfBoundsCondition(t){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let r=this.rank-2;r<this.rank;r++)e+=`${t[r]} >= ${this.enableShapeUniforms?`outShape[${r}]`:this.outputShape[r]}`,r<this.rank-1&&(e+="||");return e}getSetup(t){if(1===this.rank)return"";const e=t.slice(-2);return`\n      int r = ${e[0]};\n      int c = ${e[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1]};\n      bool rEdge = rp1 >= ${this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2]};\n    `}getOutput(t){const e=this.getSourceCoordsArr(t);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),\n            cEdge ? 0. : getA(${e[1]}),\n            rEdge ? 0. : getA(${e[2]}),\n            rEdge || cEdge ? 0. : getA(${e[3]})`}}class Ov{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=qn(this.outputShape.length);let r="";for(let i=0;i<4;i++){let o="thisRC = rc;";i%2==1&&(o+="thisRC.z += 1;"),i>1&&(o+="thisRC.y += 1;"),r+=`\n        ${o}\n        ${i>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${i>0?"}":""}\n      `}var s,a;this.userCode=`\n      ${s=e,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?function yA(n,t,e="index"){const r=function(s,a){const i=s.length,o=s.map(c=>`${a}[${c}]`),u=new Array(i-1);u[i-2]=o[i-1];for(let c=i-3;c>=0;--c)u[c]=`(${u[c+1]} * ${o[c+1]})`;return u}(n.map((s,a)=>a),t);return r.map((s,a)=>`int ${n[a]} = ${e} / ${r[a]}; ${a===r.length-1?`int ${n[a+1]} = ${e} - ${n[a]} * ${r[a]}`:`index -= ${n[a]} * ${r[a]}`};`).join("")}(["r","c","d"],"inputShape"):pi(["r","c","d"],s)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Qm(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};\n\n        ${r}\n\n        setOutput(result);\n      }\n    `}}class I4{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,r){const s=Lv(e,r),a=zv(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const i=Mv(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const u=this.freeTextures[a].shift();return this.usedTextures[a].push(u),u}let o;return s===_n.PACKED_2X2_FLOAT32?o=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):s===_n.PACKED_2X2_FLOAT16?o=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):s===_n.UNPACKED_FLOAT32?o=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):s===_n.UNPACKED_FLOAT16?o=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):s===_n.PACKED_4X1_UNSIGNED_BYTE&&(o=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[a].push(o),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),o}releaseTexture(t,e,r,s){if(null==this.freeTextures)return;const a=Lv(r,s),i=zv(e,a,s);i in this.freeTextures||(this.freeTextures[i]=[]);const o=Mv(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,s),u=Q().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=o):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const c=this.usedTextures[i],l=c.indexOf(t);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(l,1),this.log()}log(){if(!this.logEnabled)return;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${this.numFreeTextures+this.numUsedTextures})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Mv(n,t,e,r,s){const a=function(u,c){switch(u){case _n.PACKED_2X2_FLOAT32:return Ev(c);case _n.PACKED_2X2_FLOAT16:return Rv(c);case _n.UNPACKED_FLOAT32:return Tv(c);case _n.UNPACKED_FLOAT16:return Cv(c);case _n.PACKED_4X1_UNSIGNED_BYTE:return $v(c);default:throw new Error(`Unknown physical texture type ${u}`)}}(t,r);let i;if(s){const[u,c]=ko(n[0],n[1]);i=u*c}else{const[u,c]=xu(n[0],n[1]);i=u*c}return i*function(u,c){if(c===u.R32F)return 4;if(c===u.R16F)return 2;if(c===u.RGBA32F||c===u.RGBA)return 16;if(c===u.RGBA16F)return 8;if(c===u.RGBA8)return 4;throw new Error(`Unknown internal format ${c}`)}(e,a)}function Lv(n,t){if(n===Rr.UPLOAD)return _n.PACKED_2X2_FLOAT32;if(n===Rr.RENDER||null==n)return e=t,Q().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?_n.PACKED_2X2_FLOAT32:_n.UNPACKED_FLOAT32:e?_n.PACKED_2X2_FLOAT16:_n.UNPACKED_FLOAT16;var e;if(n===Rr.DOWNLOAD||n===Rr.PIXELS)return _n.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function zv(n,t,e){return`${n[0]}_${n[1]}_${t}_${e}`}class Ls{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=qn(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Gr="if (isnan(x)) return x;",Pv="return abs(x);",Eo="return x;";class fi{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=qn(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class _4{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=qn(this.outputShape.length);const e=t.length,r=Kn("rc",e),s=Ge(e),a=function(u,c){if(1===u)return"rc";let l="";for(let h=0;h<u;h++)l+=c[h],h<u-1&&(l+=",");return l}(e,r),i=r.slice(-2),o=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${o}));\n      }\n    `}}const O4=nf,rg={},M4=Q().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Jh extends Rt{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Q().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(null!=t){if(t instanceof eg)e=t;else{const s=is(Q().getNumber("WEBGL_VERSION"),t);e=new eg(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=is(Q().getNumber("WEBGL_VERSION"));e=new eg(s),this.binaryCache=((r=Q().getNumber("WEBGL_VERSION"))in rg||(rg[r]={}),rg[r]),this.gpgpuCreatedLocally=!0}var r;this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new I4(this.gpgpu),this.numMBBeforeWarning=null==Q().global.screen?1024:Q().global.screen.height*Q().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new ot(this,ia())}nextDataId(){return Jh.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(t,e,r){if((Q().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Q().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===r&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:e,dtype:r,values:t,usage:Rr.UPLOAD,refCount:1}),s}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}move(t,e,r,s,a){if(Q().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:r,dtype:s,values:e,usage:Rr.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:r,dtype:s,complexTensorInfos:a,slice:i,shape:o,isPacked:u}=e;if(null!=i){let p;p=u?new fi(o,Eo):new Ls(o,Eo);const d=this.runWebGLProgram(p,[{dataId:t,shape:o,dtype:s}],s),f=this.readSync(d.dataId);return this.disposeIntermediateTensorInfo(d),f}if(null!=r)return this.convertAndCacheOnCPU(t);if("string"===s)return r;const c=null!=this.activeTimers;let l,h;return c&&(l=zn()),h="complex64"===s?Fs(this.readSync(a.real.dataId),this.readSync(a.imag.dataId)):this.getValuesFromTexture(t),c&&(this.downloadWaitMs+=zn()-l),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){const f=this.pendingRead.get(t);return new Promise(m=>f.push(m))}const e=this.texData.get(t),{values:r,shape:s,slice:a,dtype:i,complexTensorInfos:o,isPacked:u}=e;if(null!=a){let f;f=u?new fi(s,Eo):new Ls(s,Eo);const m=this.runWebGLProgram(f,[{dataId:t,shape:s,dtype:i}],i),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(null!=r)return this.convertAndCacheOnCPU(t);if(Q().getBool("DEBUG")&&!Q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Q().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,l,h=null;if("complex64"!==i&&Q().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(t);const f=this.texData.get(c.dataId);h=this.gpgpu.createBufferFromTexture(f.texture.texture,...jh(s))}if(this.pendingRead.set(t,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const f=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]);l=Fs(f[0],f[1])}else if(null==h)l=this.getValuesFromTexture(t);else{const f=nt(s);l=this.gpgpu.downloadFloat32MatrixFromBuffer(h,f)}if(null!=c&&this.disposeIntermediateTensorInfo(c),null!=h){const f=this.gpgpu.gl;Ut(f,()=>f.deleteBuffer(h))}const p=this.convertAndCacheOnCPU(t,l),d=this.pendingRead.get(t);return this.pendingRead.delete(t),d.forEach(f=>f(p)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&ia().removeDataId(t,this),this.pendingDeletes--),p}readToGPU(t,e={}){const r=this.texData.get(t),{values:s,shape:a,slice:i,dtype:o,isPacked:u,texture:c}=r;if("complex64"===o)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let d;d=u?new fi(a,Eo):new Ls(a,Eo);const f=this.runWebGLProgram(d,[{dataId:t,shape:a,dtype:o}],o),m=this.readToGPU(f,e);return this.disposeIntermediateTensorInfo(f),m}if(null==c)throw null!=s?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(t,e.customTexShape),h=ia().makeTensorFromTensorInfo(l),p=this.texData.get(l.dataId);return Object.assign({tensorRef:h},p.texture)}bufferSync(t){const e=this.readSync(t.dataId);if("string"===t.dtype)try{const r=e.map(s=>ta(s));return we(t.shape,t.dtype,r)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return we(t.shape,t.dtype,e)}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const r=t[e];if(!pA(r))throw Q().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${r} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${r} cannot be represented on this device.`)}}getValuesFromTexture(t){const{shape:e,dtype:r,isPacked:s}=this.texData.get(t),a=nt(e);if(Q().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const p=this.decode(t),d=this.texData.get(p.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(d.texture.texture,...jh(e)).subarray(0,a);return this.disposeIntermediateTensorInfo(p),f}const i=Q().getBool("WEBGL_PACK")&&!0===s,o=i?Xm(e):e,u=i?new CA(o):new TA(o),c=this.runWebGLProgram(u,[{shape:o,dtype:r,dataId:t}],"float32"),l=this.texData.get(c.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(c),h}timerAvailable(){return Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,r=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=r,s=!0):this.activeTimers.push(r),this.activeTimers=r,t();const a=vn(this.activeTimers.map(u=>u.query)).filter(u=>null!=u),i=vn(this.activeTimers.map(u=>u.name)).filter(u=>null!=u);this.activeTimers=e,s&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const u=await Promise.all(a);o.kernelMs=function(c){let l=0;for(let h=0;h<c.length;h++)l+=c[h];return l}(u),o.getExtraProfileInfo=()=>u.map((c,l)=>({name:i[l],ms:c})).map(c=>`${c.name}: ${c.ms}`).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:zn(),endMs:null}}endTimer(t){return Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=zn(),t)}async getQueryTime(t){return Q().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.waitForQueryAndGetTime(t):t.endMs-t.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:r}=this.texData.get(t);return null!=r&&(this.disposeData(r.real.dataId,e),this.disposeData(r.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:r,texShape:s,usage:a,isPacked:i,slice:o}=this.texData.get(t),u=o&&o.origDataId||t,c=this.dataRefCount.get(u);c>1?this.dataRefCount.set(u,c-1):(this.dataRefCount.delete(u),null!=e&&(this.numBytesInGPU-=this.computeBytes(s,r),this.textureManager.releaseTexture(e,s,a,i)));const l=this.texData.get(t);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=M4){return Q().getBool("WEBGL_CPU_FORWARD")&&t.every(r=>null==this.texData.get(r.dataId).texture&&nt(r.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){vr("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return O4(t.shape,e)}packedUnaryOp(t,e,r){const s=new fi(t.shape,e),a=this.compileAndRun(s,[t],r);return ia().makeTensorFromTensorInfo(a)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const s=Fv(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,s)}if(Q().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Pv,t.dtype);const e=new Ls(t.shape,Pv),r=this.compileAndRun(e,[t]);return ia().makeTensorFromTensorInfo(r)}makeTensorInfo(t,e,r){let s;if("string"===e&&null!=r&&r.length>0&&Ea(r[0])){const a=r.map(i=>Qs(i));s=this.write(a,t,e)}else s=this.write(r,t,e);return this.texData.get(s).usage=null,{dataId:s,shape:t,dtype:e}}makeOutput(t,e,r){return ia().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,r),this)}unpackTensor(t){const e=new _4(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new k4(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const r=[Io(t.shape),...No(t.shape)],s={dtype:t.dtype,shape:r,dataId:t.dataId},a=[Io(e),...No(e)],i=new Ov(a,r),u=this.runWebGLProgram(i,[s],t.dtype,[r],!0);return{dataId:u.dataId,shape:e,dtype:u.dtype}}decode(t,e){const r=this.texData.get(t),{isPacked:s,shape:a,dtype:i}=r;null!=e&&I(nt(a)<=e[0]*e[1]*4,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.");const o=Xm(a);let u;u=s?new SA(o):new NA(o);const c=[e??jh(o)];return{dtype:i,shape:a,dataId:this.runWebGLProgram(u,[{shape:o,dtype:i,dataId:t}],i,c,!0,e).dataId}}runWebGLProgram(t,e,r,s,a=!1,i){const o=this.makeTensorInfo(t.outputShape,r),u=this.texData.get(o.dataId);if(t.packedOutput&&(u.isPacked=!0),t.outPackingScheme===bu.DENSE){const y=i??jh(t.outputShape);u.texShape=y.map(b=>2*b)}if(null!=t.outTexUsage&&(u.usage=t.outTexUsage),0===nt(o.shape))return u.values=cn(o.dtype,0),o;const c=[],l=e.map(y=>{if("complex64"===y.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let b=this.texData.get(y.dataId);if(null==b.texture){if(!t.packedInputs&&nt(y.shape)<=Q().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:y.shape,texData:null,isUniform:!0,uniformValues:b.values};t.packedInputs&&(b.isPacked=!0,b.shape=y.shape)}if(this.uploadToGPU(y.dataId),!!b.isPacked!=!!t.packedInputs)y=b.isPacked?this.unpackTensor(y):this.packTensor(y),c.push(y),b=this.texData.get(y.dataId);else if(b.isPacked&&!Yh(b.shape,y.shape)){const x=y,w=y.shape;y.shape=b.shape,y=this.packedReshape(y,w),c.push(y),b=this.texData.get(y.dataId),x.shape=w}return{shape:y.shape,texData:b,isUniform:!1}});this.uploadToGPU(o.dataId);const h={shape:o.shape,texData:u,isUniform:!1},p=function(y,b,x){let w="";b.concat(x).forEach($=>{const C=null!=$.texData&&null!=$.texData.slice&&$.texData.slice.flatOffset>0;if(y.enableShapeUniforms&&!$.isUniform){const R=$.texData.texShape,{useSqueezeShape:A,uniformShape:_,keptDims:z}=tg(y.packedInputs,$.shape,R);let V="",X="",J="";if(1===_.length&&y.packedInputs){const ft=[Math.ceil(R[0]/2),Math.ceil(R[1]/2)];V=`${ft[0]>1}_${ft[1]>1}`}else if(2!==_.length||y.packedInputs){if(_.length>2&&!y.packedInputs){const ft=jt(_);J=`${ft[0]===R[1]}_${ft[ft.length-1]===R[1]}`}}else X=`${_[0]>1}_${_[1]>1}`;const Y=$.shape.length,et=2===_.length&&he($.shape,R),rt=1===nt($.shape),at=Zi($.shape,x.shape),dt=!y.packedInputs&&Y===x.shape.length&&he(R,x.texData.texShape);w+=`${Y}_${dt}_${A?z:""}_${_.length}_${rt}_${at}_${et}_${V}_${X}_${J}_${y.packedInputs||_.length>2?"":`${R[0]>1}_${R[1]>1}`}_${C}`}else w+=`${$.shape}_${$.isUniform?"uniform":$.texData.texShape}_${C}`});let N=y.constructor.name;return N+="_"+w+"_"+y.userCode+`${Q().getNumber("WEBGL_VERSION")}`,N}(t,l,h),d=this.getAndSaveBinary(p,()=>function IA(n,t,e,r){const s=e.map((l,h)=>{const p={logicalShape:l.shape,texShape:l.isUniform?null:l.texData.texShape,isUniform:l.isUniform,isPacked:!l.isUniform&&l.texData.isPacked,flatOffset:null};return null!=l.texData&&null!=l.texData.slice&&l.texData.slice.flatOffset>0&&(p.flatOffset=l.texData.slice.flatOffset),{name:t.variableNames[h],shapeInfo:p}}),a=s.map(l=>l.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=bA(s,i,t),u=function(l,h){const p=Ms(l,()=>l.createShader(l.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Ut(l,()=>l.shaderSource(p,h)),Ut(l,()=>l.compileShader(p)),Q().get("ENGINE_COMPILE_ONLY"))return p;if(!1===l.getShaderParameter(p,l.COMPILE_STATUS))throw gv(h,l.getShaderInfoLog(p)),new Error("Failed to compile fragment shader.");return p}(n.gl,o),c=n.createProgram(u);return Q().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:o,webGLProgram:c,inShapeInfos:a,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:u,source:o,webGLProgram:c,inShapeInfos:a,outShapeInfo:i},Nv(n,t,c))}(this.gpgpu,t,l,h)),f=null!=this.activeTimers;let m;f&&(m=this.startTimer()),Q().get("ENGINE_COMPILE_ONLY")||function(y,b,x,w,k){b.program.enableShapeUniforms||(Sv(b.inShapeInfos,x),Sv([b.outShapeInfo],[w]));const N=w.texData.texture,$=w.texData.texShape;w.texData.isPacked?y.setOutputPackedMatrixTexture(N.texture,$[0],$[1]):y.setOutputMatrixTexture(N.texture,$[0],$[1]),y.setProgram(b.webGLProgram),1===Q().getNumber("WEBGL_VERSION")&&null!==b.infLoc&&y.gl.uniform1f(b.infLoc,1/0),null!==b.nanLoc&&y.gl.uniform1f(b.nanLoc,NaN),x.forEach((R,A)=>{const _=b.program.variableNames[A],z=b.uniformLocations[_],V=b.uniformLocations[`offset${_}`],X=b.inShapesLocations[`${_}Shape`],J=b.inTexShapesLocations[`${_}TexShape`];if(X){const{uniformShape:Y}=tg(b.program.packedInputs,R.shape,R.texData.texShape);switch(Y.length){case 1:y.gl.uniform1iv(X,new Int32Array(Y));break;case 2:y.gl.uniform2iv(X,new Int32Array(Y));break;case 3:y.gl.uniform3iv(X,new Int32Array(Y));break;case 4:y.gl.uniform4iv(X,new Int32Array(Y))}}if(J&&y.gl.uniform2i(J,R.texData.texShape[0],R.texData.texShape[1]),null!=z)if(R.isUniform)if(nt(R.shape)<2)y.gl.uniform1f(z,R.uniformValues[0]);else{let Y=R.uniformValues;Y instanceof Float32Array||(Y=new Float32Array(Y)),y.gl.uniform1fv(z,Y)}else null!=R.texData.slice&&null!=V&&y.gl.uniform1i(V,R.texData.slice.flatOffset),y.setInputMatrixTexture(R.texData.texture.texture,z,A)});const C=b.outShapeLocation;if(C)switch(w.shape.length){case 1:y.gl.uniform1iv(C,new Int32Array(w.shape));break;case 2:y.gl.uniform2iv(C,new Int32Array(w.shape));break;case 3:y.gl.uniform3iv(C,new Int32Array(w.shape));break;case 4:y.gl.uniform4iv(C,new Int32Array(w.shape))}if(b.outShapeStridesLocation){const R=jt(w.shape);switch(w.shape.length){case 2:y.gl.uniform1iv(b.outShapeStridesLocation,new Int32Array(R));break;case 3:y.gl.uniform2iv(b.outShapeStridesLocation,new Int32Array(R));break;case 4:y.gl.uniform3iv(b.outShapeStridesLocation,new Int32Array(R))}}b.outTexShapeLocation&&y.gl.uniform2i(b.outTexShapeLocation,w.texData.texShape[0],w.texData.texShape[1]),b.program.customUniforms&&k&&b.program.customUniforms.forEach((R,A)=>{const _=b.customUniformLocations[A],z=k[A];if("float"===R.type)y.gl.uniform1fv(_,z);else if("vec2"===R.type)y.gl.uniform2fv(_,z);else if("vec3"===R.type)y.gl.uniform3fv(_,z);else if("vec4"===R.type)y.gl.uniform4fv(_,z);else if("int"===R.type)y.gl.uniform1iv(_,z);else if("ivec2"===R.type)y.gl.uniform2iv(_,z);else if("ivec3"===R.type)y.gl.uniform3iv(_,z);else{if("ivec4"!==R.type)throw Error(`uniform type ${R.type} is not supported yet.`);y.gl.uniform4iv(_,z)}}),y.executeProgram()}(this.gpgpu,d,l,h,s),c.forEach(y=>this.disposeIntermediateTensorInfo(y)),f&&(m=this.endTimer(m),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(m)}));const g=Q().get("WEBGL_FLUSH_THRESHOLD");if(g>0){const y=zn();y-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=y)}if(!Q().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&!1===a){const y=this.unpackTensor(o);return this.disposeIntermediateTensorInfo(o),y}return o}compileAndRun(t,e,r,s,a=!1){return this.runWebGLProgram(t,e,r=r||e[0].dtype,s,a)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Q().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),null!=this.canvas&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=K(()=>{if(!Q().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=Q().getBool("DEBUG");Q().set("DEBUG",!1);const e=this.abs(Qt(1e-8)).dataSync()[0];if(Q().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:r,dtype:s,values:a,texture:i,usage:o,isPacked:u}=e;if(null!=i)return;const c=null!=this.activeTimers;let l;c&&(l=zn());let h=e.texShape;if(null==h&&(h=function(p,d=!1){let f=Q().getNumber("WEBGL_MAX_TEXTURE_SIZE"),m=Q().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");m===1/0&&Q().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(m=f/2),d&&(f*=2,m*=2,1===(p=p.map((x,w)=>w>=p.length-2?ke(p[w]):p[w])).length&&(p=[2,p[0]])),2!==p.length&&(p=us(p).newShape);let g=nt(p),y=null;p.length<=1&&g<=f?y=[1,g]:2===p.length&&p[0]<=f&&p[1]<=f?y=p:3===p.length&&p[0]*p[1]<=f&&p[2]<=f?y=[p[0]*p[1],p[2]]:3===p.length&&p[0]<=f&&p[1]*p[2]<=f?y=[p[0],p[1]*p[2]]:4===p.length&&p[0]*p[1]*p[2]<=f&&p[3]<=f?y=[p[0]*p[1]*p[2],p[3]]:4===p.length&&p[0]<=f&&p[1]*p[2]*p[3]<=f&&(y=[p[0],p[1]*p[2]*p[3]]);const b=null!=y&&Math.max(...y)>m&&Math.min(...y)<=(d?2:1)&&Math.min(...y)>0;if(null==y||b)if(d){const x=Io(p);let w=2,k=2;p.length&&([w,k]=No(p)),g=x*(w/2)*(k/2),y=zo(g).map(N=>2*N)}else y=zo(g);return y}(r,u),e.texShape=h),null!=a){const p=Xm(r);let d,f=h[1],m=h[0];const g=a instanceof Uint8Array||a instanceof Uint8ClampedArray;!u&&g||([f,m]=ko(h[0],h[1])),d=u?new EA(p,g):new $A(p,g);const y=g?[m,f]:h,b=this.makeTensorInfo(y,s),x=this.texData.get(b.dataId);x.usage=g?Rr.PIXELS:Rr.UPLOAD,x.texShape=y,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(b.dataId),f,m,a);const N=this.runWebGLProgram(d,[b],s,[[m,f]],!0),$=this.texData.get(N.dataId);e.texShape=$.texShape,e.isPacked=$.isPacked,e.usage=$.usage,Q().get("ENGINE_COMPILE_ONLY")?this.disposeData(N.dataId):(e.texture=$.texture,e.values=null,this.texData.delete(N.dataId)),this.disposeIntermediateTensorInfo(b),c&&(this.uploadWaitMs+=zn()-l)}else{const p=this.acquireTexture(h,o,s,u);e.texture=p}}convertAndCacheOnCPU(t,e){const r=this.texData.get(t),{dtype:s}=r;return this.releaseGPUData(t),null!=e&&(r.values=function(a,i){if("float32"===i||"complex64"===i)return a;if("int32"===i||"bool"===i){const o="int32"===i?new Int32Array(a.length):new Uint8Array(a.length);for(let u=0;u<o.length;++u)o[u]=Math.round(a[u]);return o}throw new Error(`Unknown dtype ${i}`)}(e,s)),r.values}acquireTexture(t,e,r,s){if(this.numBytesInGPU+=this.computeBytes(t,r),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const a=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${a} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,s)}computeBytes(t,e){return t[0]*t[1]*Po(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}for(const[,e]of Object.entries(this.binaryCache)){const r=new Promise(s=>{try{this.checkCompletion_(e),s(!0)}catch(a){throw a}});t.push(r)}return Promise.all(t)}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await Oy(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(!1===this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(gv(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const[,t]of Object.entries(this.binaryCache)){const{uniformLocations:e,customUniformLocations:r,infLoc:s,nanLoc:a,inShapesLocations:i,inTexShapesLocations:o,outShapeLocation:u,outShapeStridesLocation:c,outTexShapeLocation:l}=Nv(this.gpgpu,t.program,t.webGLProgram);t.uniformLocations=e,t.customUniformLocations=r,t.infLoc=s,t.nanLoc=a,t.inShapesLocations=i,t.inTexShapesLocations=o,t.outShapeLocation=u,t.outShapeStridesLocation=c,t.outTexShapeLocation=l}}}Jh.nextDataId=0,Vg()&&S0("webgl",()=>new Jh,2);const sg="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class Ro{constructor(t,e,r){this.variableNames=["A","B"],this.outputShape=de(e,r),this.enableShapeUniforms=qn(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const ku="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class Iu{constructor(t,e,r,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=de(e,r);const a=this.outputShape.length;this.enableShapeUniforms=qn(a);let i="";if(s)if(0===a||1===nt(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${Ge(a)} coords = getOutputCoords();\n        `,1===a)i+=this.enableShapeUniforms?"\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const o=Kn("coords",a);i+=this.enableShapeUniforms?`\n            bool nextRowOutOfBounds =\n              (${o[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${o[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:`\n            bool nextRowOutOfBounds =\n              (${o[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${o[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function yr(n){const{inputs:t,backend:e}=n,{x:r}=t;return e.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const L4={kernelName:el,backendName:"webgl",kernelFunc:yr};function Sa(n){const{inputs:t,backend:e}=n,{real:r,imag:s}=t,a=e.makeTensorInfo(r.shape,"complex64"),i=e.texData.get(a.dataId),o=yr({inputs:{x:r},backend:e}),u=yr({inputs:{x:s},backend:e});return i.complexTensorInfos={real:o,imag:u},a}const z4={kernelName:Ko,backendName:"webgl",kernelFunc:Sa},Bv="return (a < 0.) ? b * a : a;",Wv="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",P4={kernelName:Vu,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{alpha:a}=r,i=e.makeTensorInfo([],"float32",Js(a,"float32")),o=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Iu(Wv,s.shape,i.shape):new Ro(Bv,s.shape,i.shape),u=e.runWebGLProgram(o,[s,i],"float32");return e.disposeIntermediateTensorInfo(i),u}},Vv="return (a < 0.) ? b * a : a;",Uv="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",B4={kernelName:oc,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e}=n,{x:r,alpha:s}=t,a=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Iu(Uv,r.shape,s.shape):new Ro(Vv,r.shape,s.shape);return e.runWebGLProgram(a,[r,s],"float32")}},Ao="if (isnan(x)) return x;";function Fe({opSnippet:n,packedOpSnippet:t,cpuKernelImpl:e,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,o=a,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=e){const l=o.texData.get(i.dataId),h=e(l.values,u);return o.makeTensorInfo(i.shape,u,h)}let c;return c=Q().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new fi(i.shape,t):new Ls(i.shape,n),o.runWebGLProgram(c,[i],u)}}function On({opSnippet:n,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:u,b:c}=i,l=o;if(r&&"complex64"===u.dtype){const d=l.texData.get(u.dataId),f=l.texData.get(c.dataId),[m,g]=[[d.complexTensorInfos.real,f.complexTensorInfos.real],[d.complexTensorInfos.imag,f.complexTensorInfos.imag]].map(b=>{const[x,w]=b,k={dataId:x.dataId,dtype:x.dtype,shape:u.shape},N={dataId:w.dataId,dtype:w.dtype,shape:c.shape},$=new Ro(n,u.shape,c.shape);return l.runWebGLProgram($,[k,N],ur(x.dtype,w.dtype))}),y=Sa({inputs:{real:m,imag:g},backend:l});return l.disposeIntermediateTensorInfo(m),l.disposeIntermediateTensorInfo(g),y}const h=a||ur(u.dtype,c.dtype);if(("string"===u.dtype||"string"===c.dtype||l.shouldExecuteOnCPU([u,c]))&&null!=s){const d=l.texData.get(u.dataId).values,f=l.texData.get(c.dataId).values,m="string"===u.dtype?ti(d):d,g="string"===u.dtype?ti(f):f,[y,b]=s(u.shape,c.shape,m,g,h),x=l.makeTensorInfo(b,h);return l.texData.get(x.dataId).values=y,x}let p;return p=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Iu(t,u.shape,c.shape,e):new Ro(n,u.shape,c.shape),l.runWebGLProgram(p,[u,c],h)}}function Nu(n,t=!1){if("linear"===n)return"return x;";if("relu"===n)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===n)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===n)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===n)return t?Uv:Vv;if("leakyrelu"===n)return t?Wv:Bv;if("sigmoid"===n)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}class Gv{constructor(t,e,r,s=!1,a=!1,i=!1,o=null,u=!1,c=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r,this.enableShapeUniforms=qn(this.outputShape.length);const h=Math.ceil((s?t[1]:t[2])/2),p=s?"i * 2, rc.y":"rc.y, i * 2",d=a?"rc.z, i * 2":"i * 2, rc.z",f=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",y="";o&&(g=u?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${o}\n        }`:c?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${o}\n        }`:`vec4 activation(vec4 x) {\n          ${o}\n        }`,y="result = activation(result);");const b=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),c&&this.variableNames.push("leakyreluAlpha");let x="rc.x",w="rc.x";t[0]<e[0]?x=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(w=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${g}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${h}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${h}; i++) {\n          int batchA = ${x};\n          int batchB = ${w};\n          vec4 a = getMatrixA(batchA, ${p});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${f[0]} * ${m[0]});\n          result += (${f[1]} * ${m[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${y}\n\n        setOutput(result);\n      }\n    `}}class jv{constructor(t,e,r){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=de(e,r),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const qv="return a * b;";function ag(n){const{inputs:t,backend:e}=n,{a:r,b:s}=t,a=ur(r.dtype,s.dtype);if("complex64"===r.dtype){const o=e.texData.get(r.dataId),u=e.texData.get(s.dataId),c=new jv("return areal * breal - aimag * bimag;",r.shape,s.shape),l=new jv("return areal * bimag + aimag * breal;",r.shape,s.shape),h=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:r.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:s.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:s.shape}],p=e.runWebGLProgram(c,h,"float32"),d=e.runWebGLProgram(l,h,"float32"),f=Sa({inputs:{real:p,imag:d},backend:e});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(d),f}if(e.shouldExecuteOnCPU([r,s])){const o=e.texData.get(r.dataId),u=e.texData.get(s.dataId),[c,l]=t4(r.shape,s.shape,o.values,u.values,a),h=e.makeTensorInfo(l,a);return e.texData.get(h.dataId).values=c,h}let i;return i=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Iu(qv,r.shape,s.shape):new Ro(qv,r.shape,s.shape),e.runWebGLProgram(i,[r,s],a)}const W4={kernelName:cl,backendName:"webgl",kernelFunc:ag};function Mt(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{shape:a}=r,i=e,o=nt(s.shape),u=Lu(a,o),c=nt(u);I(o===c,()=>`The new shape (${u}) has ${c} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);const l=i.texData.get(s.dataId);return!l.isPacked||Yh(s.shape,u)||null!==l.texture&&Yh(l.shape,u)?(i.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):function(h,p,d){const f=[Io(h.shape),...No(h.shape)],m={dtype:h.dtype,shape:f,dataId:h.dataId},g=[Io(p),...No(p)],y=new Ov(g,f),x=d.runWebGLProgram(y,[m],h.dtype,[f],!0);return{dataId:x.dataId,shape:p,dtype:x.dtype}}(s,u,i)}const V4={kernelName:uc,backendName:"webgl",kernelFunc:Mt};class Kv{constructor(t,e){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:a,outSize:i}=t;this.outputShape=[s,i];const o=4*Math.floor(r/4),u=r%4;let c="sumValue += dot(values, ones);";if(null!=e){const h=1/e;c=`sumValue += dot(values * ${vs(h)?h.toPrecision(2):h}, ones);`}let l="";a%r>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}class U4{constructor(t,e){this.variableNames=["x"];const{windowSize:r,batchSize:s,inSize:a,outSize:i}=t;this.outputShape=[s,i];let o="0.0",u="";"prod"===e?o="1.0":"min"===e?(o="1.0 / 1e-20",u="min"):"max"===e&&(o="-1.0 / 1e-20",u="max");let c=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?c="sumValue":"prod"===e?c="prodValue":"all"===e?c="allValue":"any"===e&&(c="anyValue");const l=4*Math.floor(r/4),h=r%4;let p=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${u}(values, minMaxValue);\n        if (${"min"===e} || ${"max"===e}) {\n          minMaxValue = ${u}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===e?(o="1.0",p="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===e&&(o="0.0",p="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let f="";a%r>0&&(f=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${f}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        vec4 minMaxValue = vec4(${o});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${2===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${3===h}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${p}\n        }\n        setOutput(${c});\n      }\n    `}}function mi(n,t,e,r){const s=function(i){const o=[];for(;0===o.length||1!==o[o.length-1].outSize;){const u=o.length?o[o.length-1].outSize:i[1],c=oh(u);o.push({inSize:u,windowSize:c,outSize:Math.ceil(u/c)})}return o}(n.shape);let a=n;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:u,outSize:c}=s[i];let l,h;l="mean"===e?0===i?new Kv({windowSize:u,inSize:o,batchSize:n.shape[0],outSize:c},o):new Kv({windowSize:u,inSize:o,batchSize:n.shape[0],outSize:c}):new U4({windowSize:u,inSize:o,batchSize:n.shape[0],outSize:c},e),h=a,a=r.runWebGLProgram(l,[a],t),h.dataId!==n.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class G4{constructor(t,e){this.variableNames=["A"];const r=new Array(t.length);for(let i=0;i<r.length;i++)r[i]=t[e[i]];this.outputShape=r,this.rank=r.length;const s=Ge(this.rank),a=function(i){const o=i.length;if(o>6)throw Error(`Transpose for rank ${o} is not yet supported`);const u=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],c=new Array(o);for(let l=0;l<i.length;l++)c[i[l]]=u[l];return c.join()}(e);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class H4{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const r=new Array(t.length);for(let l=0;l<r.length;l++)r[l]=t[e[l]];if(this.outputShape=r,this.rank=r.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=Ge(this.rank),a=_v("rc",this.rank),i=new Array(this.rank);for(let l=0;l<e.length;l++)i[e[l]]=a[l];const o=`vec2(${i.slice(-2).join()})`,u=`++${a[this.rank-1]} < ${r[this.rank-1]}`,c=`getChannel(getA(${i.join()}), ${o})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${c};\n      if(${u}) {\n        result[1] = ${c};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${r[this.rank-2]}) {\n        result[2] = ${c};\n        if(${u}) {\n          result[3] = ${c};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Qh(n,t,e){const r=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new H4(n.shape,t):new G4(n.shape,t);return e.runWebGLProgram(r,[n],n.dtype)}function tp(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r;return function(o,u,c,l){const p=o.shape.length,d=be(u,o.shape);let f=d;const m=tn(f,p),g=null!=m;let y=o;g&&(y=Qh(o,m,l),f=an(f.length,p)),Dn("sum",f,p);const[b,x]=Sn(y.shape,f);let w=b;c&&(w=sn(b,d));const k=nt(x),N=Mt({inputs:{x:y},attrs:{shape:[nt(o.shape)/k,k]},backend:l}),$=mi(N,sd(o.dtype),"sum",l),C=Mt({inputs:{x:$},attrs:{shape:w},backend:l});return l.disposeIntermediateTensorInfo(N),l.disposeIntermediateTensorInfo($),g&&l.disposeIntermediateTensorInfo(y),C}(s,a,i,e)}const j4={kernelName:mc,backendName:"webgl",kernelFunc:tp};function Xn(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{perm:a}=r,i=e,u=new Array(s.shape.length);for(let l=0;l<u.length;l++)u[l]=s.shape[a[l]];let c;if(i.shouldExecuteOnCPU([s])){const l=i.texData.get(s.dataId).values,h=ng(l,s.shape,s.dtype,a,u);c=i.makeTensorInfo(u,s.dtype),i.texData.get(c.dataId).values=h}else c=Qh(s,a,i);return c}const q4={kernelName:ji,backendName:"webgl",kernelFunc:Xn};function ep({a:n,b:t,transposeA:e,transposeB:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const c=n.shape.length,l=t.shape.length,h=e?n.shape[c-2]:n.shape[c-1],p=r?t.shape[l-1]:t.shape[l-2],d=e?n.shape[c-1]:n.shape[c-2],f=r?t.shape[l-2]:t.shape[l-1],m=n.shape.slice(0,-2),g=t.shape.slice(0,-2),y=nt(m),b=nt(g),x=de(n.shape.slice(0,-2),t.shape.slice(0,-2)).concat([d,f]);I(h===p,()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${n.shape} and ${t.shape} and transposeA=${e} and transposeB=${r} must match.`);const w=e?[y,h,d]:[y,d,h],k=r?[b,f,p]:[b,p,f],N=Mt({inputs:{x:n},backend:s,attrs:{shape:w}}),$=Mt({inputs:{x:t},backend:s,attrs:{shape:k}}),C=[N,$],R=Math.max(y,b),A=e?N.shape[1]:N.shape[2],_=null!=a,z=null!=i,V="leakyrelu"===u,X=null!=u?Nu(u,!0):null;let J;if((1===d||1===f)&&A>1e3&&!1===(_||z||V||null!=X)){let et=N,rt=$;e&&(et=Xn({inputs:{x:N},backend:s,attrs:{perm:[0,2,1]}}),C.push(et)),r&&(rt=Xn({inputs:{x:$},backend:s,attrs:{perm:[0,2,1]}}),C.push(rt));const at=1===f;let dt=et;1!==f&&(dt=Mt({inputs:{x:et},backend:s,attrs:{shape:[R,A,1]}}),C.push(dt));const pt=1===f?2:1;let ft=rt;at&&(ft=Mt({inputs:{x:rt},backend:s,attrs:{shape:[R,1,A]}}),C.push(ft));const gt=ag({inputs:{a:dt,b:ft},backend:s});J=tp({inputs:{x:gt},backend:s,attrs:{axis:pt,keepDims:!0}}),C.push(gt)}else{const et=ur(n.dtype,t.dtype),rt=new Gv(w,k,[R,d,f],e,r,_,X,z,V),at=[N,$];if(null!=a&&at.push(a),z&&at.push(i),V){const dt=s.makeTensorInfo([],"float32",Js(o,"float32"));at.push(dt),C.push(dt)}J=s.runWebGLProgram(rt,at,et)}const Y=Mt({inputs:{x:J},backend:s,attrs:{shape:x}});C.push(J);for(const et of C)s.disposeIntermediateTensorInfo(et);return Y}const K4={kernelName:kc,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:h}=r;return ep({a:s,b:a,transposeA:u,transposeB:c,backend:e,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:l})}},Yv="return abs(x);",X4={kernelName:Gs,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e}=n,{x:r}=t;if(e.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const a=e.texData.get(r.dataId),i=Fv(a.values);return e.makeTensorInfo(r.shape,r.dtype,i)}let s;return s=Q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new fi(r.shape,Yv):new Ls(r.shape,Yv),e.runWebGLProgram(s,[r],r.dtype)}},Y4=Fe({opSnippet:Gr+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Z4={kernelName:Hs,backendName:"webgl",kernelFunc:Y4},J4=Fe({opSnippet:Gr+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Q4={kernelName:Aa,backendName:"webgl",kernelFunc:J4},Zv="return a + b;",tF=On({opSnippet:Zv,packedOpSnippet:Zv,supportsComplex:!0,cpuKernelImpl:_A}),eF={kernelName:Jn,backendName:"webgl",kernelFunc:tF};class nF{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((a,i)=>`T${i}`);const r=[];this.variableNames.forEach(a=>{r.push(`float v${a} = get${a}AtOutCoords();`)});const s=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`\n      void main() {\n        ${r.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class rF{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((a,i)=>`T${i}`);const r=[];this.variableNames.forEach(a=>{r.push(`vec4 v${a} = get${a}AtOutCoords();`)});const s=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`\n      void main() {\n        ${r.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}const sF={kernelName:$i,backendName:"webgl",kernelFunc:function n(t){const{inputs:e,backend:r}=t,s=e;if(1===s.length)return yr({inputs:{x:s[0]},backend:r});if(s.length>Q().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const u=Math.floor(s.length/2),c=n({inputs:s.slice(0,u),backend:r}),l=n({inputs:s.slice(u),backend:r});return n({inputs:[c,l],backend:r})}const a=s.map(u=>u.dtype).reduce((u,c)=>ur(u,c)),i=s.map(u=>u.shape),o=Q().getBool("WEBGL_PACK")?new rF(s[0].shape,i):new nF(s[0].shape,i);return r.runWebGLProgram(o,s,a)}},aF={kernelName:"All",backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=be(a,s.shape);let c=u;const l=tn(c,o);let h=s;null!=l&&(h=Xn({inputs:{x:s},backend:e,attrs:{perm:l}}),c=an(c.length,o)),Dn("all",c,o);const[p,d]=Sn(h.shape,c),f=Mt({inputs:{x:h},backend:e,attrs:{shape:[-1,nt(d)]}}),m=mi(f,f.dtype,"all",e);let g;return g=Mt(i?{inputs:{x:m},backend:e,attrs:{shape:sn(p,u)}}:{inputs:{x:m},backend:e,attrs:{shape:p}}),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),null!=l&&e.disposeIntermediateTensorInfo(h),g}},iF={kernelName:"Any",backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=be(a,s.shape);let c=u;const l=tn(c,o);let h=s;null!=l&&(h=Xn({inputs:{x:s},backend:e,attrs:{perm:l}}),c=an(c.length,o)),Dn("any",c,o);const[p,d]=Sn(h.shape,c),f=Mt({inputs:{x:h},backend:e,attrs:{shape:[-1,nt(d)]}}),m=mi(f,f.dtype,"any",e);let g;return g=Mt(i?{inputs:{x:m},backend:e,attrs:{shape:sn(p,u)}}:{inputs:{x:m},backend:e,attrs:{shape:p}}),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),null!=l&&e.disposeIntermediateTensorInfo(h),g}};class oF{constructor(t,e,r){this.variableNames=["A"];const{windowSize:s,batchSize:a,outSize:i}=t;r||this.variableNames.push("bestIndicesA"),this.outputShape=[a,i],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${r?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${"max"===e?">":"<"} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class lF{constructor(t,e,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,I(t.length>2,()=>`Packed arg${r.charAt(0).toUpperCase()+r.slice(1)} supports only inputs with rank above 2.`);const i=Math.ceil(t[t.length-1]/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),s||this.variableNames.push("bestIndicesA");const o=this.outputShape,u=o.length,c=Ge(u),l=Kn("coords",u);let h,p;if(1===i){p=u+1;const C=Ge(p);h=`\n        ${C} sourceLocR = ${C}(${l.join()}, 0);\n        ++${l[u-1]};\n        ${C} sourceLocG = ${C}(${l.join()}, 0);\n        ++${l[u-2]};\n        ${C} sourceLocA = ${C}(${l.join()}, 0);\n        --${l[u-1]};\n        ${C} sourceLocB = ${C}(${l.join()}, 0);\n        --${l[u-2]};`}else p=u,h=`\n        ${c} sourceLocR = coords;\n        ++${l[u-1]};\n        ${c} sourceLocG = coords;\n        ++${l[u-2]};\n        ${c} sourceLocA = coords;\n        --${l[u-1]};\n        ${c} sourceLocB = coords;\n        --${l[u-2]};`;const d=["x","y","z","w","u","v"].slice(0,p),f="."+d[p-1],m=d.map(C=>"int "+C),g=Kn("sourceLocR",p-1).concat("inIdx.r"),y=Kn("sourceLocG",p-1).concat("inIdx.g"),b=Kn("sourceLocB",p-1).concat("inIdx.b"),x=Kn("sourceLocA",p-1).concat("inIdx.a"),w="max"===r?"greaterThan":"lessThan",k=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,N=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,$=s?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${$}\n      void main() {\n        ${c} coords = getOutputCoords();\n        bool hasNextCol = ${l[u-1]} < ${o[u-1]-1};\n        bool hasNextRow = ${l[u-2]} < ${o[u-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${N};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${k}\n          vec4 candidate = ${N};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function Jv(n,t,e,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=oh(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},u=new oF(o,e,null==r),c=[t];null!=r&&c.push(r);const l=n.runWebGLProgram(u,c,"int32");if(1===l.shape[1])return l;const h=Jv(n,t,e,l);return n.disposeIntermediateTensorInfo(l),h}function Qv(n,t,e,r=null){const s=null!=r?r.shape:t.shape,a=oh(s[s.length-1]),i=new lF(s,a,e,null==r),u=n.runWebGLProgram(i,null==r?[t]:[t,r],"int32");if(u.shape.length===t.shape.length){const c=Qv(n,t,e,u);return n.disposeIntermediateTensorInfo(u),c}return u}function t2(n,t,e,r){const s=[e];if(Dn("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!Q().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const a=[],i=n.texData.get(t.dataId);let o=t;null!==i&&i.isPacked&&(o=n.unpackTensor(t),a.push(o));const[u,c]=Sn(o.shape,s),l=nt(c),h=Mt({inputs:{x:o},backend:n,attrs:{shape:[-1,l]}});a.push(h);const p=Jv(n,h,r);a.push(p);const d=Mt({inputs:{x:p},backend:n,attrs:{shape:u}});return a.forEach(f=>n.disposeIntermediateTensorInfo(f)),d}return Qv(n,t,r)}const uF={kernelName:Ri,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a}=r;let i=be(a,s.shape);const o=tn(i,s.shape.length);let u=s;const c=[];null!=o&&(u=Xn({inputs:{x:s},backend:e,attrs:{perm:o}}),c.push(u),i=an(i.length,u.shape.length)),Dn("argMax",[i[0]],u.shape.length);const l=t2(e,u,i[0],"max");return c.forEach(h=>e.disposeIntermediateTensorInfo(h)),l}},cF={kernelName:Ai,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a}=r;let i=be(a,s.shape);const o=tn(i,s.shape.length);let u=s;const c=[];null!=o&&(u=Xn({inputs:{x:s},backend:e,attrs:{perm:o}}),c.push(u),i=an(i.length,u.shape.length)),Dn("argMin",[i[0]],u.shape.length);const l=t2(e,u,i[0],"min");return c.forEach(h=>e.disposeIntermediateTensorInfo(h)),l}},hF=Fe({opSnippet:Gr+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),pF={kernelName:Fa,backendName:"webgl",kernelFunc:hF},dF=Fe({opSnippet:Gr+"return log(x + sqrt(x * x + 1.0));"}),fF={kernelName:Da,backendName:"webgl",kernelFunc:dF},mF=Fe({opSnippet:Gr+"\n  return atan(x);\n"}),gF={kernelName:_a,backendName:"webgl",kernelFunc:mF},yF=On({opSnippet:sg+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+ku+"\n  return result;\n"}),bF={kernelName:Ma,backendName:"webgl",kernelFunc:yF},xF=Fe({opSnippet:Gr+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),wF={kernelName:Oa,backendName:"webgl",kernelFunc:xF};class Su{constructor(t,e,r,s=!1,a=!1){if(this.variableNames=["x"],"avg"===e&&r)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,o=t.strideHeight,u=t.strideWidth,c=t.dilationHeight,l=t.dilationWidth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=t.padInfo.top,f=t.padInfo.left;this.outputShape=t.outShape;const m="avg"===e;let b="0.0";if(m||(b="-1.0 / 1e-20"),r)return void(this.userCode=`\n        const ivec2 strides = ivec2(${o}, ${u});\n        const ivec2 pads = ivec2(${d}, ${f});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${h};\n              wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?a?`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`:`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`:`wR * ${p} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let x=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(x="avgValue / count");const w=4*Math.floor(i/4),k=i%4,N=`\n      if (${m}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${d}, ${f});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${h};\n            wR += ${c}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${w}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${N}\n          }\n\n          int xC = xCCorner + ${w};\n          if (${1===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${N}\n          } else if (${2===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${N}\n          } else if (${3===k}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${N}\n          }\n        }\n        setOutput(${x});\n      }\n    `}}class ig{constructor(t,e,r,s=!1,a=!1){if(this.variableNames=["x"],"avg"===e&&r)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,o=t.strideDepth,u=t.strideHeight,c=t.strideWidth,l=t.dilationDepth,h=t.dilationHeight,p=t.dilationWidth,d=t.effectiveFilterDepth,f=t.effectiveFilterHeight,m=t.effectiveFilterWidth,g=t.padInfo.front,y=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const x="avg"===e;let w="0.0";if(x||(w="-1.0 / 1e-20"),r)return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${o}, ${u}, ${c});\n        const ivec3 pads = ivec3(${g}, ${y}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${f};\n                wR += ${h}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${m};\n                  wC += ${p}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?a?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${f} * ${m} +\n                      wR * ${m} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let k=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(k="avgValue / count");const N=4*Math.floor(i/4),$=i%4,C=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${o}, ${u}, ${c});\n      const ivec3 pads = ivec3(${g}, ${y}, ${b});\n      const float initializationValue = ${w};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${w});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${f};\n            wR += ${h}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${N}; wC += 4) {\n              int xC = xCCorner + wC * ${p};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${p}, ch)\n              );\n\n              ${C}\n            }\n\n            int xC = xCCorner + ${N};\n            if (${1===$}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${C}\n            } else if (${2===$}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${C}\n            } else if (${3===$}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                initializationValue\n              );\n\n              ${C}\n            }\n          }\n          setOutput(${k});\n        }\n      }\n    `}}const vF={kernelName:Fi,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t;wu(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;I(Fn(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=Dr(s.shape,a,i,1,o,u);if(1===c.filterWidth&&1===c.filterHeight&&he(c.inShape,c.outShape))return yr({inputs:{x:s},backend:e});const l=new Su(c,"avg",!1);return e.runWebGLProgram(l,[s],"float32")}},kF={kernelName:Di,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:c}=r,l=Cs(s.shape,a,i,[1,1,1],o,u,c),h=new ig(l,"avg",!1);return e.runWebGLProgram(h,[s],"float32")}};class IF{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const u=t.effectiveFilterHeight,c=t.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${u-1-t.padInfo.top}, ${c-1-t.padInfo.left});\n      const float avgMultiplier = float(${1/(t.filterHeight*t.filterWidth)});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${u};\n            wR += ${t.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${c};\n            wC+= ${t.dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class NF{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const h=t.effectiveFilterDepth,p=t.effectiveFilterHeight,d=t.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${h-1-t.padInfo.front}, ${p-1-t.padInfo.top}, ${d-1-t.padInfo.left});\n      const float avgMultiplier = float(${1/(t.filterDepth*t.filterHeight*t.filterWidth)});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${t.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${t.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${p};\n              wR += ${t.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${t.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const SF={kernelName:_i,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a}=t,i=a,{filterSize:o,strides:u,pad:c,dimRoundingMode:l}=r,h=Cs(i.shape,o,u,[1,1,1],c,l),p=new NF(h);return e.runWebGLProgram(p,[s],i.dtype)}},TF={kernelName:Ho,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a}=t,i=a;wu([s,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:c}=r,l=Dr(i.shape,o,u,1,c),h=new IF(l);return e.runWebGLProgram(h,[s],i.dtype)}},CF={kernelName:Oi,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return ep({a:s,b:a,transposeA:i,transposeB:o,backend:e})}};class $F{constructor(t,e,r,s,a,i){this.outputShape=[],this.variableNames=["x","mean","variance"],de(t,e),de(t,r);let o="0.0";null!=s&&(de(t,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="1.0";null!=a&&(de(t,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class EF{constructor(t,e,r,s,a,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],de(t,e),de(t,r);let o="vec4(0.0)";null!=s&&(de(t,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=a&&(de(t,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const RF={kernelName:Ks,backendName:"webgl",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=n;I(s.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),I(null==i||s.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),I(null==o||s.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=e;null==u&&(u=.001);const c=[r,s,a];let l=null;null!=i&&(l=i.shape,c.push(i));let h=null;null!=o&&(h=o.shape,c.push(o));const p=Q().getBool("WEBGL_PACK_NORMALIZATION")?new EF(r.shape,s.shape,a.shape,l,h,u):new $F(r.shape,s.shape,a.shape,l,h,u);return t.runWebGLProgram(p,c,c[0].dtype)}};class AF{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=Ge(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const r=function(a){if(1===a)return"sourceLoc";if(a<=6)return og.slice(0,a).map(i=>"sourceLoc."+i).join(",");throw Error(`Slicing for rank ${a} is not yet supported`)}(this.rank);let s;s=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map((a,i)=>`sourceLoc.${og[i]} = start[${i}] + coords.${og[i]};`).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}}const og=["x","y","z","w","u","v"];class FF{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=Ge(this.rank),r=Kn("coords",this.rank),s=Kn("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,i=`getChannel(getSource(${s.join()}), ${a})`,o=`\n      result.x = ${i};\n      if (++${r[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${i};\n        --${s[this.rank-1]};\n      }\n    `,u=1===this.rank?"":`\n      --${r[this.rank-1]};\n      if (++${r[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${i};\n        if (++${r[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,c=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map((l,h)=>`start[${h}]`).join()});`:t.map((l,h)=>`${s[h]} = ${r[h]} + start[${h}];`).join("\n");this.userCode=`\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${c}\n        vec4 result = vec4(0.);\n        ${o}\n        ${u}\n        setOutput(result);\n      }\n    `}}function Fo(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{begin:a,size:i}=r,[o,u]=_c(s,a,i);if(xd(s,o,u),0===nt(u))return e.makeTensorInfo(u,s.dtype,[]);if(e.shouldExecuteOnCPU([s])||"string"===s.dtype){const h=e.texData.get(s.dataId),p=c4(h.values,o,u,s.shape,s.dtype);return e.makeTensorInfo(u,s.dtype,p)}const{isPacked:c}=e.texData.get(s.dataId),l=vd(s.shape,o,u);if(c||!l){const h=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new FF(u):new AF(u);return e.runWebGLProgram(h,[s],s.dtype,[o])}return e.uploadToGPU(s.dataId),function(h,p,d,f){const m=f.texData.get(h.dataId),g=f.makeTensorInfo(d,h.dtype),y=f.texData.get(g.dataId);Object.assign(y,m),y.refCount=1,y.shape=d,y.dtype=h.dtype;let b=kd(p,jt(h.shape));m.slice&&(b+=m.slice.flatOffset),y.slice={flatOffset:b,origDataId:m.slice&&m.slice.origDataId||h.dataId};const x=f.dataRefCount.get(y.slice.origDataId)||1;return f.dataRefCount.set(y.slice.origDataId,x+1),g}(s,o,u,e)}const DF={kernelName:fc,backendName:"webgl",kernelFunc:Fo},_F={kernelName:Mi,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{blockShape:a,crops:i}=r;I(s.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const o=a.reduce((b,x)=>b*x),u=Kl(s.shape,a,o),c=Xl(u.length,a.length),l=Yl(s.shape,a,o),h=wf(i,a.length),p=vf(l,i,a.length),d=[],f=Mt({inputs:{x:s},backend:e,attrs:{shape:u}}),m=Xn({inputs:{x:f},backend:e,attrs:{perm:c}}),g=Mt({inputs:{x:m},backend:e,attrs:{shape:l}}),y=Fo({inputs:{x:g},backend:e,attrs:{begin:h,size:p}});return d.push(f),d.push(m),d.push(g),d.forEach(b=>e.disposeIntermediateTensorInfo(b)),y}},OF={kernelName:jo,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,weights:a}=t,{size:i}=r,o=e.readSync(s.dataId),u=e.readSync(a.dataId),c=Av(o,u,a.dtype,a.shape,i);return e.makeTensorInfo([i],a.dtype,c)}},MF={kernelName:qo,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e}=n,{s0:r,s1:s}=t,a=e.readSync(r.dataId),i=e.readSync(s.dataId),o=de(Array.from(a),Array.from(i));return e.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},e2=On({opSnippet:"return float(a != b);",cpuKernelImpl:n4,dtype:"bool"}),LF={kernelName:nc,backendName:"webgl",kernelFunc:e2};function Tu(n){const{inputs:t,backend:e}=n,{input:r}=t;return yr({inputs:{x:e.texData.get(r.dataId).complexTensorInfos.real},backend:e})}const zF={kernelName:Rp,backendName:"webgl",kernelFunc:Tu},BF={kernelName:La,backendName:"webgl",kernelFunc:function n(t){const{inputs:e,backend:r,attrs:s}=t,{x:a}=e,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return yr({inputs:{x:a},backend:r});const o=gn(a.shape),u=n({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),c=Sa({inputs:{real:u,imag:o},backend:r});return o.dispose(),r.disposeIntermediateTensorInfo(u),c}if("complex64"===a.dtype){const o=Tu({inputs:{input:a},backend:r}),u=n({inputs:{x:o},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(o),u}if(!zu(a.dtype,i)){const o=yr({inputs:{x:a},backend:r});return{dataId:o.dataId,shape:o.shape,dtype:i}}if(r.shouldExecuteOnCPU([a])){const o=r.texData.get(a.dataId).values,[u,c,l]=MA(o,a.shape,a.dtype,i);return r.makeTensorInfo(u,c,l)}if("int32"===i)return function(o,u){const c=new Ls(o.shape,"return float(int(x));"),l=u.runWebGLProgram(c,[o],"int32");return{dataId:l.dataId,shape:l.shape,dtype:l.dtype}}(a,r);if("bool"===i){const o=r.makeTensorInfo([],"bool",cn("bool",1)),u=e2({inputs:{a,b:o},backend:r});return r.disposeIntermediateTensorInfo(o),u}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},n2="return ceil(x);",WF=Fe({opSnippet:n2,packedOpSnippet:n2,cpuKernelImpl:LA}),VF={kernelName:za,backendName:"webgl",kernelFunc:WF};class UF{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class GF{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const HF={kernelName:Pa,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;return o=Q().getBool("WEBGL_PACK_CLIP")?new GF(s.shape):new UF(s.shape),e.runWebGLProgram(o,[s],s.dtype,[[a],[i]])}};class jF{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function r2(n,t){return{dataId:t.dataId,dtype:t.dtype,shape:n.shape}}const qF={kernelName:Li,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e}=n,{x:r}=t,s=e.texData.get(r.dataId),a=new jF(r.shape),i=[r2(r,s.complexTensorInfos.real),r2(r,s.complexTensorInfos.imag)];return e.runWebGLProgram(a,i,i[0].dtype)}};class KF{constructor(t){this.outputShape=[],this.outputShape=ds(t,1),this.variableNames=t.map((i,o)=>`T${o}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let i=1;i<e.length;i++)e[i]=e[i-1]+t[i][1];const r=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<e.length;i++)r.push(`else if (yC < ${e[i]}) setOutput(getT${i}(yR, yC-${e[i-1]}));`);r.push(`else setOutput(getT${e.length}(yR, yC-${e[e.length-1]}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${r.join("\n        ")}\n      }\n    `}}class XF{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=ds(t,e);const r=this.outputShape,s=r.length,a=Ge(s),i=Kn("coords",s),o=["x","y","z","w","u","v"].slice(0,s);this.variableNames=t.map((m,g)=>`T${g}`);const u=new Array(t.length-1);u[0]=t[0][e];for(let m=1;m<u.length;m++)u[m]=u[m-1]+t[m][e];const c=o[e],l=o.slice(-2),h=o.join();let p=`if (${c} < ${u[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${l.join()}));\n        }`;for(let m=1;m<u.length;m++){const g=u[m-1];p+=`\n        if (${c} < ${u[m]}  && ${c} >= ${u[m-1]}) {\n          return getChannel(\n            getT${m}(${np(o,c,g)}),\n            vec2(${np(l,c,g)}));\n        }`}const f=u[u.length-1];p+=`\n        return getChannel(\n          getT${u.length}(${np(o,c,f)}),\n          vec2(${np(l,c,f)}));`,this.userCode=`\n      float getValue(${o.map(m=>"int "+m)}) {\n        ${p}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[s-1]} = ${i[s-1]} + 1;\n        if (${i[s-1]} < ${r[s-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[s-2]} = ${i[s-2]} + 1;\n        if (${i[s-2]} < ${r[s-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[s-1]} = ${i[s-1]} - 1;\n        if (${i[s-2]} < ${r[s-2]} &&\n            ${i[s-1]} < ${r[s-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function np(n,t,e){const r=n.indexOf(t);return n.map((s,a)=>a===r?`${s} - ${e}`:s).join()}function rp(n){const{inputs:t,backend:e}=n,{input:r}=t;return yr({inputs:{x:e.texData.get(r.dataId).complexTensorInfos.imag},backend:e})}const YF={kernelName:yp,backendName:"webgl",kernelFunc:rp};function Cu(n,t,e){const r=n[0].dtype;if("complex64"===r){const h=n.map(g=>Tu({inputs:{input:g},backend:e})),p=n.map(g=>rp({inputs:{input:g},backend:e})),d=Cu(h,t,e),f=Cu(p,t,e),m=Sa({inputs:{real:d,imag:f},backend:e});return h.forEach(g=>e.disposeIntermediateTensorInfo(g)),p.forEach(g=>e.disposeIntermediateTensorInfo(g)),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),m}let s=e.shouldExecuteOnCPU(n);if("string"===r&&(s=!0),s){const h=n.map(b=>{const x=nt(b.shape.slice(t));return Mt({inputs:{x:b},backend:e,attrs:{shape:[-1,x]}})}),p=h.map(b=>({vals:e.readSync(b.dataId),shape:b.shape})),d=ds(h.map(b=>b.shape),1),m=zA(p,d,r,1===h[0].shape[0]),g=ds(n.map(b=>b.shape),t),y=e.makeTensorInfo(g,r,m);return h.forEach(b=>e.disposeIntermediateTensorInfo(b)),y}const a=Q().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(n.length>a){const h=[];for(let d=0;d<n.length;d+=a){const f=n.slice(d,d+a);h.push(Cu(f,t,e))}const p=Cu(h,t,e);for(const d of h)e.disposeIntermediateTensorInfo(d);return p}if(Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&n[0].shape.length>1){const h=new XF(n.map(p=>p.shape),t);return e.runWebGLProgram(h,n,r)}const{tensors2D:i,outShape:o}=function(h,p,d){const f=ds(h.map(g=>g.shape),p);return{tensors2D:h.map(g=>Mt({inputs:{x:g},attrs:{shape:[-1,nt(g.shape.slice(p))]},backend:d})),outShape:f}}(n,t,e),u=new KF(i.map(h=>h.shape)),c=e.runWebGLProgram(u,i,r);i.forEach(h=>e.disposeIntermediateTensorInfo(h));const l=Mt({inputs:{x:c},attrs:{shape:o},backend:e});return e.disposeIntermediateTensorInfo(c),l}function s2(n){const{inputs:t,backend:e,attrs:r}=n,{axis:s}=r,a=be(s,t[0].shape)[0];yf(t.map(u=>u.shape),a);const i=ds(t.map(u=>u.shape),a);if(0===nt(i))return e.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter(u=>nt(u.shape)>0);return 1===o.length?yr({inputs:{x:o[0]},backend:e}):Cu(o,a,e)}const ZF={kernelName:zi,backendName:"webgl",kernelFunc:s2};class a2{constructor(t,e=!1,r=null,s=!1,a=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.padInfo.top,o=t.padInfo.left,u=t.strideHeight,c=t.strideWidth,l=t.dilationHeight,h=t.dilationWidth,p=t.filterHeight,d=t.filterWidth,f=4*Math.floor(t.inChannels/4),m=t.inChannels%4,g="channelsLast"===t.dataFormat,y=g?1:2,b=g?2:3,x=g?3:1;let w="",k="";r&&(w=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${r}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${r}\n        }`:`\n          float activation(float x) {\n            ${r}\n          }\n        `,k="result = activation(result);");const N=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${w}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${y}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${f}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${g}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===m}) {\n\n              if (${g}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${f}) *\n                    getW(wR, wC, ${f}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${f}, xR, xC) *\n                    getW(wR, wC, ${f}, d2);\n              }\n\n            } else if (${2===m}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${f}, d2),\n                getW(wR, wC, ${f} + 1, d2)\n              );\n\n              if (${g}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${f}),\n                  getX(batch, xR, xC, ${f} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${f}, xR, xC),\n                  getX(batch, ${f} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===m}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${f}, d2),\n                getW(wR, wC, ${f} + 1, d2),\n                getW(wR, wC, ${f} + 2, d2)\n              );\n\n              if (${g}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${f}),\n                  getX(batch, xR, xC, ${f} + 1),\n                  getX(batch, xR, xC, ${f} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${f}, xR, xC),\n                  getX(batch, ${f} + 1, xR, xC),\n                  getX(batch, ${f} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${N}\n        ${k}\n        setOutput(result);\n      }\n    `}}class JF{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,r=t.padInfo.top,s=t.padInfo.left,a=t.strideDepth,i=t.strideHeight,o=t.strideWidth,u=t.dilationDepth,c=t.dilationHeight,l=t.dilationWidth,h=t.filterDepth,p=t.filterHeight,d=t.filterWidth,f=4*Math.floor(t.inChannels/4),m=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${i}, ${o});\n      const ivec3 pads = ivec3(${e}, ${r}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${h}; wF++) {\n          int xF = xFCorner + wF * ${u};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p}; wR++) {\n            int xR = xRCorner + wR * ${c};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${f}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===m}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${f}) *\n                  getW(wF, wR, wC, ${f}, d2);\n              } else if (${2===m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${f}),\n                  getX(batch, xF, xR, xC, ${f} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${f}, d2),\n                  getW(wF, wR, wC, ${f} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${f}),\n                  getX(batch, xF, xR, xC, ${f} + 1),\n                  getX(batch, xF, xR, xC, ${f} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${f}, d2),\n                  getW(wF, wR, wC, ${f} + 1, d2),\n                  getW(wF, wR, wC, ${f} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class i2{constructor(t,e=!1,r=null,s=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=qn(this.outputShape.length);const i=t.padInfo.left,o=t.strideWidth,u=t.dilationWidth,c=t.filterHeight,l=t.filterWidth,h=l;let p="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<l;g++)p+=`\n           vec4 xTexelC${2*g};\n           int xTexelC${2*g}Ready;\n           vec4 xTexelC${2*g+1};\n           int xTexelC${2*g+1}Ready;\n           vec4 xC${g};`;p+=`\n     for (int r = 0; r < ${c}; r++) {\n      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {\n       `;for(let g=0;g<l;g++)p+=`\n           xTexelC${2*g} = vec4(0.0);\n           xTexelC${2*g}Ready = 0;\n           xTexelC${2*g+1} = vec4(0.0);\n           xTexelC${2*g+1}Ready = 0;\n           xC${g} = vec4(0.0);`;p+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let g=0;g<(h+1)/2;g++){const y=2*g;if(p+=`\n           xC = xCCorner + ${y*u};\n           `,1===o){if(y<l&&(i%2==1?(p+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {\n                   xTexelC${y} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${y}.zw = vec2(0.0);\n                   }\n                   xTexelC${y}Ready = 1;\n                 }\n               `,p+=1===u&&y>0?`\n                 xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${y} = vec4(previous.zw, xTexelC${y}.xy);\n                   } else {\n                     xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);\n                   }\n                   `):p+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {\n                   xTexelC${y} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${y}.zw = vec2(0.0);\n                   }\n                   xTexelC${y}Ready = 1;\n                 }\n\n                 xC${y} = xTexelC${y};\n                 `,y+1<l)){const b=i%2==0?ke(u):u;u%2==0&&i%2==1||u%2!=0&&i%2!=1?(p+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${b};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {\n                     xTexelC${y+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${y+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${y+1}Ready = 1;\n                   }\n                   `,p+=u>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);\n                     } else {\n                      xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);\n                     }\n                     `:`\n                     xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);\n                     `):p+=1===b?`\n                     xC${y+1} = xTexelC${y};\n                     `:`\n                     xCOffset = xC + ${b};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {\n                       xTexelC${y+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${y+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${y+1}Ready = 1;\n                     }\n\n                     xC${y+1} = xTexelC${y+1};\n                     `}}else y<l&&(i%2==1?(p+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {\n                   xTexelC${y} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${y}.zw = vec2(0.0);\n                   }\n                   xTexelC${y}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {\n                   xTexelC${y+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${y+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${y+1}Ready = 1;\n                 }\n\n                 xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);\n               `,y+1<l&&(p+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);\n                 `)):(p+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {\n                   xTexelC${y} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${y}.zw = vec2(0.0);\n                   }\n                   xTexelC${y}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {\n                   xTexelC${y+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${y+1}.zw = vec2(0.);\n                   }\n                   xTexelC${y+1}Ready = 1;\n                 }\n\n                 xC${y} = vec4(\n                   xTexelC${y}.xy, xTexelC${y+1}.xy);\n               `,y+1<l&&(p+=`\n                   xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);\n                 `)));y<l&&(p+=`\n             wTexel = getW(r, ${y}, d1, d2);\n             dotProd += xC${y}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${t.inChannels}) {\n               dotProd += xC${y}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,y+1<l&&(p+=`\n               wTexel = getW(r, ${y+1}, d1, d2);\n               dotProd += xC${y+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${t.inChannels}) {\n                 dotProd += xC${y+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}p+="\n     }\n   ",p+="\n     }\n   ",p+="\n     }\n   ";let d="",f="";r&&(d=s?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${r}\n         }`:a?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${r}\n         }`:`vec4 activation(vec4 x) {\n           ${r}\n         }`,f="result = activation(result);");const m=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${p}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${m}\n         ${f}\n         setOutput(result);\n       }\n     `}}class QF{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=qn(this.outputShape.length);const{dataFormat:r}=e,s=jn(),a="channelsLast"===r,i=a?1:2,o=a?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let c="";for(let l=0;l<=1;l++)for(let h=0;h<=1;h++)c+=`\n          blockIndex = rc.z + ${h};\n          pos = rc.y + ${l};\n\n          ${u}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${o}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*l+h}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*l+h}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${c}\n\n        ${s.output} = result;\n      }\n    `}}function sp(n,t){const e=n.length;return e>=3?t?[...n.slice(0,-3),n[e-3]*n[e-2],n[e-1]]:[...n.slice(0,-3),n[e-3],n[e-2]*n[e-1]]:!t&&1===e&&n[0]>1?[n[0],1]:null}function o2({x:n,filter:t,convInfo:e,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const u=n.shape,c=r.texData.get(n.dataId),l=e.inChannels,h=u[0]*u[1]*u[2],p=e.outChannels,d="channelsLast"===e.dataFormat;let f;const m=[];if(null!=a){const g=sp(a.shape,d);null!=g&&(a=Mt({inputs:{x:a},backend:r,attrs:{shape:g}}),m.push(a))}if(null!=s){const g=sp(s.shape,d);null!=g&&(s=Mt({inputs:{x:s},backend:r,attrs:{shape:g}}),m.push(s))}if((1!==h&&1!==p||!(l>1e3))&&c.isPacked&&d&&null!=c.texture&&u[2]%2!=0&&he(c.shape.slice(-3),u.slice(-3))){const y={dataId:n.dataId,shape:[1,u[0]*u[1]*(u[2]+1),e.inChannels],dtype:n.dtype},b=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,I(Yh(c.shape,y.shape),()=>`packed reshape ${c.shape} to ${y.shape} isn't free`);const x=Mt({inputs:{x:t},backend:r,attrs:{shape:[1,e.inChannels,e.outChannels]}});m.push(x);const w=ep({a:y,b:x,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),k=r.texData.get(w.dataId);I(k.isPacked,()=>"batchMatMul result is expected to be packed"),c.shape=b,k.shape=e.outShape,f=yr({inputs:{x:w},backend:r}),f.shape=e.outShape,m.push(w)}else{const g=e.outHeight*e.outWidth,y=Mt({inputs:{x:n},backend:r,attrs:{shape:d?[e.batchSize,g,e.inChannels]:[e.batchSize,e.inChannels,g]}}),b=Mt({inputs:{x:t},backend:r,attrs:{shape:[1,e.inChannels,e.outChannels]}}),x=ep({a:d?y:b,b:d?b:y,transposeA:!d,transposeB:!1,backend:r,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i});f=Mt({inputs:{x},backend:r,attrs:{shape:e.outShape}}),m.push(y),m.push(b),m.push(x)}for(const g of m)r.disposeIntermediateTensorInfo(g);return f}function l2({x:n,filter:t,convInfo:e,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:c,inChannels:l,outWidth:h,outHeight:p,dataFormat:d}=e,f="channelsLast"===d,m=u*c*l,g=p*h,y=[e.batchSize,m,g],b=[];if(null!=a){const Y=sp(a.shape,f);null!=Y&&(a=Mt({inputs:{x:a},backend:r,attrs:{shape:Y}}),b.push(a))}if(null!=s){const Y=sp(s.shape,f);null!=Y&&(s=Mt({inputs:{x:s},backend:r,attrs:{shape:Y}}),b.push(s))}const x=Mt({inputs:{x:t},backend:r,attrs:{shape:[1,m,nt(t.shape)/m]}});b.push(x);const w=new QF(y,e),N=r.runWebGLProgram(w,[n],"float32",[n.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]]),$=Mt({inputs:{x:N},backend:r,attrs:{shape:y}});b.push(N),b.push($);const C=null!=s,R=null!=a,A="leakyrelu"===o,_=o?Nu(o,!0):null,z=new Gv(f?$.shape:x.shape,f?x.shape:$.shape,f?[e.batchSize,g,e.outChannels]:[e.batchSize,e.outChannels,g],!0,!1,C,_,R,A),V=f?[$,x]:[x,$];if(s&&V.push(s),R&&V.push(a),A){const Y=r.makeTensorInfo([],"float32",Js(i,"float32"));V.push(Y),b.push(Y)}const X=r.runWebGLProgram(z,V,"float32"),J=Mt({inputs:{x:X},backend:r,attrs:{shape:e.outShape}});b.push(X);for(const Y of b)r.disposeIntermediateTensorInfo(Y);return J}const tD={kernelName:Pi,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:c,dimRoundingMode:l}=r,h=$s(u),p=Nn(s.shape,a.shape,i,c,o,l,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===h&&Q().getBool("WEBGL_EXP_CONV")){const m=new i2(p);d=e.runWebGLProgram(m,[s,a],"float32",[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]])}else if(Q().getBool("WEBGL_CONV_IM2COL"))d=l2({x:s,filter:a,convInfo:p,backend:e});else{const m=new a2(p);d=e.runWebGLProgram(m,[s,a],"float32")}else d=o2({x:s,filter:a,convInfo:p,backend:e});const f=Mt({inputs:{x:d},backend:e,attrs:{shape:p.outShape}});return e.disposeIntermediateTensorInfo(d),f}};class eD{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${"channelsLast"===t.dataFormat}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class nD{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,r=t.filterWidth,i="channelsLast"===t.dataFormat;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${r-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${i?3:1}];\n\n        ivec2 dyCorner = ivec2(coords[${i?1:2}], coords[${i?2:3}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${r}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${r} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class rD{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${t.strideDepth} - ${t.padInfo.front};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class sD{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,r=t.filterHeight,s=t.filterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${e-1-t.padInfo.front}, ${r-1-t.padInfo.top}, ${s-1-t.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${t.strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${r}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${r} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const aD={kernelName:Xo,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:c,filterShape:l}=r,h=$s(u),p=Nn(s.shape,l,i,1,o,c,!1,h),d=new eD(p);return e.runWebGLProgram(d,[s,a],"float32")}},iD={kernelName:Bi,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:c,dimRoundingMode:l}=r,h=$s(c),p=Nn(i,a.shape,o,1,u,l,!1,h),d=new nD(p);return e.runWebGLProgram(d,[s,a],"float32")}},oD={kernelName:Wi,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r,c=la(s.shape,a.shape,i,u,o),l=new JF(c);return e.runWebGLProgram(l,[s,a],"float32")}},lD={kernelName:Yo,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:u}=r,c=la(s.shape,u,i,1,o),l=new rD(c);return e.runWebGLProgram(l,[s,a],"float32")}},uD={kernelName:Vi,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:u}=r,c=la(u,a.shape,o,1,i),l=new sD(c);return e.runWebGLProgram(l,[s,a],"float32")}},cD=Fe({opSnippet:Ao+"\n  return cos(x);\n"}),hD={kernelName:jr,backendName:"webgl",kernelFunc:cD},pD=Fe({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),dD={kernelName:js,backendName:"webgl",kernelFunc:pD};class fD{constructor(t,e,r,s,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,o,u,c]=t,[l]=e,[h,p]=r;this.outputShape=[l,h,p,c];const d="bilinear"===s?1:0,[f,m]=[o-1+".0",u-1+".0"],[g,y,b]=h>1?[""+(o-1)/(h-1),"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[x,w,k]=p>1?[""+(u-1)/(p-1),"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${y};\n        float width_scale = ${w};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${k};\n        if( in_x < 0.0 || in_x > ${m} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const mD={kernelName:qs,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:r}=n,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:c}=r,l=new fD(s.shape,a.shape,o,u,c);return e.runWebGLProgram(l,[s,a,i],"float32")}};var $u;!function(n){n.Prod="*",n.Sum="+"}($u||($u={}));class u2{constructor(t,e,r,s){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const a=this.outputShape.length,o=r?this.op===$u.Prod?"1.0":"0.0":`getX(${c2(a,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1];let c="",l="";r?(c=s?"end != "+(u-1):"end != 0",l=s?"end + 1":"end - 1"):(c=s?`end + pow2 < ${u}`:"end >= pow2",l=s?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${Ge(a)} coords = getOutputCoords();\n        int end = ${h2(a,"coords",this.op)};\n        float val = ${o};\n        int pow2 = int(pow(2.0, index));\n        if (${c}) {\n          int idx = ${l};\n          ${h2(a,"coords",this.op)} = idx;\n          val ${this.op}= getX(${c2(a,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function c2(n,t,e){if(1===n)return`${t}`;if(2===n)return`${t}.x, ${t}.y`;if(3===n)return`${t}.x, ${t}.y, ${t}.z`;if(4===n)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}function h2(n,t,e){if(1===n)return`${t}`;if(2===n)return`${t}.y`;if(3===n)return`${t}.z`;if(4===n)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}function p2(n,t,e,r,s,a){const i=t.shape.length,o=tn([r],i);let u=t;null!=o&&(u=Xn({inputs:{x:t},backend:e,attrs:{perm:o}}));const c=an(1,i)[0];if(c!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const l=u.shape[c];let h=yr({inputs:{x:u},backend:e});for(let p=0;p<=Math.ceil(Math.log2(l))-1;p++){const d=new u2(n,u.shape,!1,a),m=h;h=e.runWebGLProgram(d,[h],h.dtype,[[p]]),e.disposeIntermediateTensorInfo(m)}if(s){const p=new u2(n,u.shape,s,a),d=h;h=e.runWebGLProgram(p,[h],h.dtype),e.disposeIntermediateTensorInfo(d)}if(null!=o){const p=Xn({inputs:{x:h},backend:e,attrs:{perm:ha(o)}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(u),p}return h}const gD={kernelName:cs,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return p2($u.Prod,s,e,a,i,o)}},yD={kernelName:Ui,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return p2($u.Sum,s,e,a,i,o)}},bD={kernelName:Ba,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const u=e.readSync(s.dataId),c=e.readSync(a.dataId),l=Av(u,c,a.dtype,a.shape,i);return e.makeTensorInfo([i],a.dtype,l)}if(2===s.shape.length){const u=e.bufferSync(s),c=e.bufferSync(a),l=OA(u,c,i,o);return e.makeTensorInfo(l.shape,a.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class xD{constructor(t,e,r){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=r,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const wD={kernelName:Zo,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{blockSize:a,dataFormat:i}=r,o=s.shape[0],u=("NHWC"===i?s.shape[1]:s.shape[2])*a,c=("NHWC"===i?s.shape[2]:s.shape[3])*a,l=("NHWC"===i?s.shape[3]:s.shape[1])/(a*a),h=new xD("NHWC"===i?[o,u,c,l]:[o,l,u,c],a,i);return e.runWebGLProgram(h,[s],s.dtype)}};class d2{constructor(t,e=!1,r=null,s=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=qn(this.outputShape.length);const i=t.filterHeight,o=t.filterWidth,u=t.outChannels/t.inChannels;let c="",l="";r&&(c=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${r}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${r}\n        }`:`\n          float activation(float x) {\n            ${r}\n          }\n        `,l="result = activation(result);");const h=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${c}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${u};\n        int q = d2 - d1 * ${u};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${o}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${h}\n        ${l}\n        setOutput(result);\n      }\n    `}}class f2{constructor(t,e=!1,r=null,s=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=qn(this.outputShape.length);const i=t.outChannels/t.inChannels,o=t.padInfo.left,u=t.strideWidth,c=t.dilationWidth,l=t.filterHeight,h=t.filterWidth,p=h;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let y=0;y<h;y++)d+=`\n          vec4 xTexelC${2*y};\n          int xTexelC${2*y}Ready;\n          vec4 xTexelC${2*y+1};\n          int xTexelC${2*y+1}Ready;\n          vec4 xC${y};`;d+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let y=0;y<h;y++)d+=`\n          xTexelC${2*y} = vec4(0.0);\n          xTexelC${2*y}Ready = 0;\n          xTexelC${2*y+1} = vec4(0.0);\n          xTexelC${2*y+1}Ready = 0;\n          xC${y} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let y=0;y<(p+1)/2;y++){const b=2*y;if(d+=`\n          xC = xCCorner + ${b*c};\n          `,1===u){if(b<h&&(o%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {\n                  xTexelC${b} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${b}.zw = vec2(0.0);\n                  }\n                  xTexelC${b}Ready = 1;\n                }\n              `,d+=1===c&&b>0?`\n                xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${b} = vec4(previous.zw, xTexelC${b}.xy);\n                  } else {\n                    xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {\n                  xTexelC${b} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${b}.zw = vec2(0.0);\n                  }\n                  xTexelC${b}Ready = 1;\n                }\n\n                xC${b} = xTexelC${b};\n                `,b+1<h)){const x=o%2==0?ke(c):c;c%2==0&&o%2==1||c%2!=0&&o%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${x};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {\n                    xTexelC${b+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${b+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${b+1}Ready = 1;\n                  }\n                  `,d+=c>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);\n                    } else {\n                     xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);\n                    }\n                    `:`\n                    xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);\n                    `):d+=1===x?`\n                    xC${b+1} = xTexelC${b};\n                    `:`\n                    xCOffset = xC + ${x};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {\n                      xTexelC${b+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${b+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${b+1}Ready = 1;\n                    }\n\n                    xC${b+1} = xTexelC${b+1};\n                    `}}else b<h&&(o%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {\n                  xTexelC${b} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${b}.zw = vec2(0.0);\n                  }\n                  xTexelC${b}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {\n                  xTexelC${b+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${b+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${b+1}Ready = 1;\n                }\n\n                xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);\n              `,b+1<h&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {\n                  xTexelC${b} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${b}.zw = vec2(0.0);\n                  }\n                  xTexelC${b}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {\n                  xTexelC${b+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${b+1}.zw = vec2(0.);\n                  }\n                  xTexelC${b+1}Ready = 1;\n                }\n\n                xC${b} = vec4(\n                  xTexelC${b}.xy, xTexelC${b+1}.xy);\n              `,b+1<h&&(d+=`\n                  xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);\n                `)));b<h&&(d+=`\n            wTexel = getW(r, ${b}, d1, q);\n            dotProd += xC${b} * vec4(wTexel.xz, wTexel.xz);\n          `,b+1<h&&(d+=`\n              wTexel = getW(r, ${b+1}, d1, q);\n              dotProd += xC${b+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let f="",m="";r&&(f=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${r}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${r}\n        }`:`vec4 activation(vec4 x) {\n          ${r}\n        }`,m="result = activation(result);");const g=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${g}\n        ${m}\n        setOutput(result);\n      }\n    `}}const vD={kernelName:Gi,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:c}=r;let l=u;null==l&&(l=[1,1]),I(Fn(i,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);const h=Nn(s.shape,a.shape,i,l,o,c,!0);let p;return p=Q().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new f2(h):new d2(h),e.runWebGLProgram(p,[s,a],"float32",[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]])}};class kD{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${t.outChannels/t.inChannels} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${t.strideHeight} - ${t.padInfo.top};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${t.strideWidth} - ${t.padInfo.left};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ID{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,r=t.filterWidth,u=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${e-1-t.padInfo.top}, ${r-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${r}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${r} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${u}; dm++) {\n              int d2 = d1 * ${u} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ND={kernelName:Wa,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,filterShape:l}=r,h=Nn(s.shape,l,i,o,u,c,!0),p=new kD(h);return e.runWebGLProgram(p,[s,a],"float32")}},SD={kernelName:Jo,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,inputShape:l}=r,h=Nn(l,a.shape,i,o,u,c,!0),p=new ID(h);return e.runWebGLProgram(p,[s,a],"float32")}};class TD{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const CD={kernelName:Qo,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e}=n,{x:r}=t,s=[...r.shape,...r.shape],a=nt(r.shape),i=Mt({inputs:{x:r},backend:e,attrs:{shape:[a]}}),o=new TD(a),u=e.runWebGLProgram(o,[i],i.dtype),c=Mt({inputs:{x:u},backend:e,attrs:{shape:s}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(u),c}};class $D{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:r,padInfo:s,strideHeight:a,strideWidth:i,filterHeight:o,filterWidth:u,dilationHeight:c,dilationWidth:l}=t,{top:h,left:p}=s;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${i});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${o}; h++) {\n          int hIn = hBeg + h * ${c};\n\n          if (hIn >= 0 && hIn < ${e}) {\n            for (int w = 0; w < ${u}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${r}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const ED={kernelName:T,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r,c=_l(s.shape,a.shape,i,o,"NHWC",u);let l;const h=new $D(c);l=e.runWebGLProgram(h,[s,a],"float32");const p=Mt({inputs:{x:l},backend:e,attrs:{shape:c.outShape}});return e.disposeIntermediateTensorInfo(l),p}},RD={kernelName:G,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:u}=Af(s,a.length);Df(i.length,u,a);const{path:c,steps:l}=_f(o,u),h=l.length;let p=null,d=i.length;const f=[];for(let m=0;m<h;++m){for(const g of l[m]){const{permutationIndices:y,expandDims:b}=Ff(d,u[g]);let x;Of(y)?x=a[g]:(x=Xn({inputs:{x:a[g]},backend:e,attrs:{perm:y}}),f.push(x));const w=x.shape.slice();for(let k=0;k<b.length;++k)w.splice(b[k],0,1);he(x.shape,w)||(x=Mt({inputs:{x},backend:e,attrs:{shape:w}}),f.push(x)),null===p?p=x:(p=ag({inputs:{a:x,b:p},backend:e}),f.push(p))}m<h-1&&(c[m]>=0&&(p=tp({inputs:{x:p},backend:e,attrs:{axis:c[m]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const m of f)m!==p&&e.disposeIntermediateTensorInfo(m);return p}},AD=Fe({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),FD={kernelName:Z,backendName:"webgl",kernelFunc:AD},DD={kernelName:ht,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e}=n,{dy:r,y:s}=t,a=Q().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Iu("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new Ro("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return e.runWebGLProgram(a,[r,s],r.dtype)}},_D=On({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:PA}),OD={kernelName:It,backendName:"webgl",kernelFunc:_D},MD=Fe({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${If};\n  float a1 = ${Nf};\n  float a2 = ${Sf};\n  float a3 = ${Tf};\n  float a4 = ${Cf};\n  float a5 = ${$f};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),LD={kernelName:xt,backendName:"webgl",kernelFunc:MD},m2=Fe({opSnippet:Ao+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:BA,dtype:"float32"}),zD={kernelName:Tt,backendName:"webgl",kernelFunc:m2};function lg(n){const{inputs:t,attrs:e,backend:r}=n,{dim:s}=e,{input:a}=t,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(I(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),o.splice(u,0,1),Mt({inputs:{x:a},backend:r,attrs:{shape:o}})}const PD={kernelName:Lt,backendName:"webgl",kernelFunc:lg},g2="return exp(x) - 1.0;",BD=Fe({opSnippet:g2,packedOpSnippet:g2,cpuKernelImpl:WA}),WD={kernelName:qt,backendName:"webgl",kernelFunc:BD};class y2{constructor(t,e,r){this.variableNames=["real","imag"];const s=e[1];this.outputShape=e;const a=r?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=r?`${s}.0`:"1.0";let o;if("real"===t)o="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);o="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${o}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function b2(n,t,e){const r=e.texData.get(n.dataId),s=nt(n.shape),a=n.shape[n.shape.length-1],i=Mt({inputs:{x:n},backend:e,attrs:{shape:[s/a,a]}}),o=i.shape,u=new y2("real",o,t),c=new y2("imag",o,t),l=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=e.runWebGLProgram(u,l,"float32"),p=e.runWebGLProgram(c,l,"float32"),d=Sa({inputs:{real:h,imag:p},backend:e});e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p);const f=Mt({inputs:{x:d},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(d),f}const VD={kernelName:"FFT",backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e}=n,{input:r}=t;return b2(r,!1,e)}};class UD{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function Eu(n){const{backend:t,attrs:e}=n,{shape:r,value:s}=e;let{dtype:a}=e;if(a=a||Ra(s),"string"===a){const i=hn(a,nt(r));return i.fill(s),t.makeTensorInfo(r,a,i)}{const i=new UD(r,s);return t.runWebGLProgram(i,[],a,[[s]])}}const GD={kernelName:_e,backendName:"webgl",kernelFunc:Eu};class HD{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const jD={kernelName:Oe,backendName:"webgl",kernelFunc:({inputs:n,backend:t})=>{const{image:e}=n,r=t,s=new HD(e.shape);return r.runWebGLProgram(s,[e],e.dtype)}},x2="return floor(x);",qD=Fe({opSnippet:x2,packedOpSnippet:x2,cpuKernelImpl:VA}),KD={kernelName:He,backendName:"webgl",kernelFunc:qD},XD=On({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),YD={kernelName:Qn,backendName:"webgl",kernelFunc:XD};class ZD{constructor(t){this.variableNames=["A"];const e=jn(),[r,s]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${r}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class JD{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=jn(),[r,s]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${r}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const QD={kernelName:Kp,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n;let{pixels:s}=t;const{numChannels:a}=r,i=typeof HTMLVideoElement<"u"&&s instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement,[u,c]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],l=[c,u],h=[c,u,a];if(o||i){const m=Q().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=Do&&m===ug||(ug=m,Do=document.createElement("canvas").getContext("2d",{willReadFrequently:ug})),Do.canvas.width=u,Do.canvas.height=c,Do.drawImage(s,0,0,u,c),s=Do.canvas}const p=e.makeTensorInfo(l,"int32");e.texData.get(p.dataId).usage=Rr.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(p.dataId),s);const d=Q().getBool("WEBGL_PACK")?new JD(h):new ZD(h),f=e.runWebGLProgram(d,[p],"int32");return e.disposeData(p.dataId),f}};let Do,ug=Q().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const t_={kernelName:Ic,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r,m=$s(l),g=Nn(s.shape,a.shape,u,h,c,p,!1,m);let y;const b=[],x=null!=i,w=null!=o,k="leakyrelu"===d,N=()=>{const C=[s,a],R=(A,_)=>{if("NCHW"===_&&1===A.shape.length&&1!==A.shape[0]){const z=Mt({inputs:{x:A},backend:e,attrs:{shape:[A.shape[0],1,1]}});return b.push(z),z}return A};if(x&&C.push(R(i,l)),w&&C.push(R(o,l)),k){const A=e.makeTensorInfo([],"float32",Js(f,"float32"));C.push(A),b.push(A)}return C};if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(g.strideWidth<=2&&"channelsLast"===m&&Q().getBool("WEBGL_EXP_CONV")){const C=d?Nu(d,!0):null,R=new i2(g,x,C,w,k),A=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],_=N();y=e.runWebGLProgram(R,_,"float32",A)}else if(Q().getBool("WEBGL_CONV_IM2COL"))y=l2({x:s,filter:a,convInfo:g,backend:e,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});else{const C=d?Nu(d,!1):null,R=new a2(g,x,C,w,k),A=N();y=e.runWebGLProgram(R,A,"float32")}else y=o2({x:s,filter:a,convInfo:g,backend:e,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});const $=Mt({inputs:{x:y},backend:e,attrs:{shape:g.outShape}});return b.push(y),b.forEach(C=>e.disposeIntermediateTensorInfo(C)),$}},e_={kernelName:Nc,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dilations:l,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=r,f=[];let m=l;null==m&&(m=[1,1]),I(Fn(u,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`);const g=Nn(s.shape,a.shape,u,m,c,h,!0),y=Q().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=p?Nu(p,y):null,x=[s,a],w=null!=i,k=null!=o,N="leakyrelu"===p;if(w&&x.push(i),k&&x.push(o),N){const A=e.makeTensorInfo([],"float32",Js(d,"float32"));x.push(A),f.push(A)}let $;$=y?new f2(g,w,b,k,N):new d2(g,w,b,k,N);const R=e.runWebGLProgram($,x,"float32",[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]]);return f.forEach(A=>e.disposeIntermediateTensorInfo(A)),R}};class n_{constructor(t,e,r,s){this.sliceDim=t,this.strides=e,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=r;const a=Ge(r.length);let i="\n    int index;";for(let o=0;o<this.sliceDim;o++)i+=`\n          index = round(getIndices(coords[0], ${o}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[o]};\n          flattenIndex += index * ${this.strides[o]};`;this.userCode=`\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${i}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const r_={kernelName:tl,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e}=n,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],o=nt(r.shape),[u,c,l,h]=kf(r,s),p=Mt({inputs:{x:s},backend:e,attrs:{shape:[c,i]}}),d=Mt({inputs:{x:r},backend:e,attrs:{shape:[nt(r.shape)/l,l]}});if(e.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const y=e.readSync(s.dataId),b=e.bufferSync(r),x=UA(y,b,r.dtype,c,i,l,h,r.shape,o);return e.makeTensorInfo(u,r.dtype,x.values)}const f=new n_(i,h,[c,l],r.shape),m=e.runWebGLProgram(f,[d,p],d.dtype),g=Mt({inputs:{x:m},backend:e,attrs:{shape:u}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(m),g}};class s_{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const r=Ge(this.rank),s=function(a,i){const o=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[];for(let c=0;c<a.length;c++)u.push(2===c?"index":`${o[c]}`);return u.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${s}));\n      }\n    `}}function w2(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,indices:a}=t,{axis:i,batchDims:o}=r,u=be(i,s.shape)[0];if(Q().get("DEBUG")){const b=e.readSync(a.dataId),x=s.shape[u];for(let w=0;w<b.length;++w){const k=b[w];I(k<=x-1&&k>=0,()=>`GatherV2: the index value ${k} is not in [0, ${x-1}]`)}}const c=Lf(s,a,u,o),l=nt(a.shape),h=[],p=Mt({inputs:{x:s},backend:e,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),d=Mt({inputs:{x:a},backend:e,attrs:{shape:[c.batchSize,l/c.batchSize]}});h.push(p),h.push(d);const f=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(e.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const b=e.bufferSync(d),x=e.bufferSync(p),w=GA(x,b,f);return h.forEach(k=>e.disposeIntermediateTensorInfo(k)),e.makeTensorInfo(c.outputShape,w.dtype,w.values)}const m=new s_(p.shape,f),g=e.runWebGLProgram(m,[p,d],p.dtype);h.push(g);const y=Mt({inputs:{x:g},backend:e,attrs:{shape:c.outputShape}});return h.forEach(b=>e.disposeIntermediateTensorInfo(b)),y}const a_={kernelName:Xs,backendName:"webgl",kernelFunc:w2},i_=On({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:HA,dtype:"bool"}),o_={kernelName:Hi,backendName:"webgl",kernelFunc:i_},l_=On({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:jA}),u_={kernelName:Ys,backendName:"webgl",kernelFunc:l_},c_={kernelName:gp,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e}=n,{input:r}=t;return b2(r,!0,e)}},h_=Fe({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),p_={kernelName:nl,backendName:"webgl",kernelFunc:h_},d_=Fe({opSnippet:"return float(isinf(x));",dtype:"bool"}),f_={kernelName:rl,backendName:"webgl",kernelFunc:d_},m_=Fe({opSnippet:"return float(isnan(x));",dtype:"bool"}),g_={kernelName:sl,backendName:"webgl",kernelFunc:m_},y_=On({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:qA,dtype:"bool"}),b_={kernelName:Uu,backendName:"webgl",kernelFunc:y_},x_=On({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:KA,dtype:"bool"}),w_={kernelName:Gu,backendName:"webgl",kernelFunc:x_},v_={kernelName:bp,backendName:"webgl",kernelFunc:function(n){const{backend:t,attrs:e}=n,{start:r,stop:s,num:a}=e,i=XA(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},k_=Fe({opSnippet:Ao+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:YA}),I_={kernelName:al,backendName:"webgl",kernelFunc:k_},N_=Fe({opSnippet:Ao+"\n  return log(1.0 + x);\n"}),S_={kernelName:il,backendName:"webgl",kernelFunc:N_},T_=On({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),C_={kernelName:Hu,backendName:"webgl",kernelFunc:T_},$_=Fe({opSnippet:"return float(!(x >= 1.0));"}),E_={kernelName:ju,backendName:"webgl",kernelFunc:$_},R_=On({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),A_={kernelName:qu,backendName:"webgl",kernelFunc:R_};class F_{constructor(t,e,r,s,a){this.variableNames=["x"],this.outputShape=[];const i=e,o=t[3]-1;let u;this.outputShape=t;const c=`float(${r}) + float(${s}) * sum`;u=.5===a?`inversesqrt(${c})`:1===a?`1.0/(${c})`:`exp(log(${c}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${o}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${u};\n        setOutput(val);\n      }\n    `}}class D_{constructor(t,e,r,s,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,o=t[3]-1;let u;this.outputShape=t;const c=`float(${r}) + float(${s}) * sum`;u=.5===a?`inversesqrt(${c})`:1===a?`1.0/(${c})`:`exp(log(${c}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${o}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${u};\n        setOutput(result);\n      }\n    `}}const __={kernelName:Ku,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=r,c=Q().getBool("WEBGL_PACK_NORMALIZATION")?new D_(s.shape,a,i,o,u):new F_(s.shape,a,i,o,u);return e.runWebGLProgram(c,[s],s.dtype)}};class O_{constructor(t,e,r,s,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=r,this.alpha=s,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${r});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const M_={kernelName:xp,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:r}=n,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:c,beta:l}=r,h=new O_(s.shape,o,u,c,l);return e.runWebGLProgram(h,[s,a,i],s.dtype)}};function v2(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=s.shape.length,u=be(a,s.shape);let c=u;const l=tn(c,o),h=null!=l,p=e.shouldExecuteOnCPU([s]);let d=s;if(h){if(p){const b=e.texData.get(d.dataId).values,x=new Array(o);for(let k=0;k<x.length;k++)x[k]=s.shape[l[k]];const w=ng(b,s.shape,s.dtype,l,x);d=e.makeTensorInfo(x,s.dtype),e.texData.get(d.dataId).values=w}else d=Qh(s,l,e);c=an(c.length,o)}Dn("max",c,o);const[f,m]=Sn(d.shape,c);let g,y=f;if(i&&(y=sn(f,u)),p){const b=e.texData.get(d.dataId).values,x=ZA(b,nt(m),y,s.dtype);g=e.makeTensorInfo(y,s.dtype),e.texData.get(g.dataId).values=x}else g=function(b,x,w,k){const N=nt(x),$=Mt({inputs:{x:b},attrs:{shape:[nt(b.shape)/N,N]},backend:k}),C=mi($,b.dtype,"max",k),R=Mt({inputs:{x:C},attrs:{shape:w},backend:k});return k.disposeIntermediateTensorInfo($),k.disposeIntermediateTensorInfo(C),R}(d,m,y,e);return h&&e.disposeIntermediateTensorInfo(d),g}const L_={kernelName:Xu,backendName:"webgl",kernelFunc:v2},z_=On({opSnippet:sg+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+ku+"\n  return result;\n",cpuKernelImpl:JA}),P_={kernelName:ol,backendName:"webgl",kernelFunc:z_},B_={kernelName:Yu,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t;wu(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;I(Fn(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const c=Dr(s.shape,a,i,1,o,u);if(1===c.filterWidth&&1===c.filterHeight&&he(c.inShape,c.outShape))return yr({inputs:{x:s},backend:e});const l=new Su(c,"max",!1);return e.runWebGLProgram(l,[s],s.dtype)}},W_={kernelName:Zu,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:u,dimRoundingMode:c}=r,l=Cs(s.shape,a,i,[1,1,1],o,c,u),h=new ig(l,"max",!1);return e.runWebGLProgram(h,[s],s.dtype)}};class V_{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const a=t.effectiveFilterHeight,i=t.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${a-1-t.padInfo.top}, ${i-1-t.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${t.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${a*i-1} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class U_{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,l=t.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${u-1-t.padInfo.front}, ${c-1-t.padInfo.top}, ${l-1-t.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${u};\n           wD += ${t.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${t.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${c};\n              wR += ${t.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${t.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${t.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${t.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${u*c*l-1} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${c} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const G_={kernelName:vp,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a}=t,i=a,{filterSize:o,strides:u,pad:c,dimRoundingMode:l}=r,h=Cs(i.shape,o,u,[1,1,1],c,l),p=new ig(h,"max",!0),d=e.runWebGLProgram(p,[i],i.dtype),f=new U_(h),m=e.runWebGLProgram(f,[s,d],i.dtype);return e.disposeIntermediateTensorInfo(d),m}},H_={kernelName:wp,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{dy:s,input:a,output:i}=t,o=a;wu([a,i],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:h}=r,p=Dr(o.shape,u,c,1,l,h),d=new Su(p,"max",!0),f=e.runWebGLProgram(d,[o],o.dtype),m=new V_(p),g=e.runWebGLProgram(m,[s,f],o.dtype);return e.disposeIntermediateTensorInfo(f),g}},j_={kernelName:kp,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:r}=n,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,u=e;I(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const c=[1,1];I(Fn(a,c),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`);const l=Dr(r.shape,s,a,c,i),[h,p]=function(d,f,m,g){let y=new Su(m,"max",!1);const b=g.runWebGLProgram(y,[d],"float32");return y=new Su(m,"max",!0,!0,f),[b,g.runWebGLProgram(y,[d],"float32")]}(r,o,l,u);return[h,p]}},q_={kernelName:Ju,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:r}=n,{keepDims:s,axis:a}=t,i=e,o=r.shape.length,u=be(a,r.shape);let c=u;const l=tn(c,o),h=null!=l,p=i.shouldExecuteOnCPU([r]),d=[];let f=r;if(h){if(p){const x=i.texData.get(f.dataId).values,w=new Array(o);for(let N=0;N<w.length;N++)w[N]=r.shape[l[N]];const k=ng(x,r.shape,r.dtype,l,w);f=i.makeTensorInfo(w,r.dtype),i.texData.get(f.dataId).values=k}else f=Qh(r,l,i);d.push(f),c=an(c.length,o)}Dn("sum",c,o);const[m,g]=Sn(f.shape,c);let y=m;s&&(y=sn(m,u));const b=function(x,w,k,N){const $=nt(w),C=Mt({inputs:{x},attrs:{shape:[nt(x.shape)/$,$]},backend:N}),R=mi(C,"float32","mean",N),A=Mt({inputs:{x:R},attrs:{shape:k},backend:N});return N.disposeIntermediateTensorInfo(C),N.disposeIntermediateTensorInfo(R),A}(f,g,y,i);for(const x of d)i.disposeIntermediateTensorInfo(x);return b}},K_={kernelName:Qu,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=be(a,s.shape);let c=u;const l=tn(c,o);let h=s;null!=l&&(h=Xn({inputs:{x:s},backend:e,attrs:{perm:l}}),c=an(c.length,s.shape.length)),Dn("min",c,o);const[p,d]=Sn(h.shape,c),f=Mt({inputs:{x:h},backend:e,attrs:{shape:[-1,nt(d)]}}),m=mi(f,f.dtype,"min",e);let g;return g=Mt(i?{inputs:{x:m},backend:e,attrs:{shape:sn(p,u)}}:{inputs:{x:m},backend:e,attrs:{shape:p}}),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(m),null!=l&&e.disposeIntermediateTensorInfo(h),g}},X_=On({opSnippet:sg+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+ku+"\n  return result;\n",cpuKernelImpl:QA}),Y_={kernelName:ll,backendName:"webgl",kernelFunc:X_};class Z_{constructor(t,e,r){this.variableNames=["x"],this.outputShape=e.map((l,h)=>l[0]+t[h]+l[1]);const s=t.length,a=Ge(s),i=e.map(l=>l[0]).join(","),o=e.map((l,h)=>l[0]+t[h]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),c="reflect"===r?0:1;this.userCode=1!==s?`\n      ${a} start = ${a}(${i});\n      ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${c};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${c};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${u}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${c};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${c};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class J_{constructor(t,e,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((f,m)=>f[0]+t[m]+f[1]);const s=t.length,a=Ge(s),i=e.map(f=>f[0]).join(","),o=e.map((f,m)=>f[0]+t[m]).join(","),u=Kn("rc",s),c=Kn("source",s),l=`${u[s-1]} < ${this.outputShape[s-1]}`,h=1===s?"source":`vec2(${c.slice(-2).join()})`,p="reflect"===r?0:1;let d="";if(1===s){const f=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${p};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${p};\n        }\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${f}\n        result[0] = getChannel(getX(${c.join()}), ${h});\n        ${u[s-1]} += 1;\n        if(${l}) {\n          ${f}\n          result[1] = getChannel(getX(${c.join()}), ${h});\n        }\n      `}else{const f=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${p}) +\n                gte * ((end - 1) * 2 - source + ${p});\n        source -= start;\n      `;d=`\n        ${a} rc = outputLoc;\n        ${f}\n        result[0] = getChannel(getX(${c.join()}), ${h});\n        ${u[s-1]} += 1;\n        if(${l}) {\n          ${f}\n          result[1] = getChannel(getX(${c.join()}), ${h});\n        }\n        rc = outputLoc;\n        ${u[s-2]} += 1;\n        if(${u[s-2]} < ${this.outputShape[s-2]}) {\n          ${f}\n          result[2] = getChannel(getX(${c.join()}), ${h});\n          ${u[s-1]} += 1;\n          if(${l}) {\n            ${f}\n            result[3] = getChannel(getX(${c.join()}), ${h});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${i});\n      const ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const Q_={kernelName:tc,backendName:"webgl",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:r}=n,{paddings:s,mode:a}=e,i=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new J_(r.shape,s,a):new Z_(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},tO=On({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+ku+"\n  return result;\n"}),eO={kernelName:ul,backendName:"webgl",kernelFunc:tO};class nO{constructor(t,e,r){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,r],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}}const k2=On({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),rO={kernelName:j,backendName:"webgl",kernelFunc:k2},I2="return a - b;",N2=On({opSnippet:I2,packedOpSnippet:I2,supportsComplex:!0,cpuKernelImpl:b4}),sO={kernelName:Sl,backendName:"webgl",kernelFunc:N2};function S2(n){const{inputs:t,backend:e,attrs:r}=n,{logits:s}=t,{dim:a}=r,i=be([a],s.shape),o=v2({inputs:{x:s},backend:e,attrs:{reductionIndices:i,keepDims:!1}}),u=sn(o.shape,i),c=Mt({inputs:{x:o},backend:e,attrs:{shape:u}}),l=N2({inputs:{a:s,b:c},backend:e}),h=m2({inputs:{x:l},backend:e}),p=tp({inputs:{x:h},backend:e,attrs:{axis:i,keepDims:!1}}),d=Mt({inputs:{x:p},backend:e,attrs:{shape:u}}),f=k2({inputs:{a:h,b:d},backend:e});return e.disposeIntermediateTensorInfo(o),e.disposeIntermediateTensorInfo(c),e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(d),f}const aO={kernelName:bc,backendName:"webgl",kernelFunc:S2},iO={kernelName:Ip,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,u=o?s:S2({inputs:{logits:s},backend:e,attrs:{dim:s.shape.length-1}}),h=new nO(u.shape[0],u.shape[1],a),d=e.runWebGLProgram(h,[u],"int32",[[i]]);return o||e.disposeIntermediateTensorInfo(u),d}},lO={kernelName:ec,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e}=n,{x:r}=t;if(e.shouldExecuteOnCPU([r])){const a=e.texData.get(r.dataId),[i,o]=e4(a.values,r.shape,r.dtype);return e.makeTensorInfo(o,r.dtype,i)}let s;return s=Q().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new fi(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Ls(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),e.runWebGLProgram(s,[r],r.dtype)}},uO=of,cO={kernelName:Np,backendName:"webgl",kernelFunc:function(n){vr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:r}=n,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,c=e.readSync(s.dataId),l=e.readSync(a.dataId),{selectedIndices:h}=uO(c,l,i,o,u);return e.makeTensorInfo([h.length],"int32",new Int32Array(h))}},hO=lf,pO={kernelName:Sp,backendName:"webgl",kernelFunc:function(n){vr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:r}=n,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:c}=r,l=e.readSync(s.dataId),h=e.readSync(a.dataId),{selectedIndices:p,validOutputs:d}=hO(l,h,i,o,u,c);return[e.makeTensorInfo([p.length],"int32",new Int32Array(p)),e.makeTensorInfo([],"int32",new Int32Array([d]))]}},dO=uf,fO={kernelName:Tp,backendName:"webgl",kernelFunc:function(n){vr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:r}=n,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:c}=r,l=e.readSync(s.dataId),h=e.readSync(a.dataId),p=i,d=o,f=u,m=c,{selectedIndices:g,selectedScores:y}=dO(l,h,p,d,f,m);return[e.makeTensorInfo([g.length],"int32",new Int32Array(g)),e.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class mO{constructor(t,e,r,s){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${r}),\n                      float(index == coords.y)));\n      }\n    `}}const gO={kernelName:sc,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:r}=n,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:u}=r,c=nt(s.shape),l=new mO(c,i,o,u),h=Mt({inputs:{x:s},backend:e,attrs:{shape:[c]}}),p=e.runWebGLProgram(l,[h],a);e.disposeIntermediateTensorInfo(h);const d=Mt({inputs:{x:p},backend:e,attrs:{shape:[...s.shape,i]}});return e.disposeIntermediateTensorInfo(p),d}};function ap(n){const{inputs:t,backend:e}=n,{x:r}=t;if("complex64"===r.dtype){const s=Tu({inputs:{input:r},backend:e}),a=ap({inputs:{x:s},backend:e}),i=rp({inputs:{input:r},backend:e}),o=ap({inputs:{x:i},backend:e}),u=Sa({inputs:{real:a,imag:o},backend:e});return e.disposeIntermediateTensorInfo(s),e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(o),u}return Eu({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:e})}const yO={kernelName:vc,backendName:"webgl",kernelFunc:ap},bO={kernelName:rc,backendName:"webgl",kernelFunc:function n(t){const{inputs:e,backend:r}=t,{x:s}=e;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const a=Tu({inputs:{input:s},backend:r}),i=n({inputs:{x:a},backend:r}),o=rp({inputs:{input:s},backend:r}),u=ap({inputs:{x:o},backend:r}),c=Sa({inputs:{real:i,imag:u},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),r.disposeIntermediateTensorInfo(u),c}return Eu({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},xO={kernelName:ac,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{axis:s}=r;if(1===t.length)return lg({inputs:{input:t[0]},backend:e,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach(c=>{Ae(a,c.shape,"All tensors passed to stack must have matching shapes"),I(i===c.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],u=s2({inputs:t.map(c=>{const l=lg({inputs:{input:c},backend:e,attrs:{dim:s}});return o.push(l),l}),backend:e,attrs:{axis:s}});return o.forEach(c=>e.disposeIntermediateTensorInfo(c)),u}};class wO{constructor(t,e,r){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((c,l)=>c[0]+t[l]+c[1]);const s=t.length,a=Ge(s),i=e.map(c=>c[0]).join(","),o=e.map((c,l)=>c[0]+t[l]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${a} start = ${a}(${i});\n      ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${u}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${o};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class vO{constructor(t,e,r){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((m,g)=>m[0]+t[g]+m[1]);const s=t.length,a=Ge(s),i=e.map(m=>m[0]).join(","),o=e.map((m,g)=>m[0]+t[g]).join(","),u=Kn("rc",s),c=Kn("source",s),l=`${u[s-1]} < ${this.outputShape[s-1]}`,h=1===s?"source":`vec2(${c.slice(-2).join()})`,p=[`${a} rc = outputLoc;`,`${u[s-1]} += 1;\n       if(${l}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${u[s-2]} += 1;\n       if(${u[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${u[s-1]} += 1;\n         if(${l}) {`],d=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,g=1===s?2:4;m<g;m++)f+=`\n        ${p[m]}\n        if (${d}) {\n          result[${m}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${m}] = getChannel(getX(${c.join()}), ${h});\n        }\n      `;f+=1===s?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${i});\n      const ${a} end = ${a}(${o});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${f}\n        setOutput(result);\n      }\n    `}}const T2=n=>{const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{paddings:a,constantValue:i}=r;if(0===nt(s.shape))return Eu({backend:e,attrs:{shape:a.map((l,h)=>l[0]+s.shape[h]+l[1]),value:i,dtype:s.dtype}});const o=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vO(s.shape,a,i):new wO(s.shape,a,i);return e.runWebGLProgram(o,[s],s.dtype,[[i]])},kO={kernelName:ic,backendName:"webgl",kernelFunc:T2},IO=On({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+ku+"\n  return result;\n"}),NO={kernelName:hl,backendName:"webgl",kernelFunc:IO},SO={kernelName:lc,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=[],c=be(a,s.shape);let l=c;const h=tn(l,o);let p,d=s;if(null!=h&&(d=Xn({inputs:{x:s},backend:e,attrs:{perm:h}}),l=an(l.length,o),u.push(d)),Dn("prod",l,o),e.shouldExecuteOnCPU([d])){const f=e.texData.get(d.dataId).values,{outVals:m,outShape:g,outDtype:y}=r4(d.shape,d.dtype,f,l);p=e.makeTensorInfo(g,y,m)}else{const[f,m]=Sn(d.shape,l),g=nt(m),y=Mt({inputs:{x:d},backend:e,attrs:{shape:[-1,g]}}),b=mi(y,sd(s.dtype),"prod",e);p=Mt({inputs:{x:b},backend:e,attrs:{shape:f}}),u.push(y),u.push(b)}if(i){u.push(p);const f=sn(p.shape,c);p=Mt({inputs:{x:p},backend:e,attrs:{shape:f}})}return u.forEach(f=>e.disposeIntermediateTensorInfo(f)),p}},TO={kernelName:Cp,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,u=s.map(y=>e.readSync(y.dataId)),c=s.map(y=>y.shape),l=e.readSync(a.dataId),h=e.readSync(i.dataId),[p,d,f]=s4(u,c,l,a.shape,a.dtype,h,i.shape,o),m=p.map(y=>e.makeTensorInfo([y.length],"int32",y)),g=e.makeTensorInfo(f,a.dtype,d);return m.concat([g])}},CO={kernelName:$p,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,c=e.readSync(s.dataId),l=e.readSync(a.dataId),h=e.readSync(i.dataId),p=o.map(g=>e.readSync(g.dataId)),d=o.map(g=>g.shape),[f,m]=a4(c,s.shape,l,a.shape,a.dtype,h,i.shape,p,d,u);return e.makeTensorInfo(f,a.dtype,m)}},C2=n=>{const{backend:t,attrs:e}=n,{start:r,stop:s,step:a,dtype:i}=e,o=i4(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},$O={kernelName:Ep,backendName:"webgl",kernelFunc:C2},EO=Fe({opSnippet:"return 1.0 / x;"}),RO={kernelName:pl,backendName:"webgl",kernelFunc:EO},AO=Fe({opSnippet:Gr+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),FO={kernelName:dl,backendName:"webgl",kernelFunc:AO},DO=Fe({opSnippet:Gr+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),_O={kernelName:fl,backendName:"webgl",kernelFunc:DO};class OO{constructor(t,e,r,s,a){this.variableNames=["A"],this.outputShape=[];const[i,o,u,c]=t;this.outputShape=[i,e,r,c];const l=[s&&e>1?o-1:o,s&&r>1?u-1:u],h=[s&&e>1?e-1:e,s&&r>1?r-1:r];let p;p=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/h[0]},\n          ${l[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${u}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class MO{constructor(t,e,r,s,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,o,u,c]=t;this.outputShape=[i,e,r,c];const l=[s&&e>1?o-1:o,s&&r>1?u-1:u],h=[s&&e>1?e-1:e,s&&r>1?r-1:r];let p;p=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/h[0]},\n          ${l[1]/h[1]},\n          ${l[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${u}.0,\n                                     ${u}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${c-1};\n        bool hasNextRow = coords.z < ${r-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const LO={kernelName:hc,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[u,c]=o,l=Q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new MO(s.shape,u,c,a,i):new OO(s.shape,u,c,a,i);return e.runWebGLProgram(l,[s],"float32")}};class zO{constructor(t,e,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,s,a]=e,[,i,o]=t,u=[r&&i>1?s-1:s,r&&o>1?a-1:a],c=[r&&i>1?i-1:i,r&&o>1?o-1:o],l=u[0]/c[0],h=u[1]/c[1],p=1/l,d=1/h,f=2*Math.ceil(p)+2,m=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${f});\n        const int winWidth = int(${m});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const PO={kernelName:Fp,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{images:s,dy:a}=t,{alignCorners:i}=r,o=new zO(a.shape,s.shape,i);return e.runWebGLProgram(o,[a],a.dtype)}};class BO{constructor(t,e,r,s,a){this.variableNames=["A"],this.outputShape=[];const[i,o,u,c]=t;this.outputShape=[i,e,r,c];const l=[s&&e>1?o-1:o,s&&r>1?u-1:u],h=[s&&e>1?e-1:e,s&&r>1?r-1:r];let d;d=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/h[0]},\n          ${l[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${u}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${s?"0.5":"0.0"})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class WO{constructor(t,e,r,s,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,o,u,c]=t;this.outputShape=[i,e,r,c];const l=[s&&e>1?o-1:o,s&&r>1?u-1:u],h=[s&&e>1?e-1:e,s&&r>1?r-1:r];let d;d=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/h[0]},\n          ${l[1]/h[1]},\n          ${l[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${u}.0,\n                                     ${u}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${s?"0.5":"0.0"})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${c-1};\n        bool hasNextRow = coords.z < ${r-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const VO={kernelName:cc,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[u,c]=o,l=Q().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new WO(s.shape,u,c,a,i):new BO(s.shape,u,c,a,i);return e.runWebGLProgram(l,[s],s.dtype)}};class UO{constructor(t,e,r){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,s,a]=e,[,i,o]=t,u=[r&&i>1?s-1:s,r&&o>1?a-1:a],c=[r&&i>1?i-1:i,r&&o>1?o-1:o],l=u[0]/c[0],h=u[1]/c[1],p=1/l,d=1/h,f=2*Math.ceil(p)+2,m=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${h});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${f});\n        const int winWidth = int(${m});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${o}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${u[0]}) *\n                (float(dyR) / float(${c[0]}));\n\n            float sourceFracCol =\n                float(${u[1]}) *\n                  (float(dyC) / float(${c[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${r} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${r} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const GO={kernelName:Ap,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{images:s,dy:a}=t,{alignCorners:i}=r,o=new UO(a.shape,s.shape,i);return e.runWebGLProgram(o,[a],a.dtype)}};class HO{constructor(t,e){this.variableNames=["x"];const r=t.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);if(this.outputShape=t,1===r)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const s=t.map((i,o)=>{return-1!==e.indexOf(u=o)&&1!==t[u]?`${t[u]} - coords[${u}] - 1`:`coords[${u}]`;var u}).join(","),a=Ge(r);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class jO{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const r=t.length;if(r>4)throw new Error(`WebGL backend: Reverse of rank-${r} tensor is not yet supported`);this.outputShape=t;const s=Kn("rc",r),a=`${s[r-1]} + 1 < ${this.outputShape[r-1]}`,i=`${s[r-2]} + 1 < ${this.outputShape[r-2]}`,o=Ge(r);function u(c){const l=t.map((h,p)=>{return f=c,-1!==e.indexOf(d=p)&&1!==t[d]?`${t[d]} - ${f[d]} - 1`:`${f[d]}`;var d,f});return`getChannel(getX(${l.join(",")}), vec2(${l.slice(-2).join(",")}))`}var c;this.userCode=1===r?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${o} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${c=s.slice(),u(c)};\n          if(${a}){\n            result.g = ${function(c){return c[r-1]="("+c[r-1]+" + 1)",u(c)}(s.slice())};\n          }\n          if(${i}) {\n            result.b = ${function(c){return c[r-2]="("+c[r-2]+" + 1)",u(c)}(s.slice())};\n            if(${a}) {\n              result.a = ${function(c){return c[r-1]="("+c[r-1]+" + 1)",c[r-2]="("+c[r-2]+" + 1)",u(c)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const qO={kernelName:pc,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{dims:a}=r,i=s.shape.length,o=be(a,s.shape);if(0===i)return yr({inputs:{x:s},backend:e});const u=Q().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jO(s.shape,o):new HO(s.shape,o);return e.runWebGLProgram(u,[s],s.dtype)}};class KO{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const r=t[1],s=t[2];this.outputShape=t;let a="";a="number"==typeof e?`float outputValue = ${e.toFixed(2)};`:`\n        vec3 fill = vec3(${e.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${r}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const XO={kernelName:Xp,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:r}=n,{radians:s,fillValue:a,center:i}=t,o=e,u=new KO(r.shape,a),[c,l]=xf(i,r.shape[1],r.shape[2]),h=[[c,l,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(u,[r],r.dtype,h)}},YO=Fe({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),ZO={kernelName:ml,backendName:"webgl",kernelFunc:YO},JO=Fe({opSnippet:"return inversesqrt(x);",cpuKernelImpl:o4}),QO={kernelName:gl,backendName:"webgl",kernelFunc:JO};class $2{constructor(t,e,r,s,a,i,o=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const u=Ge(a.length),c=Ge(i.length);let l="";1===r?l="i":2===r&&(l="i, j");let p="";1===s?p="i":2===s&&(p="i, coords[1]"),this.userCode=`\n        ${u} strides = ${u}(${a});\n\n        void main() {\n          ${c} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(getIndices(${l}));\n              flattenedIndex += index * ${e>1?"strides[j]":"strides"};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += getUpdates(${p});\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const t9={kernelName:Dp,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:c,strides:l,outputSize:h}=ql(0,s,i),p=[h/c,c];if(0===h)return e.makeTensorInfo(i,s.dtype);const d=Mt({inputs:{x:s},backend:e,attrs:{shape:[u,o]}}),f=Mt({inputs:{x:a},backend:e,attrs:{shape:[u,c]}}),m=e.makeTensorInfo([],"float32",new Float32Array([0])),g=new $2(u,o,d.shape.length,f.shape.length,l,p),y=e.runWebGLProgram(g,[f,d,m],f.dtype),b=Mt({inputs:{x:y},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(d),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(m),b}};class e9{constructor(t,e,r,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,r];const a=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,i=2===Q().getNumber("WEBGL_VERSION")?"while (left < right) {":a;this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${i}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${"left"===s?"<":"<="} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const n9={kernelName:_p,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{sortedSequence:s,values:a}=t,{side:i}=r,o=new e9(s.shape[0],s.shape[1],a.shape[1],i);return e.runWebGLProgram(o,[s,a],"int32",[[s.shape[1]]])}};class r9{constructor(t,e,r){let s,a;if(this.variableNames=["c","a","b"],this.outputShape=e,r>4)throw Error(`Where for rank ${r} is not yet supported`);if(1===r)a="resRC",s="resRC";else{const o=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],c=[];for(let l=0;l<e.length;l++)c.push(`${o[l]}`),l<t&&u.push(`${o[l]}`);s=u.join(),a=c.join()}const i=Ge(r);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const s9={kernelName:dc,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e}=n,{condition:r,t:s,e:a}=t,i=new r9(r.shape.length,s.shape,s.shape.length);return e.runWebGLProgram(i,[r,s,a],ur(s.dtype,a.dtype))}},a9=Fe({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${lh};\n  float scale = ${uh};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),i9={kernelName:yl,backendName:"webgl",kernelFunc:a9},o9=Fe({opSnippet:Ao+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:u4}),l9={kernelName:vl,backendName:"webgl",kernelFunc:o9},u9=Fe({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),c9={kernelName:wl,backendName:"webgl",kernelFunc:u9},h9=Fe({opSnippet:Ao+"\n  return sin(x);\n"}),p9={kernelName:bl,backendName:"webgl",kernelFunc:h9},d9=Fe({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),f9={kernelName:xl,backendName:"webgl",kernelFunc:d9},m9=Fe({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),g9={kernelName:kl,backendName:"webgl",kernelFunc:m9},y9={kernelName:gc,backendName:"webgl",kernelFunc:n=>{const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{blockShape:a,paddings:i}=r;I(s.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const o=a.reduce((y,b)=>y*b),u=[[0,0]];u.push(...i);for(let y=1+a.length;y<s.shape.length;++y)u.push([0,0]);const c=[],l=T2({inputs:{x:s},backend:e,attrs:{paddings:u,constantValue:0}}),h=Kl(l.shape,a,o,!1),p=Xl(h.length,a.length,!1),d=Yl(l.shape,a,o,!1),f=Mt({inputs:{x:l},backend:e,attrs:{shape:h}}),m=Xn({inputs:{x:f},backend:e,attrs:{perm:p}}),g=Mt({inputs:{x:m},backend:e,attrs:{shape:d}});return c.push(l),c.push(f),c.push(m),c.forEach(y=>e.disposeIntermediateTensorInfo(y)),g}},b9={kernelName:Op,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e}=n,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=e.readSync(r.dataId),u=e.readSync(s.dataId),c=e.readSync(a.dataId),l=e.readSync(i.dataId)[0],[h,p,d,f,m]=h4(o,r.shape,r.dtype,u,s.dtype,c,l);return[e.makeTensorInfo(p,r.dtype,h),e.makeTensorInfo([p[0]],s.dtype,d),e.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),e.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},x9={kernelName:Mp,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e}=n,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(e.readSync(s.dataId)),o=e.readSync(r.dataId),u=Array.from(e.readSync(a.dataId)),[c,l,h]=p4(o,r.shape,r.dtype,i,u);return[e.makeTensorInfo(l,r.dtype,c),e.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},w9={kernelName:Lp,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e}=n,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=e.readSync(r.dataId),o=e.readSync(s.dataId),u=e.readSync(a.dataId),[c,l]=Dv(i,r.shape,r.dtype,o,u,!0);return e.makeTensorInfo(l,r.dtype,c)}},v9={kernelName:zp,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e}=n,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=e.readSync(r.dataId),o=e.readSync(s.dataId),u=e.readSync(a.dataId),[c,l]=Dv(i,r.shape,r.dtype,o,u);return e.makeTensorInfo(l,r.dtype,c)}},k9={kernelName:Pp,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:h,outputSize:p}=ql(0,s,o);if("string"===a.dtype){const g=e.bufferSync(s),y=e.bufferSync(a),b=ta(e.readSync(i.dataId)[0]),x=l4(g,y,o,p,l,c,u,h,b,!1);return e.makeTensorInfo(o,x.dtype,x.values)}const d=new $2(c,u,s.shape.length,a.shape.length,h,[p,1],!1),f=e.runWebGLProgram(d,[a,s,i],a.dtype),m=Mt({inputs:{x:f},backend:e,attrs:{shape:o}});return e.disposeIntermediateTensorInfo(f),m}},I9={kernelName:yc,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=be(i,s.shape)[0],u=Mf(s,a,o),l=new Array(s.shape.length).fill(0),h=s.shape.slice();return u.map(p=>{const d=[...h];d[o]=p;const f=Fo({inputs:{x:s},backend:e,attrs:{begin:l,size:d}});return l[o]+=p,f})}},E2="return sqrt(x);",N9=Fe({opSnippet:E2,packedOpSnippet:E2,cpuKernelImpl:d4}),S9={kernelName:Il,backendName:"webgl",kernelFunc:N9},T9={kernelName:Bp,backendName:"webgl",kernelFunc:Fe({opSnippet:"return x * x;"})},R2="return (a - b) * (a - b);",C9=On({opSnippet:R2,packedOpSnippet:R2}),$9={kernelName:Nl,backendName:"webgl",kernelFunc:C9},E9={kernelName:El,backendName:"webgl",kernelFunc:function({inputs:n,attrs:t,backend:e}){const{x:r}=n,a=new Ls(r.shape,`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `);return e.runWebGLProgram(a,[r],r.dtype)}};class R9{constructor(t,e,r){this.variableNames=["x"],this.outputShape=r;const s=r.length,a=Ge(r.length),i=Ge(r.length);let o="";if(1===s)o="coords * strides + begin";else{let u=0;o=r.map((c,l)=>(u++,1===r.length?`coords * strides[${l}] + begin[${l}]`:`coords[${u-1}] * strides[${l}] + begin[${l}]`)).join(",")}this.userCode=`\n      ${a} begin = ${a}(${t});\n      ${a} strides = ${a}(${e});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${o}));\n      }\n    `}}const A9={kernelName:Wp,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=Id(s.shape,a,i,o,u,c,l,h,p);let k;if(m)k=Mt({inputs:{x:s},backend:e,attrs:{shape:f}});else if(g||y){I(s.shape.length>=1,()=>`Input must have rank at least 1, got: ${s.shape.length}`);const $=wd(b,x,w),C=Fo({inputs:{x:s},backend:e,attrs:{begin:b,size:$}});k=Mt({inputs:{x:C},backend:e,attrs:{shape:f}}),e.disposeIntermediateTensorInfo(C)}else if(e.shouldExecuteOnCPU([s])){const $=e.readSync(s.dataId),C=we(s.shape,s.dtype,$),R=f4(d,C,w,b);k=e.makeTensorInfo(f,s.dtype,R.values)}else{const $=new R9(b,w,d);k=e.runWebGLProgram($,[s],s.dtype)}const N=Mt({inputs:{x:k},backend:e,attrs:{shape:f}});return e.disposeIntermediateTensorInfo(k),N}},F9={kernelName:Vp,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:c}=r,{data:l,dataSplits:h}=t,p=e.readSync(l.dataId),d=e.readSync(h.dataId),[f,m]=m4(p,d,s,a,i,o,u,c);return[e.makeTensorInfo([f.length],"string",f),e.makeTensorInfo(h.shape,"int32",m)]}},D9={kernelName:Up,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=e.readSync(a.dataId),u=e.readSync(i.dataId)[0],[c,l,h]=g4(o,u,s),p=l.length;return[e.makeTensorInfo([p,2],"int32",c),e.makeTensorInfo([p],"string",l),e.makeTensorInfo([2],"int32",new Int32Array(h))]}},_9={kernelName:Gp,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=e.readSync(a.dataId),o=y4(i,s);return e.makeTensorInfo(a.shape,"int32",o)}},O9=Fe({opSnippet:"return tan(x);"}),M9={kernelName:Tl,backendName:"webgl",kernelFunc:O9},L9=Fe({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),z9={kernelName:Cl,backendName:"webgl",kernelFunc:L9};class P9{constructor(t,e){this.variableNames=["A"];const r=new Array(t.length);for(let i=0;i<r.length;i++)r[i]=t[i]*e[i];this.outputShape=r,this.rank=r.length;const s=Ge(this.rank),a=function(i){const o=i.length;if(o>5)throw Error(`Tile for rank ${o} is not yet supported`);if(1===o)return`imod(resRC, ${i[0]})`;const u=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],c=[];for(let l=0;l<i.length;l++)c.push(`imod(${u[l]}, ${i[l]})`);return c.join()}(t);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function A2(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const o=e.readSync(s.dataId),u="string"===s.dtype?o.map(h=>ta(h)):o,c=we(s.shape,s.dtype,u),l=x4(c,a);return e.makeTensorInfo(l.shape,l.dtype,l.values)}const i=new P9(s.shape,a);return e.runWebGLProgram(i,[s],s.dtype)}const B9={kernelName:$l,backendName:"webgl",kernelFunc:A2};class W9{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class V9{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function gi(n,t){null!==t&&n.disposeIntermediateTensorInfo(t)}function F2(n){let t=1;for(;t<n;)t*=2;return t}const U9={kernelName:Hp,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s}=t,{k:a,sorted:i}=r,o=Q().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=Q().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=s.shape,l=c[c.length-1];if(e.shouldExecuteOnCPU([s])||l<o||a>u){const R=e.readSync(s.dataId),[A,_]=w4(R,c,s.dtype,a,i);return[e.makeTensorInfo(A.shape,A.dtype,A.values),e.makeTensorInfo(_.shape,_.dtype,_.values)]}if(0===a)return c[c.length-1]=0,[e.makeTensorInfo(c,s.dtype,[]),e.makeTensorInfo(c,"int32",[])];if(1===l)return[s,Eu({attrs:{shape:c,dtype:"int32",value:0},backend:e})];const h=e.texData.get(s.dataId),p=null!==h&&h.isPacked,d=p?e.unpackTensor(s):s,f=nt(c)/l,m=Mt({inputs:{x:d},attrs:{shape:[f,l]},backend:e});p&&gi(e,d);const g=F2(a),y=F2(l);let b=null;const x=()=>null===b?[m,m]:[m,b],w=(R,A,_)=>{const z=x(),V=new W9(_),J=b;b=e.runWebGLProgram(V,z,"int32",[[l],[null===b?1:0],[Number.NEGATIVE_INFINITY],[R],[A]]),gi(e,J)};for(let R=1;R<g;R*=2){const A=2*R;for(let _=R;_>=1;_/=2)w(A,_,[f,y])}for(let R=y;R>g;R/=2){const A=x(),_=new V9([f,R/2]),V=b;b=e.runWebGLProgram(_,A,"int32",[[l],[null===b?1:0],[g]]),gi(e,V);const X=g/2,J=2*X;for(let Y=X;Y>=1;Y/=2)w(J,Y,b.shape)}let k=b;b=Fo({inputs:{x:b},backend:e,attrs:{begin:0,size:[f,a]}}),gi(e,k);let N=w2({inputs:{x:m,indices:b},backend:e,attrs:{axis:1,batchDims:1}});gi(e,m);const $=c.slice(0,-1);$.push(a),k=b,b=Mt({inputs:{x:b},attrs:{shape:$},backend:e}),gi(e,k);const C=N;return N=Mt({inputs:{x:N},attrs:{shape:$},backend:e}),gi(e,C),[N,b]}};class G9{constructor(t,e,r,s,a,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const o="nearest"===r?1:2;let u;switch(s){case"constant":default:u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${u} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${u} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${u} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${e}));\n                float mapY = mapCoord(inY, float(${t}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const H9={kernelName:jp,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:c}=r,[l,h,p,d]=s.shape,[f,m]=c??[h,p],g=new G9(h,p,i,o,u,[l,f,m,d]);return e.runWebGLProgram(g,[s,a],"float32")}},j9={kernelName:qp,backendName:"webgl",kernelFunc:function(n){const{inputs:t,attrs:e,backend:r}=n,{axis:s}=e,{x:a}=t;wu(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:u,indices:c}=v4(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}},q9={kernelName:xc,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,u=s.shape[a],c=new Array(o-1);let l=0;for(let m=0;m<o;m++)m!==a&&(c[l++]=i.shape[m]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[a]=1;const f=new Array(u);for(let m=0;m<f.length;m++){p[a]=m;const g=Fo({inputs:{x:i},backend:e,attrs:{begin:p,size:d}}),y=Mt({inputs:{x:g},backend:e,attrs:{shape:c}});f[m]=y,h.push(g)}return h.forEach(m=>e.disposeIntermediateTensorInfo(m)),f}};class K9{constructor(t,e){this.variableNames=["x","segmentIds"];const r=t.windowSize,s=t.batchSize,a=t.inSize,i=t.numSegments,o=i*Math.ceil(a/r);this.outputShape=[s,o];const u=4*Math.floor(r/4),c=r%4,l="\n        sumValue += dot(values, segFilter);\n    ";let h="";a%r>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let p="";a%r>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${r}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const X9={kernelName:wc,backendName:"webgl",kernelFunc:function(n){const{inputs:t,backend:e,attrs:r}=n,{x:s,segmentIds:a}=t,{numSegments:i}=r,o=s.shape.length,u=[];let c=0;const l=tn([c],o);let h=s;null!=l&&(h=Xn({inputs:{x:s},backend:e,attrs:{perm:l}}),u.push(h),c=an(1,o)[0]);const p=s1(h.shape,c,i),d=nt([h.shape[c]]),f=Mt({inputs:{x:h},backend:e,attrs:{shape:[-1,d]}});u.push(f);const m=sd(s.dtype),g=(x,w,k,N,$)=>{const C=x.shape[0],R=x.shape[1],A=r1(R,$),_=new K9({windowSize:A,inSize:R,batchSize:C,numSegments:$},w),z=e.compileAndRun(_,[x,k],N);if(u.push(z),z.shape[1]===$)return z;const V=C2({backend:e,attrs:{start:0,stop:$,step:1,dtype:"float32"}}),X=A2({inputs:{x:V},backend:e,attrs:{reps:[R/A]}});return u.push(V),u.push(X),g(z,w,X,N,$)},y=Mt({inputs:{x:g(f,"unsortedSegmentSum",a,m,i)},backend:e,attrs:{shape:p}});let b=y;if(null!=l){u.push(y);const x=ha(l);b=Xn({inputs:{x:b},backend:e,attrs:{perm:x}})}return u.forEach(x=>e.disposeIntermediateTensorInfo(x)),b}},Y9=[K4,X4,Z4,Q4,eF,sF,aF,iF,uF,cF,pF,fF,gF,bF,wF,vF,kF,SF,TF,CF,RF,_F,OF,MF,BF,VF,HF,z4,qF,ZF,tD,aD,iD,oD,lD,uD,hD,dD,mD,gD,yD,bD,wD,vD,ND,SD,CD,ED,RD,FD,DD,OD,LD,zD,PD,WD,VD,GD,jD,KD,YD,QD,t_,e_,r_,a_,o_,u_,L4,c_,YF,p_,f_,g_,P4,b_,w_,v_,I_,S_,C_,E_,A_,__,M_,L_,P_,B_,W_,G_,H_,j_,q_,K_,Y_,Q_,eO,iO,W4,lO,cO,pO,fO,LF,gO,bO,xO,kO,NO,B4,SO,TO,CO,$O,zF,rO,RO,FO,_O,V4,LO,PO,VO,GO,qO,XO,ZO,QO,t9,n9,s9,i9,l9,c9,p9,f9,DF,aO,g9,y9,b9,x9,w9,v9,k9,I9,S9,T9,$9,E9,A9,F9,D9,_9,sO,j4,M9,z9,B9,U9,H9,q4,j9,q9,X9,yO];for(const n of Y9)$g(n);_t(254);const Ru={moveTickSize:50,videoContainerId:"webgazerVideoContainer",videoElementId:"webgazerVideoFeed",videoElementCanvasId:"webgazerVideoCanvas",faceOverlayId:"webgazerFaceOverlay",faceFeedbackBoxId:"webgazerFaceFeedbackBox",gazeDotId:"webgazerGazeDot",videoViewerWidth:320,videoViewerHeight:240,faceFeedbackBoxRatio:.66,showVideo:!0,mirrorVideo:!0,showFaceOverlay:!0,showFaceFeedbackBox:!0,showGazeDot:!0,camConstraints:{video:{width:{min:320,ideal:640,max:1920},height:{min:240,ideal:480,max:1080},facingMode:"user"}},dataTimestep:50,showVideoPreview:!0,applyKalmanFilter:!0,saveDataAcrossSessions:!0,storingPoints:!1,trackEye:"both"};_t(730);var Z9=_t(483),Au=_t.n(Z9),cg=function(){return(cg=Object.assign||function(n){for(var t,e=1,r=arguments.length;e<r;e++)for(var s in t=arguments[e])Object.prototype.hasOwnProperty.call(t,s)&&(n[s]=t[s]);return n}).apply(this,arguments)};function zs(n,t,e,r){return new(e||(e=Promise))(function(s,a){function i(c){try{u(r.next(c))}catch(l){a(l)}}function o(c){try{u(r.throw(c))}catch(l){a(l)}}function u(c){var l;c.done?s(c.value):(l=c.value,l instanceof e?l:new e(function(h){h(l)})).then(i,o)}u((r=r.apply(n,t||[])).next())})}function Ps(n,t){var e,r,s,a,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(u){return function(c){return function(l){if(e)throw new TypeError("Generator is already executing.");for(;i;)try{if(e=1,r&&(s=2&l[0]?r.return:l[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,l[1])).done)return s;switch(r=0,s&&(l=[2&l[0],s.value]),l[0]){case 0:case 1:s=l;break;case 4:return i.label++,{value:l[1],done:!1};case 5:i.label++,r=l[1],l=[0];continue;case 7:l=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||6!==l[0]&&2!==l[0])){i=0;continue}if(3===l[0]&&(!s||l[1]>s[0]&&l[1]<s[3])){i.label=l[1];break}if(6===l[0]&&i.label<s[1]){i.label=s[1],s=l;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(l);break}s[2]&&i.ops.pop(),i.trys.pop();continue}l=t.call(n,i)}catch(h){l=[6,h],r=0}finally{e=s=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([u,c])}}}function _o(n,t,e,r){return new(e||(e=Promise))(function(s,a){function i(c){try{u(r.next(c))}catch(l){a(l)}}function o(c){try{u(r.throw(c))}catch(l){a(l)}}function u(c){var l;c.done?s(c.value):(l=c.value,l instanceof e?l:new e(function(h){h(l)})).then(i,o)}u((r=r.apply(n,t||[])).next())})}function Oo(n,t){var e,r,s,a,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(u){return function(c){return function(l){if(e)throw new TypeError("Generator is already executing.");for(;i;)try{if(e=1,r&&(s=2&l[0]?r.return:l[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,l[1])).done)return s;switch(r=0,s&&(l=[2&l[0],s.value]),l[0]){case 0:case 1:s=l;break;case 4:return i.label++,{value:l[1],done:!1};case 5:i.label++,r=l[1],l=[0];continue;case 7:l=i.ops.pop(),i.trys.pop();continue;default:if(!(s=(s=i.trys).length>0&&s[s.length-1])&&(6===l[0]||2===l[0])){i=0;continue}if(3===l[0]&&(!s||l[1]>s[0]&&l[1]<s[3])){i.label=l[1];break}if(6===l[0]&&i.label<s[1]){i.label=s[1],s=l;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(l);break}s[2]&&i.ops.pop(),i.trys.pop();continue}l=t.call(n,i)}catch(h){l=[6,h],r=0}finally{e=s=0}if(5&l[0])throw l[1];return{value:l[0]?l[1]:void 0,done:!0}}([u,c])}}}var D2=function(n){return{startEndTensor:n,startPoint:ne(n,[0,0],[-1,2]),endPoint:ne(n,[0,2],[-1,2])}},J9={strides:[8,16],anchors:[2,6]};function _2(n,t){var e,r,s;if(n.topLeft instanceof Se&&n.bottomRight instanceof Se){var a=K(function(){return[je([ne(Ot(t-1,n.topLeft),0,1),ne(n.topLeft,1,1)]),je([Ot(t-1,ne(n.bottomRight,0,1)),ne(n.bottomRight,1,1)])]});e=a[0],r=a[1],null!=n.landmarks&&(s=K(function(){var d=Ot(on([t-1,0]),n.landmarks),f=on([1,-1]);return M(d,f)}))}else{var i=n.topLeft,c=n.bottomRight;e=[t-1-i[0],i[1]],r=[t-1-c[0],c[1]],null!=n.landmarks&&(s=n.landmarks.map(function(d){return[t-1-d[0],d[1]]}))}var p={topLeft:e,bottomRight:r};return null!=s&&(p.landmarks=s),null!=n.probability&&(p.probability=n.probability instanceof Se?n.probability.clone():n.probability),p}function O2(n,t){return K(function(){var e,r,s,a,i,o;return e=n.hasOwnProperty("box")?n.box:n,dr((r=e,s=t,a=M(r.startPoint,s),i=M(r.endPoint,s),o=Pc([a,i],1),D2(o)).startEndTensor)})}var Q9=function(){function n(t,e,r,s,a,i){this.blazeFaceModel=t,this.width=e,this.height=r,this.maxFaces=s,this.anchorsData=function(o,u,c){for(var l=[],h=0;h<c.strides.length;h++)for(var p=c.strides[h],d=Math.floor((u+p-1)/p),f=Math.floor((o+p-1)/p),m=c.anchors[h],g=0;g<d;g++)for(var y=p*(g+.5),b=0;b<f;b++)for(var x=p*(b+.5),w=0;w<m;w++)l.push([x,y]);return l}(e,r,J9),this.anchors=Rs(this.anchorsData),this.inputSizeData=[e,r],this.inputSize=on([e,r]),this.iouThreshold=a,this.scoreThreshold=i}return n.prototype.getBoundingBoxes=function(t,e,r){return void 0===r&&(r=!0),_o(this,void 0,void 0,function(){var s,a,i,o,u,c,l,h,p,d,f,m,g,y,b=this;return Oo(this,function(x){switch(x.label){case 0:return s=K(function(){var A,_,z,V,X,J,Y,et,rt,at,dt,pt,ft,w=Qr.resizeBilinear(t,[b.width,b.height]),k=M(Ot(Bt(w,255),.5),2),N=b.blazeFaceModel.predict(k),$=dr(N),C=(_=b.anchors,z=b.inputSize,V=ne(A=$,[0,1],[-1,2]),X=yt(V,_),J=ne(A,[0,3],[-1,2]),Y=Bt(J,z),et=Bt(X,z),rt=Bt(Y,2),at=Ot(et,rt),dt=yt(et,rt),pt=M(at,z),ft=M(dt,z),Pc([pt,ft],1)),R=ne($,[0,0],[-1,1]);return[$,C,dr(Xr(R))]}),a=s[0],i=s[1],o=s[2],u=console.warn,console.warn=function(){},c=Qr.nonMaxSuppression(i,o,this.maxFaces,this.iouThreshold,this.scoreThreshold),console.warn=u,[4,c.array()];case 1:return l=x.sent(),c.dispose(),h=l.map(function(w){return ne(i,[w,0],[1,-1])}),e?[3,3]:[4,Promise.all(h.map(function(w){return _o(b,void 0,void 0,function(){var k;return Oo(this,function(N){switch(N.label){case 0:return[4,w.array()];case 1:return k=N.sent(),w.dispose(),[2,k]}})})}))];case 2:h=x.sent(),x.label=3;case 3:for(p=t.shape[1],d=t.shape[2],f=e?Bt([d,p],this.inputSize):[d/this.inputSizeData[0],p/this.inputSizeData[1]],m=[],g=function(w){var k=h[w],N=K(function(){var $=D2(k instanceof Se?k:Rs(k));if(!r)return $;var C,R=l[w];return C=e?ne(b.anchors,[R,0],[1,2]):b.anchorsData[R],{box:$,landmarks:P(dr(ne(a,[R,5],[1,-1])),[6,-1]),probability:ne(o,[R],[1]),anchor:C}});m.push(N)},y=0;y<h.length;y++)g(y);return i.dispose(),o.dispose(),a.dispose(),[2,{boxes:m,scaleFactor:f}]}})})},n.prototype.estimateFaces=function(t,e,r,s){return void 0===e&&(e=!1),void 0===r&&(r=!1),void 0===s&&(s=!0),_o(this,void 0,void 0,function(){var i,o,u,c,l,h=this;return Oo(this,function(p){switch(p.label){case 0:return i=((d=t)instanceof Se?[d.shape[0],d.shape[1]]:[d.height,d.width])[1],o=K(function(){return t instanceof Se||(t=m0(t)),er(Dt(t,"float32"),0)}),[4,this.getBoundingBoxes(o,e,s)];case 1:return u=p.sent(),c=u.boxes,l=u.scaleFactor,o.dispose(),e?[2,c.map(function(d){var f=O2(d,l),m={topLeft:ne(f,[0],[2]),bottomRight:ne(f,[2],[2])};if(s){var b=d.probability,w=M(yt(d.landmarks,d.anchor),l);m.landmarks=w,m.probability=b}return r&&(m=_2(m,i)),m})]:[2,Promise.all(c.map(function(d){return _o(h,void 0,void 0,function(){var f,m,g,b,x,w,k,N,$,C,R=this;return Oo(this,function(A){switch(A.label){case 0:return f=O2(d,l),s?[3,2]:[4,f.array()];case 1:return b=A.sent(),m={topLeft:b.slice(0,2),bottomRight:b.slice(2)},[3,4];case 2:return[4,Promise.all([d.landmarks,f,d.probability].map(function(_){return _o(R,void 0,void 0,function(){return Oo(this,function(z){return[2,_.array()]})})}))];case 3:g=A.sent(),b=g[1],x=g[2],w=d.anchor,N=(k=l)[0],$=k[1],C=g[0].map(function(_){return[(_[0]+w[0])*N,(_[1]+w[1])*$]}),m={topLeft:b.slice(0,2),bottomRight:b.slice(2),landmarks:C,probability:x},(_=d.box).startEndTensor.dispose(),_.startPoint.dispose(),_.endPoint.dispose(),d.landmarks.dispose(),d.probability.dispose(),A.label=4;case 4:return f.dispose(),r&&(m=_2(m,i)),[2,m]}var _})})}))]}var d})})},n}();function tM(n){var t=void 0===n?{}:n,e=t.maxFaces,r=void 0===e?10:e,s=t.inputWidth,a=void 0===s?128:s,i=t.inputHeight,o=void 0===i?128:i,u=t.iouThreshold,c=void 0===u?.3:u,l=t.scoreThreshold,h=void 0===l?.75:l,p=t.modelUrl;return _o(this,void 0,void 0,function(){var d;return Oo(this,function(f){switch(f.label){case 0:return null==p?[3,2]:[4,go(p)];case 1:return d=f.sent(),[3,4];case 2:return[4,go("https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1",{fromTFHub:!0})];case 3:d=f.sent(),f.label=4;case 4:return[2,new Q9(d,a,o,r,c,h)]}})})}var Bs={silhouette:[10,338,297,332,284,251,389,356,454,323,361,288,397,365,379,378,400,377,152,148,176,149,150,136,172,58,132,93,234,127,162,21,54,103,67,109],lipsUpperOuter:[61,185,40,39,37,0,267,269,270,409,291],lipsLowerOuter:[146,91,181,84,17,314,405,321,375,291],lipsUpperInner:[78,191,80,81,82,13,312,311,310,415,308],lipsLowerInner:[78,95,88,178,87,14,317,402,318,324,308],rightEyeUpper0:[246,161,160,159,158,157,173],rightEyeLower0:[33,7,163,144,145,153,154,155,133],rightEyeUpper1:[247,30,29,27,28,56,190],rightEyeLower1:[130,25,110,24,23,22,26,112,243],rightEyeUpper2:[113,225,224,223,222,221,189],rightEyeLower2:[226,31,228,229,230,231,232,233,244],rightEyeLower3:[143,111,117,118,119,120,121,128,245],rightEyebrowUpper:[156,70,63,105,66,107,55,193],rightEyebrowLower:[35,124,46,53,52,65],rightEyeIris:[473,474,475,476,477],leftEyeUpper0:[466,388,387,386,385,384,398],leftEyeLower0:[263,249,390,373,374,380,381,382,362],leftEyeUpper1:[467,260,259,257,258,286,414],leftEyeLower1:[359,255,339,254,253,252,256,341,463],leftEyeUpper2:[342,445,444,443,442,441,413],leftEyeLower2:[446,261,448,449,450,451,452,453,464],leftEyeLower3:[372,340,346,347,348,349,350,357,465],leftEyebrowUpper:[383,300,293,334,296,336,285,417],leftEyebrowLower:[265,353,276,283,282,295],leftEyeIris:[468,469,470,471,472],midwayBetweenEyes:[168],noseTip:[1],noseBottom:[2],noseRightCorner:[98],noseLeftCorner:[327],rightCheek:[205],leftCheek:[425]};function ip(n){return[Math.abs(n.endPoint[0]-n.startPoint[0]),Math.abs(n.endPoint[1]-n.startPoint[1])]}function op(n){return[n.startPoint[0]+(n.endPoint[0]-n.startPoint[0])/2,n.startPoint[1]+(n.endPoint[1]-n.startPoint[1])/2]}function hg(n,t){void 0===t&&(t=1.5);var e=op(n),r=ip(n),s=[t*r[0]/2,t*r[1]/2];return{startPoint:[e[0]-s[0],e[1]-s[1]],endPoint:[e[0]+s[0],e[1]+s[1]],landmarks:n.landmarks}}function pg(n){var t=op(n),e=ip(n),r=Math.max.apply(Math,e)/2;return{startPoint:[t[0]-r,t[1]-r],endPoint:[t[0]+r,t[1]+r],landmarks:n.landmarks}}var eM=[[1,0,0],[0,1,0],[0,0,1]];function M2(n,t){return[[1,0,n],[0,1,t],[0,0,1]]}function yi(n,t){for(var e=0,r=0;r<n.length;r++)e+=n[r]*t[r];return e}function nM(n,t){for(var e=[],r=0;r<n.length;r++)e.push(n[r][t]);return e}function L2(n,t){for(var e=[],r=n.length,s=0;s<r;s++){e.push([]);for(var a=0;a<r;a++)e[s].push(yi(n[s],nM(t,a)))}return e}function z2(n,t){var e=Math.cos(n),r=Math.sin(n),s=[[e,-r,0],[r,e,0],[0,0,1]],a=L2(M2(t[0],t[1]),s);return L2(a,M2(-t[0],-t[1]))}var P2=[13,Bs.midwayBetweenEyes[0]],B2=[3,2],dg=Bs.leftEyeLower0,fg=[dg[0],dg[dg.length-1]],mg=Bs.rightEyeLower0,gg=[mg[0],mg[mg.length-1]],W2=[{key:"EyeUpper0",indices:[9,10,11,12,13,14,15]},{key:"EyeUpper1",indices:[25,26,27,28,29,30,31]},{key:"EyeUpper2",indices:[41,42,43,44,45,46,47]},{key:"EyeLower0",indices:[0,1,2,3,4,5,6,7,8]},{key:"EyeLower1",indices:[16,17,18,19,20,21,22,23,24]},{key:"EyeLower2",indices:[32,33,34,35,36,37,38,39,40]},{key:"EyeLower3",indices:[54,55,56,57,58,59,60,61,62]},{key:"EyebrowUpper",indices:[63,64,65,66,67,68,69,70]},{key:"EyebrowLower",indices:[48,49,50,51,52,53]}];function lp(n,t,e,r){for(var s=0;s<W2.length;s++){var a=W2[s],i=a.key,o=a.indices,u=Bs[""+e+i];if(null==r||r.includes(i))for(var c=0;c<o.length;c++){var l=o[c];n[u[c]]=[t[l][0],t[l][1],(t[l][2]+n[u[c]][2])/2]}}}var rM=function(){function n(t,e,r,s,a,i,o){this.regionsOfInterest=[],this.runsWithoutFaceDetector=0,this.boundingBoxDetector=t,this.meshDetector=e,this.irisModel=o,this.meshWidth=r,this.meshHeight=s,this.maxContinuousChecks=a,this.maxFaces=i}return n.prototype.transformRawCoords=function(t,e,r,s){var a,i,o,u,c=this,l=ip({startPoint:e.startPoint,endPoint:e.endPoint}),h=[l[0]/this.meshWidth,l[1]/this.meshHeight],p=t.map(function(b){return[h[0]*(b[0]-c.meshWidth/2),h[1]*(b[1]-c.meshHeight/2),b[2]]}),d=z2(r,[0,0]),f=p.map(function(b){return(x=b,w=d,[yi(x,w[0]),yi(x,w[1])]).concat([b[2]]);var x,w}),m=(u=[-yi((i=[[(a=s)[0][0],a[1][0]],[a[0][1],a[1][1]]])[0],o=[a[0][2],a[1][2]]),-yi(i[1],o)],[i[0].concat(u[0]),i[1].concat(u[1]),[0,0,1]]),g=op({startPoint:e.startPoint,endPoint:e.endPoint}).concat([1]),y=[yi(g,m[0]),yi(g,m[1])];return f.map(function(b){return[b[0]+y[0],b[1]+y[1],b[2]]})},n.prototype.getLeftToRightEyeDepthDifference=function(t){return t[fg[0]][2]-t[gg[0]][2]},n.prototype.getEyeBox=function(t,e,r,s,a){void 0===a&&(a=!1);var i=pg(hg(this.calculateLandmarksBoundingBox([t[r],t[s]]),2.3)),o=ip(i),u=Qr.cropAndResize(e,[[i.startPoint[1]/this.meshHeight,i.startPoint[0]/this.meshWidth,i.endPoint[1]/this.meshHeight,i.endPoint[0]/this.meshWidth]],[0],[64,64]);return a&&(u=Qr.flipLeftRight(u)),{box:i,boxSize:o,crop:u}},n.prototype.getEyeCoords=function(t,e,r,s){void 0===s&&(s=!1);for(var a=[],i=0;i<76;i++){var o=t[3*i];a.push([(s?1-o/64:o/64)*r[0]+e.startPoint[0],t[3*i+1]/64*r[1]+e.startPoint[1],t[3*i+2]])}return{rawCoords:a,iris:a.slice(71)}},n.prototype.getAdjustedIrisCoords=function(t,e,r){var s=t[Bs[r+"EyeUpper0"][3]][2],a=t[Bs[r+"EyeLower0"][4]][2],i=(s+a)/2;return e.map(function(o,u){var c=i;return 2===u?c=s:4===u&&(c=a),[o[0],o[1],c]})},n.prototype.predict=function(t,e){return zs(this,void 0,void 0,function(){var r,s,a,i,o=this;return Ps(this,function(u){switch(u.label){case 0:return this.shouldUpdateRegionsOfInterest()?[4,this.boundingBoxDetector.getBoundingBoxes(t,!1,!0)]:[3,2];case 1:return r=u.sent(),a=r.scaleFactor,0===(s=r.boxes).length?(this.regionsOfInterest=[],[2,null]):(i=s.map(function(c){var l,h,d=pg(hg({startPoint:[(l={startPoint:dr(c.box.startPoint).arraySync(),endPoint:dr(c.box.endPoint).arraySync()}).startPoint[0]*(h=a)[0],l.startPoint[1]*h[1]],endPoint:[l.endPoint[0]*h[0],l.endPoint[1]*h[1]]}));return cg({},d,{landmarks:c.landmarks.arraySync()})}),s.forEach(function(c){null!=c&&null!=c.startPoint&&(c.startEndTensor.dispose(),c.startPoint.dispose(),c.endPoint.dispose())}),this.updateRegionsOfInterest(i),this.runsWithoutFaceDetector=0,[3,3]);case 2:this.runsWithoutFaceDetector++,u.label=3;case 3:return[2,K(function(){return o.regionsOfInterest.map(function(c,l){var h,se,pe,ce,d=P2[0],f=P2[1];!1==c.landmarks.length>=468&&(d=B2[0],f=B2[1]),se=c.landmarks[d],pe=c.landmarks[f],h=(ce=Math.PI/2-Math.atan2(-(pe[1]-se[1]),pe[0]-se[0]))-2*Math.PI*Math.floor((ce+Math.PI)/(2*Math.PI));var m=op({startPoint:c.startPoint,endPoint:c.endPoint}),y=t,b=eM;0!==h&&(y=Qr.rotateWithOffset(t,h,0,[m[0]/t.shape[2],m[1]/t.shape[1]]),b=z2(-h,m));var w=Bt(function(se,pe,ce){var ye=pe.shape[1],Ce=pe.shape[2];return Qr.cropAndResize(pe,[[se.startPoint[1]/ye,se.startPoint[0]/Ce,se.endPoint[1]/ye,se.endPoint[0]/Ce]],[0],ce,"bilinear",0)}({startPoint:c.startPoint,endPoint:c.endPoint},y,[o.meshHeight,o.meshWidth]),255),k=o.meshDetector.predict(w),N=k[1],C=P(k[2],[-1,3]).arraySync();if(e){var R=o.getEyeBox(C,w,fg[0],fg[1],!0),A=R.box,_=R.boxSize,z=R.crop,V=o.getEyeBox(C,w,gg[0],gg[1]),X=V.box,J=V.boxSize,et=o.irisModel.predict(je([z,V.crop])).dataSync(),rt=et.slice(0,228),at=o.getEyeCoords(rt,A,_,!0),dt=at.rawCoords,pt=at.iris,ft=et.slice(228),gt=o.getEyeCoords(ft,X,J),St=gt.rawCoords,Ct=gt.iris,At=o.getLeftToRightEyeDepthDifference(C);Math.abs(At)<30?(lp(C,dt,"left"),lp(C,St,"right")):At<1?lp(C,dt,"left",["EyeUpper0","EyeLower0"]):lp(C,St,"right",["EyeUpper0","EyeLower0"]);var Ft=o.getAdjustedIrisCoords(C,pt,"left"),Jt=o.getAdjustedIrisCoords(C,Ct,"right");C=C.concat(Ft).concat(Jt)}var Zt=o.transformRawCoords(C,c,h,b),re=Rs(Zt),Gt=hg(o.calculateLandmarksBoundingBox(Zt)),ue=pg(Gt);return o.regionsOfInterest[l]=cg({},ue,{landmarks:re.arraySync()}),{coords:Rs(C,[C.length,3]),scaledCoords:re,box:Gt,flag:dr(N)}})})]}})})},n.prototype.updateRegionsOfInterest=function(t){for(var e=0;e<t.length;e++){var r=t[e],s=this.regionsOfInterest[e],a=0;if(s&&s.startPoint){var i=r.startPoint,o=i[0],u=i[1],c=r.endPoint,l=c[0],h=c[1],p=s.startPoint,d=p[0],f=p[1],m=s.endPoint,g=m[0],y=m[1],b=Math.max(o,d),x=Math.max(u,f),w=(Math.min(l,g)-b)*(Math.min(h,y)-x);a=w/((l-o)*(h-u)+(g-d)*(y-u)-w)}a<.25&&(this.regionsOfInterest[e]=r)}this.regionsOfInterest=this.regionsOfInterest.slice(0,t.length)},n.prototype.clearRegionOfInterest=function(t){null!=this.regionsOfInterest[t]&&(this.regionsOfInterest=this.regionsOfInterest.slice(0,t).concat(this.regionsOfInterest.slice(t+1)))},n.prototype.shouldUpdateRegionsOfInterest=function(){var t=this.regionsOfInterest.length,e=0===t;return 1===this.maxFaces||e?e:t!==this.maxFaces&&this.runsWithoutFaceDetector>=this.maxContinuousChecks},n.prototype.calculateLandmarksBoundingBox=function(t){var e=t.map(function(s){return s[0]}),r=t.map(function(s){return s[1]});return{startPoint:[Math.min.apply(Math,e),Math.min.apply(Math,r)],endPoint:[Math.max.apply(Math,e),Math.max.apply(Math,r)]}},n}(),sM=[[.499976992607117,.652534008026123],[.500025987625122,.547487020492554],[.499974012374878,.602371990680695],[.482113003730774,.471979022026062],[.500150978565216,.527155995368958],[.499909996986389,.498252987861633],[.499523013830185,.40106201171875],[.289712011814117,.380764007568359],[.499954998493195,.312398016452789],[.499987006187439,.269918978214264],[.500023007392883,.107050001621246],[.500023007392883,.666234016418457],[.5000159740448,.679224014282227],[.500023007392883,.692348003387451],[.499976992607117,.695277988910675],[.499976992607117,.70593398809433],[.499976992607117,.719385027885437],[.499976992607117,.737019002437592],[.499967992305756,.781370997428894],[.499816000461578,.562981009483337],[.473773002624512,.573909997940063],[.104906998574734,.254140973091125],[.365929991006851,.409575998783112],[.338757991790771,.41302502155304],[.311120003461838,.409460008144379],[.274657994508743,.389131009578705],[.393361985683441,.403706014156342],[.345234006643295,.344011008739471],[.370094001293182,.346076011657715],[.319321990013123,.347265005111694],[.297903001308441,.353591024875641],[.24779200553894,.410809993743896],[.396889001131058,.842755019664764],[.280097991228104,.375599980354309],[.106310002505779,.399955987930298],[.2099249958992,.391353011131287],[.355807989835739,.534406006336212],[.471751004457474,.65040397644043],[.474155008792877,.680191993713379],[.439785003662109,.657229006290436],[.414617002010345,.66654098033905],[.450374007225037,.680860996246338],[.428770989179611,.682690978050232],[.374971002340317,.727805018424988],[.486716985702515,.547628998756409],[.485300987958908,.527395009994507],[.257764995098114,.314490020275116],[.401223003864288,.455172002315521],[.429818987846375,.548614978790283],[.421351999044418,.533740997314453],[.276895999908447,.532056987285614],[.483370006084442,.499586999416351],[.33721199631691,.282882988452911],[.296391993761063,.293242990970612],[.169294998049736,.193813979625702],[.447580009698868,.302609980106354],[.392390012741089,.353887975215912],[.354490011930466,.696784019470215],[.067304998636246,.730105042457581],[.442739009857178,.572826027870178],[.457098007202148,.584792017936707],[.381974011659622,.694710969924927],[.392388999462128,.694203019142151],[.277076005935669,.271932005882263],[.422551989555359,.563233017921448],[.385919004678726,.281364023685455],[.383103013038635,.255840003490448],[.331431001424789,.119714021682739],[.229923993349075,.232002973556519],[.364500999450684,.189113974571228],[.229622006416321,.299540996551514],[.173287004232407,.278747975826263],[.472878992557526,.666198015213013],[.446828007698059,.668527007102966],[.422762006521225,.673889994621277],[.445307999849319,.580065965652466],[.388103008270264,.693961024284363],[.403039008378983,.706539988517761],[.403629004955292,.693953037261963],[.460041999816895,.557139039039612],[.431158006191254,.692366003990173],[.452181994915009,.692366003990173],[.475387006998062,.692366003990173],[.465828001499176,.779190003871918],[.472328990697861,.736225962638855],[.473087012767792,.717857003211975],[.473122000694275,.704625964164734],[.473033010959625,.695277988910675],[.427942007780075,.695277988910675],[.426479011774063,.703539967536926],[.423162013292313,.711845993995667],[.4183090031147,.720062971115112],[.390094995498657,.639572978019714],[.013953999616206,.560034036636353],[.499913990497589,.58014702796936],[.413199990987778,.69539999961853],[.409626007080078,.701822996139526],[.468080013990402,.601534962654114],[.422728985548019,.585985004901886],[.463079988956451,.593783974647522],[.37211999297142,.47341400384903],[.334562003612518,.496073007583618],[.411671012639999,.546965003013611],[.242175996303558,.14767599105835],[.290776997804642,.201445996761322],[.327338010072708,.256527006626129],[.399509996175766,.748921036720276],[.441727995872498,.261676013469696],[.429764986038208,.187834024429321],[.412198007106781,.108901023864746],[.288955003023148,.398952007293701],[.218936994671822,.435410976409912],[.41278201341629,.398970007896423],[.257135003805161,.355440020561218],[.427684992551804,.437960982322693],[.448339998722076,.536936044692993],[.178560003638268,.45755398273468],[.247308000922203,.457193970680237],[.286267012357712,.467674970626831],[.332827985286713,.460712015628815],[.368755996227264,.447206974029541],[.398963987827301,.432654976844788],[.476410001516342,.405806005001068],[.189241006970406,.523923993110657],[.228962004184723,.348950982093811],[.490725994110107,.562400996685028],[.404670000076294,.485132992267609],[.019469000399113,.401564002037048],[.426243007183075,.420431017875671],[.396993011236191,.548797011375427],[.266469985246658,.376977026462555],[.439121007919312,.51895797252655],[.032313998788595,.644356966018677],[.419054001569748,.387154996395111],[.462783008813858,.505746960639954],[.238978996872902,.779744982719421],[.198220998048782,.831938028335571],[.107550002634525,.540755033493042],[.183610007166862,.740257024765015],[.134409993886948,.333683013916016],[.385764002799988,.883153975009918],[.490967005491257,.579378008842468],[.382384985685349,.508572995662689],[.174399003386497,.397670984268188],[.318785011768341,.39623498916626],[.343364000320435,.400596976280212],[.396100014448166,.710216999053955],[.187885001301765,.588537991046906],[.430987000465393,.944064974784851],[.318993002176285,.898285031318665],[.266247987747192,.869701027870178],[.500023007392883,.190576016902924],[.499976992607117,.954452991485596],[.366169989109039,.398822009563446],[.393207013607025,.39553701877594],[.410373002290726,.391080021858215],[.194993004202843,.342101991176605],[.388664990663528,.362284004688263],[.365961998701096,.355970978736877],[.343364000320435,.355356991291046],[.318785011768341,.35834002494812],[.301414996385574,.363156020641327],[.058132998645306,.319076001644135],[.301414996385574,.387449026107788],[.499987989664078,.618434011936188],[.415838003158569,.624195992946625],[.445681989192963,.566076993942261],[.465844005346298,.620640993118286],[.49992299079895,.351523995399475],[.288718998432159,.819945991039276],[.335278987884521,.852819979190826],[.440512001514435,.902418971061707],[.128294005990028,.791940987110138],[.408771991729736,.373893976211548],[.455606997013092,.451801002025604],[.499877005815506,.908990025520325],[.375436991453171,.924192011356354],[.11421000212431,.615022003650665],[.448662012815475,.695277988910675],[.4480200111866,.704632043838501],[.447111994028091,.715808033943176],[.444831997156143,.730794012546539],[.430011987686157,.766808986663818],[.406787008047104,.685672998428345],[.400738000869751,.681069016456604],[.392399996519089,.677703022956848],[.367855995893478,.663918972015381],[.247923001646996,.601333022117615],[.452769994735718,.420849978923798],[.43639200925827,.359887003898621],[.416164010763168,.368713974952698],[.413385987281799,.692366003990173],[.228018000721931,.683571994304657],[.468268007040024,.352671027183533],[.411361992359161,.804327011108398],[.499989002943039,.469825029373169],[.479153990745544,.442654013633728],[.499974012374878,.439637005329132],[.432112008333206,.493588984012604],[.499886006116867,.866917014122009],[.49991300702095,.821729004383087],[.456548988819122,.819200992584229],[.344549000263214,.745438992977142],[.37890899181366,.574010014533997],[.374292999505997,.780184984207153],[.319687992334366,.570737957954407],[.357154995203018,.604269981384277],[.295284003019333,.621580958366394],[.447750002145767,.862477004528046],[.410986006259918,.508723020553589],[.31395098567009,.775308012962341],[.354128003120422,.812552988529205],[.324548006057739,.703992962837219],[.189096003770828,.646299958229065],[.279776990413666,.71465802192688],[.1338230073452,.682700991630554],[.336768001317978,.644733011722565],[.429883986711502,.466521978378296],[.455527991056442,.548622965812683],[.437114000320435,.558896005153656],[.467287987470627,.529924988746643],[.414712011814117,.335219979286194],[.37704598903656,.322777986526489],[.344107985496521,.320150971412659],[.312875986099243,.32233202457428],[.283526003360748,.333190023899078],[.241245999932289,.382785975933075],[.102986000478268,.468762993812561],[.267612010240555,.424560010433197],[.297879010438919,.433175981044769],[.333433985710144,.433878004550934],[.366427004337311,.426115989685059],[.396012008190155,.416696012020111],[.420121014118195,.41022801399231],[.007561000064015,.480777025222778],[.432949006557465,.569517970085144],[.458638995885849,.479089021682739],[.473466008901596,.545744001865387],[.476087987422943,.563830018043518],[.468472003936768,.555056989192963],[.433990985155106,.582361996173859],[.483518004417419,.562983989715576],[.482482999563217,.57784903049469],[.42645001411438,.389798998832703],[.438998997211456,.39649498462677],[.450067013502121,.400434017181396],[.289712011814117,.368252992630005],[.276670008897781,.363372981548309],[.517862021923065,.471948027610779],[.710287988185883,.380764007568359],[.526226997375488,.573909997940063],[.895093023777008,.254140973091125],[.634069979190826,.409575998783112],[.661242008209229,.41302502155304],[.688880026340485,.409460008144379],[.725341975688934,.389131009578705],[.606630027294159,.40370500087738],[.654766023159027,.344011008739471],[.629905998706818,.346076011657715],[.680678009986877,.347265005111694],[.702096998691559,.353591024875641],[.75221198797226,.410804986953735],[.602918028831482,.842862963676453],[.719901978969574,.375599980354309],[.893692970275879,.399959981441498],[.790081977844238,.391354024410248],[.643998026847839,.534487962722778],[.528249025344849,.65040397644043],[.525849997997284,.680191040039062],[.560214996337891,.657229006290436],[.585384011268616,.66654098033905],[.549625992774963,.680860996246338],[.57122802734375,.682691991329193],[.624852001667023,.72809898853302],[.513050019741058,.547281980514526],[.51509702205658,.527251958847046],[.742246985435486,.314507007598877],[.598631024360657,.454979002475739],[.570338010787964,.548575043678284],[.578631997108459,.533622980117798],[.723087012767792,.532054007053375],[.516445994377136,.499638974666595],[.662801027297974,.282917976379395],[.70362401008606,.293271005153656],[.830704987049103,.193813979625702],[.552385985851288,.302568018436432],[.607609987258911,.353887975215912],[.645429015159607,.696707010269165],[.932694971561432,.730105042457581],[.557260990142822,.572826027870178],[.542901992797852,.584792017936707],[.6180260181427,.694710969924927],[.607590973377228,.694203019142151],[.722943007946014,.271963000297546],[.577413976192474,.563166975975037],[.614082992076874,.281386971473694],[.616907000541687,.255886018276215],[.668509006500244,.119913995265961],[.770092010498047,.232020974159241],[.635536015033722,.189248979091644],[.77039098739624,.299556016921997],[.826722025871277,.278755009174347],[.527121007442474,.666198015213013],[.553171992301941,.668527007102966],[.577238023281097,.673889994621277],[.554691970348358,.580065965652466],[.611896991729736,.693961024284363],[.59696102142334,.706539988517761],[.596370995044708,.693953037261963],[.539958000183105,.557139039039612],[.568841993808746,.692366003990173],[.547818005084991,.692366003990173],[.52461302280426,.692366003990173],[.534089982509613,.779141008853912],[.527670979499817,.736225962638855],[.526912987232208,.717857003211975],[.526877999305725,.704625964164734],[.526966989040375,.695277988910675],[.572058022022247,.695277988910675],[.573521018028259,.703539967536926],[.57683801651001,.711845993995667],[.581691026687622,.720062971115112],[.609944999217987,.639909982681274],[.986046016216278,.560034036636353],[.5867999792099,.69539999961853],[.590372025966644,.701822996139526],[.531915009021759,.601536989212036],[.577268004417419,.585934996604919],[.536915004253387,.593786001205444],[.627542972564697,.473352015018463],[.665585994720459,.495950996875763],[.588353991508484,.546862006187439],[.757824003696442,.14767599105835],[.709249973297119,.201507985591888],[.672684013843536,.256581008434296],[.600408971309662,.74900496006012],[.55826598405838,.261672019958496],[.570303976535797,.187870979309082],[.588165998458862,.109044015407562],[.711045026779175,.398952007293701],[.781069993972778,.435405015945435],[.587247014045715,.398931980133057],[.742869973182678,.355445981025696],[.572156012058258,.437651991844177],[.55186802148819,.536570012569427],[.821442008018494,.457556009292603],[.752701997756958,.457181990146637],[.71375697851181,.467626988887787],[.66711300611496,.460672974586487],[.631101012229919,.447153985500336],[.6008620262146,.432473003864288],[.523481011390686,.405627012252808],[.810747981071472,.523926019668579],[.771045982837677,.348959028720856],[.509127020835876,.562718033790588],[.595292985439301,.485023975372314],[.980530977249146,.401564002037048],[.573499977588654,.420000016689301],[.602994978427887,.548687994480133],[.733529984951019,.376977026462555],[.560611009597778,.519016981124878],[.967685997486115,.644356966018677],[.580985009670258,.387160003185272],[.537728011608124,.505385041236877],[.760966002941132,.779752969741821],[.801778972148895,.831938028335571],[.892440974712372,.54076099395752],[.816350996494293,.740260004997253],[.865594983100891,.333687007427216],[.614073991775513,.883246004581451],[.508952975273132,.579437971115112],[.617941975593567,.508316040039062],[.825608015060425,.397674977779388],[.681214988231659,.39623498916626],[.656635999679565,.400596976280212],[.603900015354156,.710216999053955],[.81208598613739,.588539004325867],[.56801301240921,.944564998149872],[.681007981300354,.898285031318665],[.733752012252808,.869701027870178],[.633830010890961,.398822009563446],[.606792986392975,.39553701877594],[.589659988880157,.391062021255493],[.805015981197357,.342108011245728],[.611334979534149,.362284004688263],[.634037971496582,.355970978736877],[.656635999679565,.355356991291046],[.681214988231659,.35834002494812],[.698584973812103,.363156020641327],[.941866993904114,.319076001644135],[.698584973812103,.387449026107788],[.584177017211914,.624107003211975],[.554318010807037,.566076993942261],[.534153997898102,.62064003944397],[.711217999458313,.819975018501282],[.664629995822906,.852871000766754],[.559099972248077,.902631998062134],[.871706008911133,.791940987110138],[.591234028339386,.373893976211548],[.544341027736664,.451583981513977],[.624562978744507,.924192011356354],[.88577002286911,.615028977394104],[.551338016986847,.695277988910675],[.551980018615723,.704632043838501],[.552887976169586,.715808033943176],[.555167973041534,.730794012546539],[.569944024085999,.767035007476807],[.593203008174896,.685675978660583],[.599261999130249,.681069016456604],[.607599973678589,.677703022956848],[.631937980651855,.663500010967255],[.752032995223999,.601315021514893],[.547226011753082,.420395016670227],[.563543975353241,.359827995300293],[.583841025829315,.368713974952698],[.586614012718201,.692366003990173],[.771915018558502,.683578014373779],[.531597018241882,.352482974529266],[.588370978832245,.804440975189209],[.52079701423645,.442565023899078],[.567984998226166,.493479013442993],[.543282985687256,.819254994392395],[.655317008495331,.745514988899231],[.621008992195129,.574018001556396],[.625559985637665,.78031200170517],[.680198013782501,.570719003677368],[.64276397228241,.604337990283966],[.704662978649139,.621529996395111],[.552012026309967,.862591981887817],[.589071989059448,.508637011051178],[.685944974422455,.775357007980347],[.645735025405884,.812640011310577],[.675342977046967,.703978002071381],[.810858011245728,.646304965019226],[.72012197971344,.714666962623596],[.866151988506317,.682704985141754],[.663187026977539,.644596993923187],[.570082008838654,.466325998306274],[.544561982154846,.548375964164734],[.562758982181549,.558784961700439],[.531987011432648,.530140042304993],[.585271000862122,.335177004337311],[.622952997684479,.32277899980545],[.655896008014679,.320163011550903],[.687132000923157,.322345972061157],[.716481983661652,.333200991153717],[.758756995201111,.382786989212036],[.897013008594513,.468769013881683],[.732392013072968,.424547016620636],[.70211398601532,.433162987232208],[.66652500629425,.433866024017334],[.633504986763,.426087975502014],[.603875994682312,.416586995124817],[.579657971858978,.409945011138916],[.992439985275269,.480777025222778],[.567192018032074,.569419980049133],[.54136598110199,.478899002075195],[.526564002037048,.546118021011353],[.523913025856018,.563830018043518],[.531529009342194,.555056989192963],[.566035985946655,.582329034805298],[.51631098985672,.563053965568542],[.5174720287323,.577877044677734],[.573594987392426,.389806985855103],[.560697972774506,.395331978797913],[.549755990505219,.399751007556915],[.710287988185883,.368252992630005],[.723330020904541,.363372981548309]];function aM(n){return zs(this,void 0,void 0,function(){var t,e,r,s,a,i,o,u,c,l,h,p,d,f,m,g;return Ps(this,function(y){switch(y.label){case 0:return e=void 0===(t=n.maxContinuousChecks)?5:t,s=void 0===(r=n.detectionConfidence)?.9:r,i=void 0===(a=n.maxFaces)?10:a,u=void 0===(o=n.iouThreshold)?.3:o,l=void 0===(c=n.scoreThreshold)?.75:c,d=n.modelUrl,f=n.detectorModelUrl,m=n.irisModelUrl,(p=void 0===(h=n.shouldLoadIrisModel)||h)?[4,Promise.all([V2(f,i,u,l),U2(d),iM(m)])]:[3,2];case 1:return g=y.sent(),[3,4];case 2:return[4,Promise.all([V2(f,i,u,l),U2(d)])];case 3:g=y.sent(),y.label=4;case 4:return[2,new oM(g[0],g[1],e,s,i,p?g[2]:null)]}})})}function V2(n,t,e,r){return zs(this,void 0,void 0,function(){return Ps(this,function(s){return[2,tM({modelUrl:n,maxFaces:t,iouThreshold:e,scoreThreshold:r})]})})}function U2(n){return zs(this,void 0,void 0,function(){return Ps(this,function(t){return null!=n?[2,go(n)]:[2,go("https://tfhub.dev/mediapipe/tfjs-model/facemesh/1/default/1",{fromTFHub:!0})]})})}function iM(n){return zs(this,void 0,void 0,function(){return Ps(this,function(t){return null!=n?[2,go(n)]:[2,go("https://tfhub.dev/mediapipe/tfjs-model/iris/1/default/2",{fromTFHub:!0})]})})}function G2(n,t){if(n.mesh instanceof Se){var e=K(function(){var o=on([t-1,0,0]),u=on([1,-1,1]);return K(function(){return[je([Ot(t-1,ne(n.boundingBox.topLeft,0,1)),ne(n.boundingBox.topLeft,1,1)]),je([Ot(t-1,ne(n.boundingBox.bottomRight,0,1)),ne(n.boundingBox.bottomRight,1,1)]),M(Ot(o,n.mesh),u),M(Ot(o,n.scaledMesh),u)]})});return Object.assign({},n,{boundingBox:{topLeft:e[0],bottomRight:e[1]},mesh:e[2],scaledMesh:e[3]})}return Object.assign({},n,{boundingBox:{topLeft:[t-1-n.boundingBox.topLeft[0],n.boundingBox.topLeft[1]],bottomRight:[t-1-n.boundingBox.bottomRight[0],n.boundingBox.bottomRight[1]]},mesh:n.mesh.map(function(o){var u=o.slice(0);return u[0]=t-1-o[0],u}),scaledMesh:n.scaledMesh.map(function(o){var u=o.slice(0);return u[0]=t-1-o[0],u})})}var Fu,oM=function(){function n(t,e,r,s,a,i){this.kind="MediaPipeFaceMesh",this.pipeline=new rM(t,e,192,192,r,a,i),this.detectionConfidence=s}return n.getAnnotations=function(){return Bs},n.getUVCoords=function(){return sM},n.prototype.estimateFaces=function(t){return zs(this,void 0,void 0,function(){var e,r,s,a,i,o,u,l,h,p,d,f=this;return Ps(this,function(m){switch(m.label){case 0:if(r=void 0!==(e=t.returnTensors)&&e,a=void 0!==(s=t.flipHorizontal)&&s,u=t.input,(o=void 0===(i=t.predictIrises)||i)&&null==this.pipeline.irisModel)throw new Error("The iris model was not loaded as part of facemesh. Please initialize the model with facemesh.load({shouldLoadIrisModel: true}).");return l=((g=u)instanceof Se?[g.shape[0],g.shape[1]]:[g.height,g.width])[1],h=K(function(){return u instanceof Se||(u=m0(u)),er(Dt(u,"float32"),0)}),"webgl"!==L.backendName?[3,2]:(d=Q().get("WEBGL_PACK_DEPTHWISECONV"),Q().set("WEBGL_PACK_DEPTHWISECONV",!0),[4,this.pipeline.predict(h,o)]);case 1:return p=m.sent(),Q().set("WEBGL_PACK_DEPTHWISECONV",d),[3,4];case 2:return[4,this.pipeline.predict(h,o)];case 3:p=m.sent(),m.label=4;case 4:return h.dispose(),null!=p&&p.length>0?[2,Promise.all(p.map(function(g,y){return zs(f,void 0,void 0,function(){var b,x,w,k,N,$,C,R,A,_,z,V,X,J,Y=this;return Ps(this,function(et){switch(et.label){case 0:return b=g.coords,x=g.scaledCoords,w=g.box,N=[k=g.flag],r||(N=N.concat([b,x])),[4,Promise.all(N.map(function(rt){return zs(Y,void 0,void 0,function(){return Ps(this,function(at){return[2,rt.array()]})})}))];case 1:if($=et.sent(),C=$[0],k.dispose(),C<this.detectionConfidence&&this.pipeline.clearRegionOfInterest(y),r)return R={kind:"MediaPipePredictionTensors",faceInViewConfidence:C,mesh:b,scaledMesh:x,boundingBox:{topLeft:on(w.startPoint),bottomRight:on(w.endPoint)}},a?[2,G2(R,l)]:[2,R];for(J in A=$.slice(1),_=A[0],z=A[1],x.dispose(),b.dispose(),V={kind:"MediaPipePredictionValues",faceInViewConfidence:C,boundingBox:{topLeft:w.startPoint,bottomRight:w.endPoint},mesh:_,scaledMesh:z},a&&(V=G2(V,l)),X={},Bs)(o||!1===J.includes("Iris"))&&(X[J]=Bs[J].map(function(rt){return V.scaledMesh[rt]}));return V.annotations=X,[2,V]}})})}))]:[2,[]]}var g})})},n}();(Fu||(Fu={})).mediapipeFacemesh="mediapipe-facemesh";const bi=function(){this.model=function(n,t){return void 0===n&&(n=Fu.mediapipeFacemesh),void 0===t&&(t={}),zs(this,void 0,void 0,function(){return Ps(this,function(e){if(n===Fu.mediapipeFacemesh)return[2,aM(t)];throw new Error(n+" is not a valid package name.")})})}(Fu.mediapipeFacemesh,{maxFaces:1}),this.predictionReady=!1};bi.prototype.positionsArray=null,bi.prototype.getEyePatches=async function(n,t,e,r){if(0===t.width)return null;const s=await this.model,a=await s.estimateFaces({input:n,returnTensors:!1,flipHorizontal:!1,predictIrises:!1});if(0==a.length)return!1;this.positionsArray=a[0].scaledMesh;const i=a[0],[u,c]=[{eyeTopArc:i.annotations.leftEyeUpper0,eyeBottomArc:i.annotations.leftEyeLower0},{eyeTopArc:i.annotations.rightEyeUpper0,eyeBottomArc:i.annotations.rightEyeLower0}].map(({eyeTopArc:k,eyeBottomArc:N})=>{const $={x:Math.round(Math.min(...k.map(A=>A[0]))),y:Math.round(Math.min(...k.map(A=>A[1])))},C=Math.round(Math.max(...N.map(A=>A[0]))),R=Math.round(Math.max(...N.map(A=>A[1])));return{origin:$,width:C-$.x,height:R-$.y}});var l=u.origin.x,h=u.origin.y,p=u.width,d=u.height,f=c.origin.x,m=c.origin.y,g=c.width,y=c.height;if(0===p||0===g)return console.log("an eye patch had zero width"),null;if(0===d||0===y)return console.log("an eye patch had zero height"),null;var b={},x=t.getContext("2d").getImageData(l,h,p,d);b.left={patch:x,imagex:l,imagey:h,width:p,height:d};var w=t.getContext("2d").getImageData(f,m,g,y);return b.right={patch:w,imagex:f,imagey:m,width:g,height:y},this.predictionReady=!0,b},bi.prototype.getPositions=function(){return this.positionsArray},bi.prototype.reset=function(){console.log("Unimplemented; Tracking.js has no obvious reset function")},bi.prototype.drawFaceOverlay=function(n,t){if(t){n.fillStyle="#32EEDB",n.strokeStyle="#32EEDB",n.lineWidth=.5;for(let e=0;e<t.length;e++){const r=t[e][0],s=t[e][1];n.beginPath(),n.arc(r,s,1,0,2*Math.PI),n.closePath(),n.fill()}}},bi.prototype.name="TFFaceMesh";const lM=bi;function H2(n,t,e){if(n.length!==t.length||n[0].length!==t[0].length)throw new Error("Matrix dimensions must agree.");const r=n.length,s=n[0].length,a=new Array(r);for(let i=0;i<r;i++){a[i]=new Array(s);for(let o=0;o<s;o++)a[i][o]=e(n[i][o],t[i][o])}return a}const xi={transpose(n){const t=n.length,e=n[0].length,r=new Array(e);for(let s=0;s<e;s++){r[s]=new Array(t);for(let a=0;a<t;a++)r[s][a]=n[a][s]}return r},getMatrix(n,t,e,r){const s=new Array(t.length),a=r-e+1;for(let i=0,o=t.length;i<o;i++){s[i]=new Array(a);for(let u=e;u<=r;u++)s[i][u-e]=n[t[i]][u]}return s},getSubMatrix(n,t,e,r,s){const a=s-r+1,i=new Array(e-t+1);for(let o=t;o<=e;o++){const u=o-t;i[u]=new Array(a);for(let c=r;c<=s;c++)i[u][c-r]=n[o][c]}return i},mult(n,t){t.length!=n[0].length&&console.log("Matrix inner dimensions must agree:");for(var e=new Array(n.length),r=new Array(n[0].length),s=0;s<t[0].length;s++){for(var a=0;a<n[0].length;a++)r[a]=t[a][s];for(var i=0;i<n.length;i++){0===s&&(e[i]=new Array(t[0].length));var o=n[i],u=0;for(a=0;a<n[0].length;a++)u+=o[a]*r[a];e[i][s]=u}}return e},multScalar(n,t){const e=n.length,r=n[0].length,s=new Array(e);for(let a=0;a<e;a++){s[a]=new Array(r);for(let i=0;i<r;i++)s[a][i]=n[a][i]*t}return s},add:(n,t)=>H2(n,t,(e,r)=>e+r),sub:(n,t)=>H2(n,t,(e,r)=>e-r),inv:n=>xi.solve(n,xi.identity(n.length,n[0].length)),identity(n,t=n){const e=new Array(n);for(let r=0;r<n;r++){e[r]=new Array(t);for(let s=0;s<t;s++)e[r][s]=r===s?1:0}return e},solve:(n,t)=>n.length===n[0].length?xi.LUDecomposition(n,t):xi.QRDecomposition(n,t),LUDecomposition(n,t){for(var e=new Array(n.length),r=0;r<n.length;r++){e[r]=new Array(n[0].length);for(var s=0;s<n[0].length;s++)e[r][s]=n[r][s]}var a=n.length,i=n[0].length,o=new Array(a);for(r=0;r<a;r++)o[r]=r;var u=1,c=new Array,l=new Array(a);for(s=0;s<i;s++){for(r=0;r<a;r++)l[r]=e[r][s];for(r=0;r<a;r++){c=e[r];for(var h=Math.min(r,s),p=0,d=0;d<h;d++)p+=c[d]*l[d];c[s]=l[r]-=p}var f=s;for(r=s+1;r<a;r++)Math.abs(l[r])>Math.abs(l[f])&&(f=r);if(f!=s){for(d=0;d<i;d++){var m=e[f][d];e[f][d]=e[s][d],e[s][d]=m}d=o[f],o[f]=o[s],o[s]=d,u=-u}if(s<a&0!=e[s][s])for(r=s+1;r<a;r++)e[r][s]/=e[s][s]}for(t.length!=a&&console.log("Matrix row dimensions must agree."),s=0;s<i;s++)0===e[s][s]&&console.log("Matrix is singular.");var g=t[0].length,y=xi.getMatrix(t,o,0,g-1);for(d=0;d<i;d++)for(r=d+1;r<i;r++)for(s=0;s<g;s++)y[r][s]-=y[d][s]*e[r][d];for(d=i-1;d>=0;d--){for(s=0;s<g;s++)y[d][s]/=e[d][d];for(r=0;r<d;r++)for(s=0;s<g;s++)y[r][s]-=y[d][s]*e[r][d]}return y},QRDecomposition(n,t){for(var e=new Array(n.length),r=0;r<n.length;r++){e[r]=new Array(n[0].length);for(var s=0;s<n[0].length;s++)e[r][s]=n[r][s]}for(var a,i=n.length,o=n[0].length,u=new Array(o),c=0;c<o;c++){for(a=0,r=c;r<i;r++)a=Math.hypot(a,e[r][c]);if(0!=a){for(e[c][c]<0&&(a=-a),r=c;r<i;r++)e[r][c]/=a;for(e[c][c]+=1,s=c+1;s<o;s++){var l=0;for(r=c;r<i;r++)l+=e[r][c]*e[r][s];for(l=-l/e[c][c],r=c;r<i;r++)e[r][s]+=l*e[r][c]}}u[c]=-a}for(t.length!=i&&console.log("Matrix row dimensions must agree."),s=0;s<o;s++)0===u[s]&&console.log("Matrix is rank deficient");var h=t[0].length,p=new Array(t.length);for(r=0;r<t.length;r++)p[r]=new Array(t[0].length);for(r=0;r<t.length;r++)for(s=0;s<t[0].length;s++)p[r][s]=t[r][s];for(c=0;c<o;c++)for(s=0;s<h;s++){for(l=0,r=c;r<i;r++)l+=e[r][c]*p[r][s];for(l=-l/e[c][c],r=c;r<i;r++)p[r][s]+=l*e[r][c]}for(c=o-1;c>=0;c--){for(s=0;s<h;s++)p[c][s]/=u[c];for(r=0;r<c;r++)for(s=0;s<h;s++)p[r][s]-=p[c][s]*e[r][c]}return xi.getSubMatrix(p,0,o-1,0,h-1)}},ir=xi,$n={Eye:function(n,t,e,r,s){this.patch=n,this.imagex=t,this.imagey=e,this.width=r,this.height=s},getEyeFeats:function(n){let t=e=>{let r=this.resizeEye(e,10,6),s=this.grayscale(r.data,r.width,r.height),a=[];return this.equalizeHistogram(s,5,a),a};return"left"==webgazer.params.trackEye?t(n.left):"right"==webgazer.params.trackEye?t(n.right):[].concat(t(n.left),t(n.right))},DataWindow:function(n,t){this.data=[],this.windowSize=n,this.index=0,this.length=0,t&&(this.data=t.slice(t.length-n,t.length),this.length=this.data.length)}};$n.DataWindow.prototype.push=function(n){return this.data.length<this.windowSize?(this.data.push(n),this.length=this.data.length,this):(this.data[this.index]=n,this.index=(this.index+1)%this.windowSize,this)},$n.DataWindow.prototype.get=function(n){return this.data[this.getTrueIndex(n)]},$n.DataWindow.prototype.getTrueIndex=function(n){return this.data.length<this.windowSize?n:(n+this.index)%this.windowSize},$n.DataWindow.prototype.addAll=function(n){for(var t=0;t<n.length;t++)this.push(n[t])},$n.grayscale=function(n,t,e){for(var r=new Uint8ClampedArray(n.length>>2),s=0,a=0,i=0;i<e;i++)for(var o=0;o<t;o++)r[s++]=.299*n[a]+.587*n[a+1]+.114*n[a+2],a+=4;return r},$n.equalizeHistogram=function(n,t,e){var r=n.length;e||(e=n),t||(t=5);for(var s=Array(256).fill(0),a=0;a<r;a+=t)++s[n[a]];var i=255*t/r,o=0;for(a=0;a<256;++a){var u=s[a];o=u+=o,s[a]=u*i}for(a=0;a<r;++a)e[a]=s[n[a]];return e},$n.threshold=function(n,t){for(let e=0;e<n.length;e++)n[e]=n[e]>t?255:0;return n},$n.correlation=function(n,t){const e=Math.min(n.length,t.length);let r=0;for(let s=0;s<e;s++)n[s]===t[s]&&r++;return r/Math.max(n.length,t.length)},$n.resizeEye=function(n,t,e){var r=document.createElement("canvas");r.width=n.width,r.height=n.height,r.getContext("2d").putImageData(n.patch,0,0);var s=document.createElement("canvas");return s.width=t,s.height=e,s.getContext("2d").drawImage(r,0,0,r.width,r.height,0,0,t,e),s.getContext("2d").getImageData(0,0,t,e)},$n.bound=function(n){n.x<0&&(n.x=0),n.y<0&&(n.y=0);var t=Math.max(document.documentElement.clientWidth,window.innerWidth||0),e=Math.max(document.documentElement.clientHeight,window.innerHeight||0);return n.x>t&&(n.x=t),n.y>e&&(n.y=e),n},$n.DebugBox=function(n){var t;this.para=document.createElement("p"),this.div=document.createElement("div"),this.div.appendChild(this.para),document.body.appendChild(this.div),this.buttons={},this.canvas={},this.stats={},t=this,setInterval(function(){!function(e,r){var s="";for(var a in r)s+=a+": "+r[a]+"\n";e.innerText=s}(t.para,t.stats)},n||300)},$n.DebugBox.prototype.set=function(n,t){this.stats[n]=t},$n.DebugBox.prototype.inc=function(n,t,e){this.stats[n]||(this.stats[n]=e||0),this.stats[n]+=t||1},$n.DebugBox.prototype.addButton=function(n,t){this.buttons[n]||(this.buttons[n]=document.createElement("button"),this.div.appendChild(this.buttons[n]));var e=this.buttons[n];this.buttons[n]=e,e.addEventListener("click",t),e.innerText=n},$n.DebugBox.prototype.show=function(n,t){this.canvas[n]||(this.canvas[n]=document.createElement("canvas"),this.div.appendChild(this.canvas[n]));var e=this.canvas[n];e.getContext("2d").clearRect(0,0,e.width,e.height),t(e)};const We=$n,wi={InitRegression:function(){var n=700;this.ridgeParameter=Math.pow(10,-5),this.errorXArray=new We.DataWindow(n),this.errorYArray=new We.DataWindow(n),this.screenXClicksArray=new We.DataWindow(n),this.screenYClicksArray=new We.DataWindow(n),this.eyeFeaturesClicks=new We.DataWindow(n),this.trailTime=1e3,this.trailDataWindow=this.trailTime/Ru.moveTickSize,this.screenXTrailArray=new We.DataWindow(10),this.screenYTrailArray=new We.DataWindow(10),this.eyeFeaturesTrail=new We.DataWindow(10),this.trailTimes=new We.DataWindow(10),this.dataClicks=new We.DataWindow(n),this.dataTrail=new We.DataWindow(10);var t=[[1/4,0,.5,0],[0,1/4,0,.5],[.5,0,1,0],[0,.5,0,1]];t=ir.multScalar(t,.1);var e=ir.multScalar(ir.identity(2),47),r=ir.multScalar(ir.identity(4),1e-4);this.kalman=new wi.KalmanFilter([[1,0,1,0],[0,1,0,1],[0,0,1,0],[0,0,0,1]],[[1,0,0,0],[0,1,0,0]],t,e,r,[[500],[500],[0],[0]])},KalmanFilter:function(n,t,e,r,s,a){this.F=n,this.Q=e,this.H=t,this.R=r,this.P=s,this.X=a}};wi.KalmanFilter.prototype.update=function(n){for(var{add:t,sub:e,mult:r,inv:s,identity:a,transpose:i}=ir,o=r(this.F,this.X),u=t(r(r(this.F,this.P),i(this.F)),this.Q),c=e(n=i([n]),r(this.H,o)),l=t(r(r(this.H,u),i(this.H)),this.R),h=r(u,r(i(this.H),s(l))),p=0;p<c.length;p++)c[p]=[c[p]];return this.X=t(o,r(h,c)),this.P=r(e(a(h.length),r(h,this.H)),u),i(r(this.H,this.X))[0]},wi.ridge=function(n,t,e){var r=t[0].length,s=new Array(r),a=ir.transpose(t),i=new Array,o=!0;do{for(var u=ir.mult(a,t),c=0;c<r;c++)u[c][c]=u[c][c]+e;var l=ir.mult(a,n);for(c=0;c<r;c++)s[c]=l[c][0];try{for(s.length*(0!==s.length?s.length/s.length:0)!==s.length&&console.log("Array length must be a multiple of m"),i=ir.solve(u,l),c=0;c<r;c++)s[c]=i[c];o=!0}catch(p){e*=10,console.log(p),o=!1}}while(!o);return s},wi.setData=function(n){for(var t=0;t<n.length;t++){var e=new Uint8ClampedArray(n[t].eyes.left.patch.data),r=new Uint8ClampedArray(n[t].eyes.right.patch.data);n[t].eyes.left.patch=new ImageData(e,n[t].eyes.left.width,n[t].eyes.left.height),n[t].eyes.right.patch=new ImageData(r,n[t].eyes.right.width,n[t].eyes.right.height),this.addData(n[t].eyes,n[t].screenPos,n[t].type)}},wi.getCurrentFixationIndex=function(){for(var n=this.screenXTrailArray.get(0),t=this.screenYTrailArray.get(0),e=this.screenXTrailArray.length-1;e>=0;e--){var r=this.screenXTrailArray.get(e),s=this.screenYTrailArray.get(e);if(Math.sqrt(Math.pow(r-n,2)+Math.pow(s-t,2))>72)return e+1}return e},wi.addData=function(n,t,e){n&&("click"===e?(this.screenXClicksArray.push([t[0]]),this.screenYClicksArray.push([t[1]]),this.eyeFeaturesClicks.push(We.getEyeFeats(n)),this.dataClicks.push({eyes:n,screenPos:t,type:e})):"move"===e&&(this.screenXTrailArray.push([t[0]]),this.screenYTrailArray.push([t[1]]),this.eyeFeaturesTrail.push(We.getEyeFeats(n)),this.trailTimes.push(performance.now()),this.dataTrail.push({eyes:n,screenPos:t,type:e})))};const Hr=wi,vi={RidgeReg:function(){this.init()}};vi.RidgeReg.prototype.init=Hr.InitRegression,vi.RidgeReg.prototype.addData=Hr.addData,vi.RidgeReg.prototype.predict=function(n){if(!n||0===this.eyeFeaturesClicks.length)return null;for(var t=performance.now()-this.trailTime,e=[],r=[],s=[],a=0;a<this.trailDataWindow;a++)this.trailTimes.get(a)>t&&(e.push(this.screenXTrailArray.get(a)),r.push(this.screenYTrailArray.get(a)),s.push(this.eyeFeaturesTrail.get(a)));var i=this.screenXClicksArray.data.concat(e),o=this.screenYClicksArray.data.concat(r),u=this.eyeFeaturesClicks.data.concat(s),c=Hr.ridge(i,u,this.ridgeParameter),l=Hr.ridge(o,u,this.ridgeParameter),h=We.getEyeFeats(n),p=0;for(a=0;a<h.length;a++)p+=h[a]*c[a];var d=0;for(a=0;a<h.length;a++)d+=h[a]*l[a];if(p=Math.floor(p),d=Math.floor(d),Ru.applyKalmanFilter){var f=[p,d];return{x:(f=this.kalman.update(f))[0],y:f[1]}}return{x:p,y:d}},vi.RidgeReg.prototype.setData=Hr.setData,vi.RidgeReg.prototype.getData=function(){return this.dataClicks.data},vi.RidgeReg.prototype.name="ridge";const uM=vi,ki={RidgeWeightedReg:function(){this.init()}};ki.RidgeWeightedReg.prototype.init=Hr.InitRegression,ki.RidgeWeightedReg.prototype.addData=Hr.addData,ki.RidgeWeightedReg.prototype.predict=function(n){if(!n||0===this.eyeFeaturesClicks.length)return null;for(var t=performance.now()-this.trailTime,e=[],r=[],s=[],a=0;a<this.trailDataWindow;a++)this.trailTimes.get(a)>t&&(e.push(this.screenXTrailArray.get(a)),r.push(this.screenYTrailArray.get(a)),s.push(this.eyeFeaturesTrail.get(a)));var i=this.eyeFeaturesClicks.data.length,o=Array(i),u=Array(i),c=Array(i);for(a=0;a<i;a++){for(var l=Math.sqrt(1/(i-a)),h=this.eyeFeaturesClicks.getTrueIndex(a),p=0;p<this.eyeFeaturesClicks.data[h].length;p++){var d=this.eyeFeaturesClicks.data[h][p]*l;void 0!==o[h]?o[h].push(d):o[h]=[d]}u[a]=this.screenXClicksArray.get(a).slice(0,this.screenXClicksArray.get(a).length),c[a]=this.screenYClicksArray.get(a).slice(0,this.screenYClicksArray.get(a).length),u[a][0]=u[a][0]*l,c[a][0]=c[a][0]*l}var f=u.concat(e),m=c.concat(r),g=o.concat(s),y=Hr.ridge(f,g,this.ridgeParameter),b=Hr.ridge(m,g,this.ridgeParameter),x=We.getEyeFeats(n),w=0;for(a=0;a<x.length;a++)w+=x[a]*y[a];var k=0;for(a=0;a<x.length;a++)k+=x[a]*b[a];if(w=Math.floor(w),k=Math.floor(k),Ru.applyKalmanFilter){var N=[w,k];return{x:(N=this.kalman.update(N))[0],y:N[1]}}return{x:w,y:k}},ki.RidgeWeightedReg.prototype.setData=Hr.setData,ki.RidgeWeightedReg.prototype.getData=function(){return this.dataClicks.data},ki.RidgeWeightedReg.prototype.name="ridgeWeighted";const cM=ki,Ta={};Math.pow(10,-5);var up={X:[0],Y:[0]};Ta.RidgeRegThreaded=function(){this.init()},Ta.RidgeRegThreaded.prototype.init=function(){this.screenXClicksArray=new We.DataWindow(700),this.screenYClicksArray=new We.DataWindow(700),this.eyeFeaturesClicks=new We.DataWindow(700),this.screenXTrailArray=new We.DataWindow(10),this.screenYTrailArray=new We.DataWindow(10),this.eyeFeaturesTrail=new We.DataWindow(10),this.dataClicks=new We.DataWindow(700),this.dataTrail=new We.DataWindow(700),this.worker||(this.worker=new Worker("ridgeWorker.mjs"),this.worker.onerror=function(r){console.log(r.message)},this.worker.onmessage=function(r){up.X=r.data.X,up.Y=r.data.Y},console.log("initialized worker"));var n=[[1/4,0,.5,0],[0,1/4,0,.5],[.5,0,1,0],[0,.5,0,1]];n=ir.multScalar(n,.1);var t=ir.multScalar(ir.identity(2),47),e=ir.multScalar(ir.identity(4),1e-4);this.kalman=new Hr.KalmanFilter([[1,0,1,0],[0,1,0,1],[0,0,1,0],[0,0,0,1]],[[1,0,0,0],[0,1,0,0]],n,t,e,[[500],[500],[0],[0]])},Ta.RidgeRegThreaded.prototype.addData=function(n,t,e){n&&this.worker.postMessage({eyes:We.getEyeFeats(n),screenPos:t,type:e})},Ta.RidgeRegThreaded.prototype.predict=function(n){if(!n)return null;for(var t=up.X,e=up.Y,r=We.getEyeFeats(n),s=0,a=0,i=0;i<r.length;i++)s+=r[i]*t[i],a+=r[i]*e[i];if(s=Math.floor(s),a=Math.floor(a),Ru.applyKalmanFilter){var o=[s,a];return{x:(o=this.kalman.update(o))[0],y:o[1]}}return{x:s,y:a}},Ta.RidgeRegThreaded.prototype.setData=Hr.setData,Ta.RidgeRegThreaded.prototype.getData=function(){return this.dataClicks.data},Ta.RidgeRegThreaded.prototype.name="ridge";const hM=Ta,lt={tracker:{}};lt.tracker.TFFaceMesh=lM,lt.reg=uM,lt.reg.RidgeWeightedReg=cM.RidgeWeightedReg,lt.reg.RidgeRegThreaded=hM.RidgeRegThreaded,lt.util=We,lt.params=Ru;var cp=null,En=null,De=null,Yn=null,Rn=null,or=null,Mn=null,yg="",j2=new Array(50),q2=new Array(50),K2=performance.now(),lr=null,Mo=null,Ca=!1,X2=function(n,t){},bg=X2,hp=["click","move"],Y2=performance.now(),xg=new lt.tracker.TFFaceMesh,Zn=[new lt.reg.RidgeReg],pp={TFFacemesh:function(){return new lt.tracker.TFFaceMesh}},_u={ridge:function(){return new lt.reg.RidgeReg},weightedRidge:function(){return new lt.reg.RidgeWeightedReg},threadedRidge:function(){return new lt.reg.RidgeRegThreaded}},Z2="webgazerGlobalData",J2="webgazerGlobalSettings",wg={},Lo=[],Q2={data:[],settings:{}};async function tk(n){var t=[];if(lr=await function(r,s,a){if(r)try{return xg.getEyePatches(De,r,s,a)}catch(i){return console.log("can't get pupil features ",i),null}}(Yn,Yn.width,Yn.height),0===Zn.length)return console.log("regression not set, call setRegression()"),null;for(var e in Zn)t.push(Zn[e].predict(lr));return void 0!==n?null===t[n]?null:{x:t[n].x,y:t[n].y,eyeFeatures:lr}:0===t.length||null===t[0]?null:{x:t[0].x,y:t[0].y,eyeFeatures:lr,all:t}}lt.computeValidationBoxSize=function(){var n=De.videoWidth,t=De.videoHeight,e=parseInt(De.style.width),r=parseInt(De.style.height),s=Math.min(n,t),a=n==Math.max(n,t)?e/n:r/t,i=s*lt.params.faceFeedbackBoxRatio*a;return[(r-i)/2,(e-i)/2,i,i]};var Ou=new We.DataWindow(4),vg=0;async function kg(){if(!Ca){c=Yn.height,(o=Yn).width!=(u=Yn.width)&&(o.width=u),o.height!=c&&(o.height=c),o.getContext("2d").drawImage(De,0,0,o.width,o.height),Mo=tk();var n=performance.now()-K2;if(lt.params.showFaceOverlay){var t=lt.getTracker();Rn.getContext("2d").clearRect(0,0,De.videoWidth,De.videoHeight),t.drawFaceOverlay(Rn.getContext("2d"),t.getPositions())}if(lt.params.showFaceFeedbackBox&&function(){if(null!=or&&lr){var l=De.videoWidth,h=De.videoHeight,p=Math.min(l,h)*lt.params.faceFeedbackBoxRatio,d=(h-p)/2,f=(l-p)/2,m=f+p,g=d+p,y=lr.left.imagex,b=lr.left.imagey,x=lr.right.imagex,w=lr.right.imagey,k=!1,N=!1;y>f&&y+lr.left.width<m&&x>f&&x+lr.right.width<m&&(k=!0),b>d&&b+lr.left.height<g&&w>d&&w+lr.right.height<g&&(N=!0),or.style.border=k&&N?"solid green":"solid red"}else or.style.border="solid black"}(),Mo=await Mo,bg(Mo,n),Mo){Ou.push(Mo);var e=0,r=0,s=Ou.length;for(var a in Ou.data)e+=Ou.get(a).x,r+=Ou.get(a).y;var i=We.bound({x:e/s,y:r/s});lt.params.storingPoints&&(h=i.x,p=i.y,(d=document.getElementById("plotting_canvas").getContext("2d")).fillStyle="blue",d.beginPath(),d.arc(h,p,5,0,2*Math.PI,!0),d.fill(),lt.storePoints(i.x,i.y,vg),50==++vg&&(vg=0)),lt.params.showGazeDot&&(Mn.style.display="block"),Mn.style.transform="translate3d("+i.x+"px,"+i.y+"px,0)"}else Mn.style.display="none";requestAnimationFrame(kg)}var h,p,d,o,u,c}var Ig=function(n,t,e){if(!Ca){if(0===Zn.length)return console.log("regression not set, call setRegression()"),null;for(var r in Zn)lr&&Zn[r].addData(lr,[n,t],e)}},ek=async function(n){Ig(n.clientX,n.clientY,hp[0]),lt.params.saveDataAcrossSessions&&await async function(){var t=Zn[0].getData()||Lo;Au().setItem(J2,wg),Au().setItem(Z2,t)}()},nk=function(n){if(!Ca){var t=performance.now();t<Y2+lt.params.moveTickSize||(Y2=t,Ig(n.clientX,n.clientY,hp[1]))}},rk=function(){document.addEventListener("click",ek,!0),document.addEventListener("mousemove",nk,!0)};async function sk(n){cp=n,(En=document.createElement("div")).id=lt.params.videoContainerId,En.style.position="fixed",En.style.top="0px",En.style.left="0px",En.style.width=lt.params.videoViewerWidth+"px",En.style.height=lt.params.videoViewerHeight+"px",dp(En),(De=document.createElement("video")).setAttribute("playsinline",""),De.id=lt.params.videoElementId,De.srcObject=n,De.autoplay=!0,De.style.position="absolute",De.style.width=lt.params.videoViewerWidth+"px",De.style.height=lt.params.videoViewerHeight+"px",dp(De),(Yn=document.createElement("canvas")).id=lt.params.videoElementCanvasId,Yn.style.display="none",(Rn=document.createElement("canvas")).id=lt.params.faceOverlayId,Rn.style.display=lt.params.showFaceOverlay?"block":"none",Rn.style.position="absolute",lt.params.mirrorVideo&&(De.style.setProperty("-moz-transform","scale(-1, 1)"),De.style.setProperty("-webkit-transform","scale(-1, 1)"),De.style.setProperty("-o-transform","scale(-1, 1)"),De.style.setProperty("transform","scale(-1, 1)"),De.style.setProperty("filter","FlipH"),Rn.style.setProperty("-moz-transform","scale(-1, 1)"),Rn.style.setProperty("-webkit-transform","scale(-1, 1)"),Rn.style.setProperty("-o-transform","scale(-1, 1)"),Rn.style.setProperty("transform","scale(-1, 1)"),Rn.style.setProperty("filter","FlipH")),(or=document.createElement("canvas")).id=lt.params.faceFeedbackBoxId,or.style.display=lt.params.showFaceFeedbackBox?"block":"none",or.style.border="solid",or.style.position="absolute",(Mn=document.createElement("div")).id=lt.params.gazeDotId,Mn.style.display=lt.params.showGazeDot?"block":"none",Mn.style.position="fixed",Mn.style.zIndex=99999,Mn.style.left="-5px",Mn.style.top="-5px",Mn.style.background="red",Mn.style.borderRadius="100%",Mn.style.opacity="0.7",Mn.style.width="10px",Mn.style.height="10px",En.appendChild(De),document.body.appendChild(En);const t=new Promise(e=>{De.addEventListener("loadeddata",function r(s){ak(De.videoWidth,De.videoHeight),lt.setVideoViewerSize(lt.params.videoViewerWidth,lt.params.videoViewerHeight),En.appendChild(Yn),En.appendChild(Rn),En.appendChild(or),document.body.appendChild(Mn),s.target.removeEventListener(s.type,r),e()})});rk(),Ca=!1,K2=performance.now(),await t,await kg()}function dp(n){navigator.vendor&&navigator.vendor.indexOf("Apple")>-1?(n.style.opacity=lt.params.showVideo?"1":"0",n.style.display="block"):n.style.display=lt.params.showVideo?"block":"none"}function ak(n,t){Yn&&(Yn.width=n,Yn.height=t),Rn&&(Rn.width=n,Rn.height=t)}lt.begin=function(n){return"https:"!==window.location.protocol&&"localhost"!==window.location.hostname&&window.chrome&&alert("WebGazer works only over https. If you are doing local development, you need to run a local server."),lt.params.saveDataAcrossSessions&&async function(){wg=(wg=await Au().getItem(J2))||Q2;var t=await Au().getItem(Z2);for(var e in Lo=t=t||Q2,Zn)Zn[e].setData(t);console.log("loaded stored data into regression model")}(),n=n||function(){console.log("No stream")},yg?(sk(yg),lt):(void 0===navigator.mediaDevices&&(navigator.mediaDevices={}),void 0===navigator.mediaDevices.getUserMedia&&(navigator.mediaDevices.getUserMedia=function(t){var e=navigator.webkitGetUserMedia||navigator.mozGetUserMedia;return e?new Promise(function(r,s){e.call(navigator,t,r,s)}):Promise.reject(new Error("Unfortunately, your browser does not support access to the webcam through the getUserMedia API. Try to use the latest version of Google Chrome, Mozilla Firefox, Opera, or Microsoft Edge instead."))}),new Promise(async(t,e)=>{let r;try{r=await navigator.mediaDevices.getUserMedia(lt.params.camConstraints),await sk(r),t(lt)}catch(s){n(),De=null,r=null,e(s)}}))},lt.isReady=function(){return null!==Yn&&Yn.width>0},lt.pause=function(){return Ca=!0,lt},lt.resume=async function(){return Ca&&(Ca=!1,await kg()),lt},lt.end=function(){return Ca=!0,En.remove(),Mn.remove(),lt},lt.stopVideo=function(){return cp.getTracks()[0].stop(),En.removeChild(Rn),En.removeChild(or),lt},lt.detectCompatibility=function(){return void 0!==(navigator.mediaDevices.getUserMedia||navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia)},lt.showVideoPreview=function(n){return lt.params.showVideoPreview=n,lt.showVideo(n&&lt.params.showVideo),lt.showFaceOverlay(n&&lt.params.showFaceOverlay),lt.showFaceFeedbackBox(n&&lt.params.showFaceFeedbackBox),lt},lt.showVideo=function(n){return lt.params.showVideo=n,De&&dp(De),En&&dp(En),lt},lt.showFaceOverlay=function(n){return lt.params.showFaceOverlay=n,Rn&&(Rn.style.display=n?"block":"none"),lt},lt.showFaceFeedbackBox=function(n){return lt.params.showFaceFeedbackBox=n,or&&(or.style.display=n?"block":"none"),lt},lt.showPredictionPoints=function(n){return lt.params.showGazeDot=n,Mn&&(Mn.style.display=n?"block":"none"),lt},lt.saveDataAcrossSessions=function(n){return lt.params.saveDataAcrossSessions=n,lt},lt.applyKalmanFilter=function(n){return lt.params.applyKalmanFilter=n,lt},lt.setCameraConstraints=async function(n){var t,e;if(lt.params.camConstraints=n,cp){lt.pause(),t=cp.getVideoTracks()[0];try{await t.applyConstraints(lt.params.camConstraints),ak((e=t.getSettings()).width,e.height)}catch(r){return void console.log(r)}lt.setVideoViewerSize(lt.params.videoViewerWidth,lt.params.videoViewerHeight),lt.getTracker().reset(),await lt.resume()}},lt.setStaticVideo=function(n){return yg=n,lt},lt.setVideoViewerSize=function(n,t){lt.params.videoViewerWidth=n,lt.params.videoViewerHeight=t,De.style.width=n+"px",De.style.height=t+"px",En.style.width=n+"px",En.style.height=t+"px",Rn.style.width=n+"px",Rn.style.height=t+"px";var e=lt.computeValidationBoxSize();or.style.top=e[0]+"px",or.style.left=e[1]+"px",or.style.width=e[2]+"px",or.style.height=e[3]+"px"},lt.addMouseEventListeners=function(){return rk(),lt},lt.removeMouseEventListeners=function(){return document.removeEventListener("click",ek,!0),document.removeEventListener("mousemove",nk,!0),lt},lt.recordScreenPosition=function(n,t,e){return Ig(n,t,e||hp[0]),lt},lt.storePoints=function(n,t,e){j2[e]=n,q2[e]=t},lt.setTracker=function(n){if(void 0===pp[n]){for(var t in console.log("Invalid tracker selection"),console.log("Options are: "),pp)console.log(t);return lt}return xg=pp[n](),lt},lt.setRegression=function(n){if(void 0===_u[n]){for(var t in console.log("Invalid regression selection"),console.log("Options are: "),_u)console.log(t);return lt}return Lo=Zn[0].getData(),(Zn=[_u[n]()])[0].setData(Lo),lt},lt.addTrackerModule=function(n,t){pp[n]=function(){return new t}},lt.addRegressionModule=function(n,t){_u[n]=function(){return new t}},lt.addRegression=function(n){var t=_u[n]();return Lo=Zn[0].getData(),t.setData(Lo),Zn.push(t),lt},lt.setGazeListener=function(n){return bg=n,lt},lt.clearGazeListener=function(){return bg=X2,lt},lt.setVideoElementCanvas=function(n){return Yn=n},lt.clearData=async function(){!function(){for(var n in Au().clear(),Zn)Zn[n].init()}()},lt.getTracker=function(){return xg},lt.getRegression=function(){return Zn},lt.getCurrentPrediction=function(n){return tk(n)},lt.params.getEventTypes=function(){return hp.slice()},lt.getVideoElementCanvas=function(){return Yn},lt.getVideoPreviewToCameraResolutionRatio=function(){return[lt.params.videoViewerWidth/De.videoWidth,lt.params.videoViewerHeight/De.videoHeight]},lt.getStoredPoints=function(){return[j2,q2]};const pM=lt})(),webgazer=Sg.default})();